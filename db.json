{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/default.styl","path":"css/default.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/og_image.png","path":"img/og_image.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/myavatar.png","path":"img/myavatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/column.js","path":"js/column.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"d2a2c7cdc139ed64ab1a43be6e0b9553d435b4a0","modified":1618255111356},{"_id":"source/_posts/.DS_Store","hash":"911abd0dc7d500a7e25069c18a4398e5c0105dce","modified":1618292921592},{"_id":"source/_posts/AppleScriptでVimの保存時のファイル更新を取得してブラウザを更新する.md","hash":"e648869e3a841782683bb6078bcbfc093bda1c71","modified":1613875325147},{"_id":"source/google54e17a966e7cdc95.html","hash":"e74cde9bfcbf68cb593eee8696819546113a6cf8","modified":1614688263074},{"_id":"source/_posts/CSSについて.md","hash":"4374368e4bb7f7e46ca6ce18bac8599cac58703e","modified":1614688995343},{"_id":"source/_posts/Ctrl-cとEscの違い.md","hash":"26e6ad7f0e45192c928428fa30d6532b589f878f","modified":1613314710627},{"_id":"source/_posts/Floatレイアウトについて.md","hash":"954e60f658617c5b4824895d63dfcb47550f0ace","modified":1614342383577},{"_id":"source/_posts/GitHubでブログを作成する.md","hash":"3981d585fdfa350502636a00345bff97251c49ca","modified":1611514087007},{"_id":"source/_posts/HTMLの概要.md","hash":"de5364f241d87b0561c7c8580577d3e73048f423","modified":1612452355901},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」.md","hash":"0e5cc72b5422c46eb679a7c1463449f67cb9e6c4","modified":1614500264871},{"_id":"source/_posts/VimにPluginマネージャー「Vundle」を入れる.md","hash":"ed1f83e1577d4dd583432cc35d446cc7917bbb31","modified":1613568859776},{"_id":"source/_posts/Markdownで改行を入れる.md","hash":"76acec206b04f7c2c4f8fead64822df09b07bb35","modified":1613259647211},{"_id":"source/_posts/Swiftで迷路を解く.md","hash":"4538dff54b86ad3a7660c3489a5630f5990e8ea0","modified":1613827734403},{"_id":"source/_posts/div属性について.md","hash":"f29d39549fd558486608f4fb9a291d86376e9e70","modified":1614083639978},{"_id":"source/_posts/iframeのaline属性について.md","hash":"5bbc5156d9798998e65423afc7345897c73f6bba","modified":1613139280371},{"_id":"source/_posts/XCodeでSwiftの練習.md","hash":"4d26e98b6e1183ece781699c18cf64de6d7a4c1b","modified":1611511568440},{"_id":"source/_posts/iframeについて.md","hash":"e4958a2fc91871130a118136a73ac7711a6466ef","modified":1613046735119},{"_id":"source/_posts/zshとaliasについて.md","hash":"6799f736a0763f7e3c58c6bce0519ffe280cc654","modified":1613875511088},{"_id":"source/_posts/formについて.md","hash":"c42bd275ca853d31805667ab350f21820a961fc4","modified":1612915440216},{"_id":"source/_posts/【Android-Studio】Materila-Designを使用して見た目をリッチにする.md","hash":"f3bf120110343d6d8c118339a4c08ffd8033f91b","modified":1615924910086},{"_id":"source/_posts/vimのカレントファイルをブラウザで開く.md","hash":"c8a8faa0a005f928f777967ab215944aca9bd227","modified":1614037047870},{"_id":"source/_posts/【Android-Studio】build-Gradleが２つあるのはなぜなのか.md","hash":"d32cdca637920c8c5347611542d5f0f5c08aba98","modified":1615925134047},{"_id":"source/_posts/【CSS】positionプロパティについて.md","hash":"29497354f35ee952b76729038e48d90115050314","modified":1614966936794},{"_id":"source/_posts/【CSS】マージン・パディング・ボーダーについて.md","hash":"d14729c2315079baf6cd177aa1a55bc3effdcf30","modified":1614967116982},{"_id":"source/_posts/【Blog】GoogleSerchConsoleにブログを認識させる.md","hash":"38d1e9555075149e4487e6419bf2c34f388f1ad0","modified":1617636214492},{"_id":"source/_posts/【Git】HEAD-を指定したときに「no-matches-found-HEAD-」が出る時の対処法.md","hash":"a0df455b24491b67a063524e270927d29faf60f5","modified":1616691128951},{"_id":"source/_posts/【Git】Git独自のaliasを設定して長いコマンドを短くする.md","hash":"effd37e93fef668bb5a051173554c2cbc75300d3","modified":1617110041731},{"_id":"source/_posts/【Git】add-staging-の必要性について.md","hash":"e5c163e9cd4444d6c756c11750277a60412f7c66","modified":1616691251281},{"_id":"source/_posts/【Git】git-flowとGitHub-flowの違いについて.md","hash":"4549bac97ff48abf8dc5444767197accf03cd7a5","modified":1616691501941},{"_id":"source/_posts/【Git】pullは何をしているのか.md","hash":"b9ee620f5e1114ff6a6be53a32914c56d08f4476","modified":1617636229007},{"_id":"source/_posts/【Git】git-logの色々な表示のさせ方.md","hash":"a480dd2e6752f2de9f6014591cb2c576dfb5d0bb","modified":1616688029468},{"_id":"source/_posts/【Git】「waring-LF-will-be-replaced-by-CRLF-in-XXX」が出た時の対処法.md","hash":"4304e6486d89c388adb5439ab4ab69d234a39740","modified":1616689636896},{"_id":"source/_posts/【Git】コミットを探す.md","hash":"7227d0ce44d5d62be9dfeb85040cf89e8ad57f1f","modified":1617636538206},{"_id":"source/_posts/【Git】コマンドラインの構文.md","hash":"86c468daea196dbd772da4f48eead95223ec65a8","modified":1615193034470},{"_id":"source/_posts/【Git】コミットメッセージのテンプレートを設定する.md","hash":"138cfb95a238cacce44363452386c53745383cd1","modified":1617944894915},{"_id":"source/_posts/【Git】タグの扱い方.md","hash":"bc7d7c1fbf999c30ea7ec35f803420330c685181","modified":1615575901025},{"_id":"source/_posts/【Git】ベアリポジトリとはなにか.md","hash":"0c95f41bb6fda2b62ab58f37f22139ea3b54ee8a","modified":1616686627811},{"_id":"source/_posts/【Git】ファイル名が日本語のときに文字化けするのを防ぐ.md","hash":"85ac04db6b4781a955675fe7798ba8315756a05a","modified":1617944573383},{"_id":"source/_posts/【Git】ファイルの巻き戻し方法.md","hash":"6e946936e0c454b4251ae0e24c34643c3f607996","modified":1617109978496},{"_id":"source/_posts/【Git】ブランチの差分を比較する.md","hash":"a70547c23d2635623ad38e262eefcc1a3764c243","modified":1617637285761},{"_id":"source/_posts/【Git】リポジトリ内で管理対象になっているファイルを確認する.md","hash":"4878872c54ed740bd766f7f488dffa823c7c4eaa","modified":1618292633684},{"_id":"source/_posts/【Git】マージの中止の仕方.md","hash":"29f278da81a5be3b1622882948210b14d0d8007c","modified":1617636661906},{"_id":"source/_posts/【Git】リモート関係のブランチの操作.md","hash":"2befe56ea2b86b3d72a0f8fd3db41297a8aec7a4","modified":1617944631962},{"_id":"source/_posts/【Git】リモートとタグの操作.md","hash":"079ff12deb0cebd822592ccf00a9c53f988e101b","modified":1617637348879},{"_id":"source/_posts/【Git】ログに更新情報も一緒に表示させる.md","hash":"45e320d67d5e0ce019dd2a1cf09f8356949d44dc","modified":1617944615665},{"_id":"source/_posts/【Git】各エリアを比較-diff-する.md","hash":"010d20a557c7369f48f6399cc6a752e770f01e44","modified":1617933939701},{"_id":"source/_posts/【Git】小分けにcommitするために使えるコマンド.md","hash":"f11b2afa65fb5b53daadf4df9824680d3bcc3415","modified":1617933898174},{"_id":"source/_posts/【Git】直前のコミットを修正する.md","hash":"0b31120ab87d352ba636006d161226b49991168d","modified":1617933968128},{"_id":"source/_posts/【Git】管理されているファイル情報をみる.md","hash":"a16f46829dfc3607cc1909dd9a9deeea77aa0d74","modified":1615077940651},{"_id":"source/_posts/【Gitエラー】「fatal-Out-of-memory-malloc-failed-tried-to-allocate-xxxxxxxxxxx-bytes-」の解決方法.md","hash":"5ce897ee59110fc11efd434f234a37fd1f226c9f","modified":1614261490095},{"_id":"source/_posts/【Mac】ツールのバージョンのチェック方法.md","hash":"2d1063ebb9e7a9510dd87bff225dde1bb19b998f","modified":1616691682151},{"_id":"source/_posts/【Kotlin】View内のコンポーネントの取得方法.md","hash":"9320a43f3073679a032be447dcccf8ecec856058","modified":1615576232232},{"_id":"source/_posts/【Git】管理しているファイルのリネームを簡単にする.md","hash":"1da2feb31873b0e97d873cffa8da2dab1dbf9151","modified":1617945167448},{"_id":"source/_posts/【Linuxコマンド】よく使うlsコマンドオプション.md","hash":"be34b6a3b1db278046df75ccfa25cd5e3df66270","modified":1614479552785},{"_id":"source/_posts/【Notion】文字サイズ変更ショートカット.md","hash":"ca1648a947b07f6fe567d8176868f6edbaa62c3d","modified":1611590167953},{"_id":"source/_posts/【Shell】コマンドラインから中身のあるファイルを作成する.md","hash":"fe975b2764eba779ab7fd45f535f5537568372f0","modified":1616689848865},{"_id":"source/_posts/【Git】gitが認識しているファイルを自動でステージングしながらコミットする.md","hash":"4247ee89cfc4d0720707514e0174bd1a2f623a71","modified":1616691847429},{"_id":"source/_posts/【Shell】出力をそのままクリップボードにコピーする.md","hash":"244f672c09a53ecfe9dff4d66eed91a8a0f79ddc","modified":1614967460369},{"_id":"source/_posts/【Shell】コマンドラインのカーソル移動.md","hash":"0465fe7990b8c70ceabe8cd84ee6488cab381c57","modified":1615384792681},{"_id":"source/_posts/【Swift】Array内の要素を指定して消去する.md","hash":"f137adb9cf433c395008448c60f8f683e5d06fb0","modified":1614608299121},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定.md","hash":"73b0bd6e4655531a7582475b246683c24b9b2913","modified":1615575646798},{"_id":"source/_posts/【Unity】URPを導入する.md","hash":"321c79b182ce71398d50fffdc19fd12e2456b0af","modified":1616849584249},{"_id":"source/_posts/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法.md","hash":"1ba82c81451929c6289fe6791712a81cf0846b7e","modified":1617110936087},{"_id":"source/_posts/【Unity】ディレクティブを使用しているときに発生するwarning対策.md","hash":"9ed3a6d11e2e4f81d0eab07575731df19e9ca9d0","modified":1617108135721},{"_id":"source/_posts/【Vim】バックスペースが効かなくなった場合の対処法.md","hash":"53ed7ac8e1f5796e7d1185f01d66aa59983b18f2","modified":1614342057465},{"_id":"source/_posts/【Vimプラグイン】囲う記述を楽にする「vim-surround」.md","hash":"95e868ee502f8aff2c566367592356f53a87b2bd","modified":1614419492447},{"_id":"source/_posts/【VSCode】開いたテキストが文字化けするときの対処法方.md","hash":"b4b8377640f08e8eaf0911423af5caf9b382aa68","modified":1615575143467},{"_id":"source/_posts/【Winodws】コンソールのスクリーンバッファを複数枚作る.md","hash":"1fc142c4df5d14cd19afd6d3a2f45df5c94fb791","modified":1615924391123},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法.md","hash":"33d34fc1d58fe775ee4b0233dbee7f1c08c5a480","modified":1614607805846},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする.md","hash":"17feda4b9debcd5d25cd5358ed1d78d7ef42a480","modified":1615732448118},{"_id":"source/_posts/インラインCSSと内部CSSいついて.md","hash":"45416714ded19dc375564db4bbbb6f1bac75153d","modified":1614697939351},{"_id":"source/_posts/テキストレイアウトについて.md","hash":"99e109a8ce8da65b21066d28cfea802b36477347","modified":1612534415730},{"_id":"source/_posts/テーブルについて.md","hash":"c8c503e31fbfdb72170e20b4122135c3d40e6c8f","modified":1612914390587},{"_id":"source/_posts/【Zsh】Zsh拡張フレームワーク「Prezto」.md","hash":"689ce6d6c514b09994e0f9f6b00f2a641beff83f","modified":1615295770307},{"_id":"source/_posts/リストについて.md","hash":"ac99d3e51ba6ecf1db1be791a4820cad172e94ec","modified":1612623402789},{"_id":"source/_posts/入力補完プラグイン「Deoplete」の導入方法.md","hash":"64de1b1b1b5dfb3c536453feb60a6ba56cad8395","modified":1613875473141},{"_id":"source/_posts/段落と改行について.md","hash":"d0458b9777849578258ea41e03bd4c03aa7ab8aa","modified":1612706795419},{"_id":"source/_posts/リンクについて.md","hash":"9a349de1f976ffb763302963eb74225282927d91","modified":1614608481337},{"_id":"source/_posts/画像を扱う.md","hash":"963288395eee6fa3282da07df5c97aa4c9218b85","modified":1612790122493},{"_id":"source/_posts/自作ソート【Swift】.md","hash":"4c64d6a930a968cef8155b0b51923b2cac77b179","modified":1614160320858},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/ターミナル作業終了時にでるパスワード入力画面.png","hash":"4b3eee2868c17abcb3ca8e5170a865af9d28351a","modified":1614482538154},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/証明書作成時の入力内容.png","hash":"81dd828c234268f8af2c2b83912302191dd43cf4","modified":1614482593244},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/証明書完成.png","hash":"8ffb721ab761d448d8c75cb6a2f335ee72feb4bd","modified":1614482205950},{"_id":"source/_posts/【CSS】positionプロパティについて/position.png","hash":"1de53377a2b184a780341b5b301271c9513ad430","modified":1614966790695},{"_id":"source/_posts/【Unity】URPを導入する/1.png","hash":"0503be15f40864dc116d3dc842a17565abc09810","modified":1616814480000},{"_id":"source/_posts/【Unity】URPを導入する/2.png","hash":"c7b1a3f83d915ed1ff482e262aae5b1829b49a5a","modified":1616814480000},{"_id":"source/_posts/【Unity】URPを導入する/3.png","hash":"0774680d476dc7edd92d8e6e263d5f2826a52f55","modified":1616814480000},{"_id":"source/_posts/【Unity】URPを導入する/4.png","hash":"55c3ac7db315fd80f3b99784e1a811294e38f43e","modified":1616814480000},{"_id":"source/_posts/【Unity】URPを導入する/6.png","hash":"63bf0fadd488115238768661fddc88766bf37a78","modified":1616814480000},{"_id":"source/_posts/【Unity】URPを導入する/5.png","hash":"415c78b1aeddeb530d3ac7e338f7e22b2ebf1d66","modified":1616814480000},{"_id":"source/_posts/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/3.png","hash":"21016ca4da54f147645604051725531d1f3a3cb7","modified":1617109448122},{"_id":"source/_posts/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/4.png","hash":"a45f804e0abdb60e762efe5434a1f49c38722331","modified":1617109470004},{"_id":"source/_posts/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/1.png","hash":"e59ecf260a6d9a419d01c77799266312b2e96715","modified":1617109097996},{"_id":"source/_posts/【VSCode】開いたテキストが文字化けするときの対処法方/Search.png","hash":"8bbbb90066aaedbe2cc746d7ef9cb76e52e4bf6a","modified":1615574116228},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/EntryPointのアシスタントエリアでの表示.png","hash":"7da972c696776f8f7640c8883c2e135cc1defafc","modified":1614565309078},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/EntryPointの矢印.png","hash":"96514a1c79f48781dda5b572519a0758a52e9c88","modified":1614565256704},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/EntryPoint変更(マウス).gif","hash":"63a0759b64ab4ec1788307eba4f2412d51d4f40c","modified":1614567736252},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/Inspector.png","hash":"88eec616a2ba0c652230caadb941856a05982487","modified":1614578379539},{"_id":"themes/icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616774556000},{"_id":"themes/icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616774556000},{"_id":"themes/icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616774556000},{"_id":"themes/icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616774556000},{"_id":"themes/icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616774556000},{"_id":"themes/icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616774556000},{"_id":"themes/icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616774556000},{"_id":"themes/icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616774556000},{"_id":"themes/icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616774556000},{"_id":"themes/icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616774556000},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/Xcode起動時の確認画面.png","hash":"e707e9a8104eeefbcdfcbd37094138c9767e64e9","modified":1614500094768},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/証明書作成時の警告.png","hash":"09776211264743fbc28b7afbfaec85e31e782592","modified":1614482175814},{"_id":"source/_posts/【Unity】URPを導入する/7.png","hash":"9c9c052f8dce9480238cc19a246dadb78fdbc07c","modified":1616814480000},{"_id":"source/_posts/【Unity】URPを導入する/8.png","hash":"143dadd6ba3d86a8f18ae6888e5b8d6279347b57","modified":1616814480000},{"_id":"source/_posts/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/2.png","hash":"bb08739e4bab0d044880ee7871753bcf04bdd086","modified":1617109526128},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/TableVIew.png","hash":"1ae0db52a7dbbe11eb4776b1a01805bc63a0c272","modified":1615667568806},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/完成.png","hash":"066bb479792d05dfac9f03b98922e5650feb66bd","modified":1615731920792},{"_id":"themes/icarus/.DS_Store","hash":"8cafeb1244abf84e01382cf9db29d0f5ac40415c","modified":1618254372496},{"_id":"themes/icarus/.eslintignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1616774556000},{"_id":"themes/icarus/.npmignore","hash":"42242c8da7a020a3295e7dd3d18bf022cb08b661","modified":1616774556000},{"_id":"themes/icarus/package.json","hash":"635402ea312dfe670bafc736328b9788b993a500","modified":1616774556000},{"_id":"themes/icarus/README.md","hash":"247ec8047ee3105d31099dd8e6ca498b6bff1336","modified":1616774556000},{"_id":"themes/icarus/LICENSE","hash":"86037e5335a49321fa73b7815cab542057fac944","modified":1616774556000},{"_id":"themes/icarus/CONTRIBUTING.md","hash":"70254c6778c1e41bb2ff222bbf3a70b2239b9bc1","modified":1616774556000},{"_id":"themes/icarus/.eslintrc.json","hash":"43c7740158c8690242720b4ff7fa11426fc20c79","modified":1616774556000},{"_id":"themes/icarus/.github/dependabot.yml","hash":"d532d0db30e42211f35823b9885f3ed1b2d51777","modified":1616774556000},{"_id":"themes/icarus/.github/stale.yml","hash":"88c73f6216c5666d2f60b1e8fe690a3f6e561e42","modified":1616774556000},{"_id":"themes/icarus/include/config.js","hash":"1ff0f174e9670074ad2bee890d5b6da486800c9a","modified":1616774556000},{"_id":"themes/icarus/include/dependency.js","hash":"d30dbcefd58619f6705d6369b644bc7ba44d2421","modified":1616774556000},{"_id":"themes/icarus/include/register.js","hash":"a974b56a1fbb254f1ae048cc2221363faaccec25","modified":1616774556000},{"_id":"themes/icarus/languages/de.yml","hash":"01d9c27c3c9224d8c58b1cf7099ef008b9411a45","modified":1616774556000},{"_id":"themes/icarus/languages/en.yml","hash":"1bdb74288808c4d306b46630860e586a1fcd88a7","modified":1616774556000},{"_id":"themes/icarus/languages/es.yml","hash":"48fe3d7d304239b5e5e93f63600093700d6f0fed","modified":1616774556000},{"_id":"themes/icarus/languages/id.yml","hash":"c04fca89e536d539a8bf95980bff7dff79125ba3","modified":1616774556000},{"_id":"themes/icarus/languages/fr.yml","hash":"14765cc6216b4af5a05341315c9f6ee54d636a78","modified":1616774556000},{"_id":"themes/icarus/languages/ja.yml","hash":"7568f246a21813527ccea8a1da72a9526aa2d233","modified":1616774556000},{"_id":"themes/icarus/languages/ko.yml","hash":"f2211a8ca1d73f05a1c931aa11accb4e34c483c4","modified":1616774556000},{"_id":"themes/icarus/languages/pl.yml","hash":"612639b0e0a15185c12eecfe3e8913b629ecdfdf","modified":1616774556000},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"531b22c71fab8aae60ddc7599aaa5f46140cf2c1","modified":1616774556000},{"_id":"themes/icarus/languages/ru.yml","hash":"bf784c6f31e8fb7ed78509468bddecd447c3b73b","modified":1616774556000},{"_id":"themes/icarus/languages/tr.yml","hash":"96d94f7a5d56b2682ae2792f0808139d4b950704","modified":1616774556000},{"_id":"themes/icarus/languages/vn.yml","hash":"64307bfa16d851334e2f37a29a84d644624c2060","modified":1616774556000},{"_id":"themes/icarus/languages/tk.yml","hash":"e5b9b369bbcf90c199a65a877eb75fba05cd7f90","modified":1616774556000},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"82ff607b1671b88d259d10b6ce8ca1bb05b2cff4","modified":1616774556000},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"92f8cf599ad06bb14f79f4806ac4c695f60044d7","modified":1616774556000},{"_id":"themes/icarus/layout/archive.jsx","hash":"05677e93d4a43f417dbbf0d63ca37a99e6349e3b","modified":1616774556000},{"_id":"themes/icarus/layout/categories.jsx","hash":"b8ad43e28a4990d222bfbb95b032f88555492347","modified":1616774556000},{"_id":"themes/icarus/layout/layout.jsx","hash":"a5829907b219e95266f7ed5ee6203e60e2273f93","modified":1616774556000},{"_id":"themes/icarus/layout/index.jsx","hash":"0a84a2348394fa9fc5080dd396bd28d357594f47","modified":1616774556000},{"_id":"themes/icarus/layout/category.jsx","hash":"fd15e4eac32de9ac8687aeb3dbe179ab61375700","modified":1616774556000},{"_id":"themes/icarus/layout/page.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1616774556000},{"_id":"themes/icarus/scripts/index.js","hash":"0c666db6fcb4ffc4d300f4e108c00ee42b1cbbe6","modified":1616774556000},{"_id":"themes/icarus/layout/tags.jsx","hash":"2c42cb64778235dd220c563a27a92108ddc50cc4","modified":1616774556000},{"_id":"themes/icarus/layout/tag.jsx","hash":"d2f18cac32ca2725d34ccff3f2051c623be6c892","modified":1616774556000},{"_id":"themes/icarus/layout/post.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1616774556000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/bug_report.md","hash":"5d3abdc1a2a79ef9822865184eced6e31066d8f6","modified":1616774556000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/Bug反馈.md","hash":"d801be6937df21e63113be8840b2e23c465db87b","modified":1616774556000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/config.yml","hash":"42afb69546eae522e340e3adb99f7bfc4cc4c397","modified":1616774556000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/feature_request.md","hash":"05313e241a3d43fdadb0f74390b562c07c25d4d0","modified":1616774556000},{"_id":"themes/icarus/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md","hash":"e106fa240c24c8bfbdd623549651600c6d786c9c","modified":1616774556000},{"_id":"themes/icarus/.github/workflows/github-release.yml","hash":"48b6bd2cc567687a7b1648c55c8f9de9d44fa9e1","modified":1616774556000},{"_id":"themes/icarus/.github/workflows/npm-publish.yml","hash":"4eabc0c60cb7102fdd5e4b0fbd8c0ac4c17cc8d0","modified":1616774556000},{"_id":"themes/icarus/.github/workflows/lint.yml","hash":"71f04b66e48f065285ba109939999876ef411598","modified":1616774556000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/功能建议.md","hash":"c6f60f37e6cd0bc21a81b3b07f84e04e9e80fb57","modified":1616774556000},{"_id":"themes/icarus/include/migration/head.js","hash":"269ba172013cbd2f10b9bc51af0496628081329b","modified":1616774556000},{"_id":"themes/icarus/.github/workflows/test.yml","hash":"f816a5970f4ad4fcf6c8350dbcd4c300c6986cb4","modified":1616774556000},{"_id":"themes/icarus/include/schema/config.json","hash":"ac633f9d349bca4f089d59d2c3738b57376f1b31","modified":1616774556000},{"_id":"themes/icarus/include/migration/v2_v3.js","hash":"3ccb2d2ce11018bebd7172da66faecc3983bff00","modified":1616774556000},{"_id":"themes/icarus/include/migration/v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1616774556000},{"_id":"themes/icarus/source/.DS_Store","hash":"f31afe6293e1da10e237590d58ee8f1e921550c8","modified":1618254383080},{"_id":"themes/icarus/include/style/card.styl","hash":"f78674422eb408cd17c17bbdc3ee1ebe4a453e05","modified":1616774556000},{"_id":"themes/icarus/include/style/article.styl","hash":"580b1e9bd356ed6781c32ccc49c6fa3486b94620","modified":1616774556000},{"_id":"themes/icarus/include/style/codeblock.styl","hash":"30bee4cf6792e9665eb648cc20b352d9eaff1207","modified":1616774556000},{"_id":"themes/icarus/include/style/base.styl","hash":"2bca6ad099949d52236c87db8db1002ffb99774c","modified":1616774556000},{"_id":"themes/icarus/include/style/donate.styl","hash":"8d0af00628c13134b5f30a558608e7bebf18c2ec","modified":1616774556000},{"_id":"themes/icarus/include/style/footer.styl","hash":"a4ad715dee38b249538ac6cce94efc9b355a904b","modified":1616774556000},{"_id":"themes/icarus/include/style/helper.styl","hash":"9f3393e6122cc9f351091bfab960674e962da343","modified":1616774556000},{"_id":"themes/icarus/include/style/navbar.styl","hash":"ecc73c8ad504c0fa4bb910eb51500c14e0a8d662","modified":1616774556000},{"_id":"themes/icarus/include/style/button.styl","hash":"0fb35b4786be1b387c751fa2849bc71523fcedd4","modified":1616774556000},{"_id":"themes/icarus/include/style/pagination.styl","hash":"b81bcd7ff915b4e9299533addc01bc4575ec35e3","modified":1616774556000},{"_id":"themes/icarus/include/style/search.styl","hash":"416737e1da4e7e907bd03609b0fee9e2aacfe56c","modified":1616774556000},{"_id":"themes/icarus/include/style/widget.styl","hash":"c746902251136544eb3fe523235b3183f4189460","modified":1616774556000},{"_id":"themes/icarus/include/util/console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1616774556000},{"_id":"themes/icarus/include/style/responsive.styl","hash":"207083fe287612cddee6608b541861b14ac8de81","modified":1616774556000},{"_id":"themes/icarus/include/style/timeline.styl","hash":"ea61798a09bffdda07efb93c2ff800b63bddc4c4","modified":1616774556000},{"_id":"themes/icarus/layout/common/article.jsx","hash":"a8edf017d1f78009284fd1f7c55fdffc9cdc0152","modified":1616774556000},{"_id":"themes/icarus/layout/common/donates.jsx","hash":"889fb0a7ccc502f0a43b4a18eb330e351e50493c","modified":1616774556000},{"_id":"themes/icarus/include/style/plugin.styl","hash":"679b61b5fc5b3281735a21c37aeb64229d9c51ea","modified":1616774556000},{"_id":"themes/icarus/layout/common/footer.jsx","hash":"baa8e40e036a3ec0114d96893b708435104b4ba9","modified":1616774556000},{"_id":"themes/icarus/layout/common/head.jsx","hash":"37f2f2efcb102c706e2460dc9cdeaa302366d318","modified":1616774556000},{"_id":"themes/icarus/layout/common/comment.jsx","hash":"427089c33002707b76e2f38709459a6824fd0f9b","modified":1616774556000},{"_id":"themes/icarus/layout/common/plugins.jsx","hash":"f6826c1a5f5f59f4a0aa00c63bdb0ad4ff4eab69","modified":1616774556000},{"_id":"themes/icarus/layout/common/scripts.jsx","hash":"0fe1fddab431fb9f63906d8c480d5cd6b33abc32","modified":1616774556000},{"_id":"themes/icarus/layout/common/share.jsx","hash":"c9fb0319ad5e5a10ad3636b26a6c2afed14c590f","modified":1616774556000},{"_id":"themes/icarus/layout/common/search.jsx","hash":"6f244a37293031670a2964fe424ecd062e591d7b","modified":1616774556000},{"_id":"themes/icarus/layout/common/widgets.jsx","hash":"689cf4a6b79337b11d1d56afa9dda09223a809a1","modified":1616774556000},{"_id":"themes/icarus/layout/common/navbar.jsx","hash":"fcd9fd4624dee49207ef09ea2a1c63f524f3710c","modified":1616774556000},{"_id":"themes/icarus/layout/plugin/animejs.jsx","hash":"e2aa27c3501a58ef1e91e511557b77395c2c02aa","modified":1616774556000},{"_id":"themes/icarus/layout/widget/profile.jsx","hash":"0d3a7fd922c12cc45d2c8d26a8f4d3a9a6ed0ae0","modified":1616774556000},{"_id":"themes/icarus/source/css/cyberpunk.styl","hash":"ae17d3528df0c3f089df14a06b7bd82f1bc5fed9","modified":1616774556000},{"_id":"themes/icarus/source/css/style.styl","hash":"5b9815586e993a6ccbe8cdcfc0c65ea38fc315ac","modified":1616774556000},{"_id":"themes/icarus/layout/plugin/back_to_top.jsx","hash":"7fc0c5aaabd7d0eaff04cb68ec139442dc3414e8","modified":1616774556000},{"_id":"themes/icarus/source/css/default.styl","hash":"b01da3028e5a1267a40aaae5c86a11187a2259e3","modified":1616774556000},{"_id":"themes/icarus/source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1618253751246},{"_id":"themes/icarus/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1618252592955},{"_id":"themes/icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1618252592955},{"_id":"themes/icarus/source/img/favicon.png","hash":"4bffbed8f63ec3fbcb331ee7eee1a494bf00a8e4","modified":1618253637118},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1618252592955},{"_id":"themes/icarus/source/js/animation.js","hash":"12cedd5caaf9109eed97e50eeab8f883f6e49be3","modified":1616774556000},{"_id":"themes/icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1618252592955},{"_id":"themes/icarus/source/js/.eslintrc.json","hash":"6bf0641cb69dffac97f69baea192d7fa3ab612cb","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/article.json","hash":"8d78149f44629d0848921c6fb9c008b03cef3116","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/donates.json","hash":"ae86e6f177bedf4afbe638502c12635027539305","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/comment.json","hash":"bd30bd9ffc84e88e704384acdfcaab09019a744f","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/footer.json","hash":"09d706cbb94d6da9a0d15c719ce7139325cae1c7","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/head.json","hash":"98889f059c635e6bdbd51effd04cf1cf44968a66","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/navbar.json","hash":"6691e587284c4cf450e0288680d5ff0f3565f090","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/plugins.json","hash":"6036a805749816416850d944f7d64aaae62e5e75","modified":1616774556000},{"_id":"themes/icarus/source/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/search.json","hash":"985fbcbf47054af714ead1a124869d54f2a8b607","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/providers.json","hash":"97ec953d497fb53594227ae98acaef8a8baa91da","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/sidebar.json","hash":"eb241beaec4c73e3085dfb3139ce72e827e20549","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/widgets.json","hash":"d000b4d1d09bdd64756265aa4cd2ea980ab7ddc7","modified":1616774556000},{"_id":"themes/icarus/include/schema/plugin/animejs.json","hash":"e62ab6e20bd8862efa1ed32e7c0db0f8acbcfdec","modified":1616774556000},{"_id":"themes/icarus/include/schema/common/share.json","hash":"cf4f9ff4fb27c3541b35f57db355c228fa6873e4","modified":1616774556000},{"_id":"themes/icarus/include/schema/plugin/back_to_top.json","hash":"dc0febab7e7b67075d0ad3f80f5ec8b798b68dea","modified":1616774556000},{"_id":"themes/icarus/include/schema/widget/profile.json","hash":"690ee1b0791cab47ea03cf42b5b4932ed2aa5675","modified":1616774556000},{"_id":"themes/icarus/source/js/main.js","hash":"13e4b1c4fa287f3db61aae329ad093a81992f23d","modified":1616774556000},{"_id":"themes/icarus/source/img/logo.png","hash":"8373641eea6ab860dc96b6a35d91369d6e476627","modified":1618253651703},{"_id":"themes/icarus/source/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1616774556000},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/Identifier.png","hash":"2c192e6afb6a4a61bc082653110f6786d54466c9","modified":1615667146543},{"_id":"source/_posts/【VSCode】開いたテキストが文字化けするときの対処法方/Settings.png","hash":"64641cadfc9473f99c7a318d81485132e0134923","modified":1615573885854},{"_id":"themes/icarus/source/img/myavatar.png","hash":"37e91ac0822a73a3e1112b2e7385828e4b8a83fd","modified":1618253663632},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/キーチェーン証明書作成.png","hash":"34603ca4374f3b4b9a12bde1cb2dfcf7e3a7ae9f","modified":1614482371382},{"_id":"source/_posts/【Blog】GoogleSerchConsoleにブログを認識させる/1.png","hash":"acc2af60f53e16f967684433146b6d47cb346a69","modified":1617635624161},{"_id":"source/_posts/【Blog】GoogleSerchConsoleにブログを認識させる/3.png","hash":"e32944b1c3cf04b67aafd5bcd120b4dd9bf067d1","modified":1617635655225},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/作成時オプション.png","hash":"300f25b4927a9595bac00aee086b1c5572f256e4","modified":1613322652870},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/作成済みチェック.png","hash":"ee87d8255bf69a00a1f4af7c5892362175cab2d2","modified":1615662818007},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/新規作成.png","hash":"42b8c309a26ec089e4de835e3c642080cc7b6d86","modified":1615662698782},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/ラベル追加.png","hash":"f89d4ebb2623b2de1f08117da5a1d27bb46b9d3c","modified":1613322703738},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/EntryPoint変更(Inspector).gif","hash":"aa6cd8658664a1ea928c3a88cdc63c65fdf8cced","modified":1614568222036},{"_id":"source/_posts/XCodeでSwiftの練習/2.png","hash":"ffb0a9732865e04e08d7695053556f05eab9887f","modified":1611501037816},{"_id":"source/_posts/XCodeでSwiftの練習/1.png","hash":"366e3677148373af46caacec0836ca34ba5c6642","modified":1611500084427},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/TableView参照.gif","hash":"c89967b9011dc7ba817f5ef34935a28518dfa6bf","modified":1615729099175},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/3.png","hash":"fefa9cf03acf00aa1b370d4e1529efc5a14903bd","modified":1615298669597},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/2.png","hash":"e8a45aacb41d410046c77aa29e316c27db1cc43c","modified":1615298649890},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/5.png","hash":"4d85622616a11c8f07a2c4ac4c51a9edbe1fdf13","modified":1615298703421},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/4.png","hash":"8805839f9b592c0bf2b956be3029131f63853d86","modified":1615298682588},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/7.png","hash":"32ab3ed43e29242170e1271ed682e73d217e1bbe","modified":1615298725398},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/ラベル参照.gif","hash":"e711d03c24236fe5aad6466af10fb75c664db090","modified":1615663940387},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/6.png","hash":"6016ca31066fe02d1f0f2511b048a8accdbfe263","modified":1615298714718},{"_id":"source/_posts/【Blog】GoogleSerchConsoleにブログを認識させる/2.png","hash":"d6ea971fc1b59598ae40f67dbb6770d3e96738f7","modified":1617635675525},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/最終確認.gif","hash":"7f11eff973367a75e02327126bb82a19676537fe","modified":1614578318352},{"_id":"public/post-sitemap.xml","hash":"fe3485d1261cf74adcc65f9ebed1fcc255d5530f","modified":1618673634658},{"_id":"public/page-sitemap.xml","hash":"1d62907d467418375f0d40c5f489c4cbb4c52858","modified":1618255383641},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1618255383641},{"_id":"public/js/algolia.js","hash":"a8df0c0abeeb4ee1d2d720161f3aea7339380704","modified":1618255383641},{"_id":"public/sitemap.xml","hash":"bfd695d0c02fe55a6b68e7ffc90e5196136bb87c","modified":1618673634658},{"_id":"public/js/google_cse.js","hash":"1a9881669dfdeb2b3214074eee0d3e01e52db2c4","modified":1618255383641},{"_id":"public/js/toc.js","hash":"da6fb757a1b083b8ed138bf29aad3a7bf8ec4f11","modified":1618255383641},{"_id":"public/js/insight.js","hash":"86bbdb7305d9bf19ad62d2ca2cf169fc8d9f9d31","modified":1618255383641},{"_id":"public/content.json","hash":"93352ec077dd9fdf714b24e5b3814b753ba3407b","modified":1618673634658},{"_id":"public/manifest.json","hash":"b44119b50b7d08482c94cd6765a7d099717d83d6","modified":1618255383641},{"_id":"public/google54e17a966e7cdc95.html","hash":"152d60fe5de373141369112e43ca494ab98445dc","modified":1618673634658},{"_id":"public/2021/04/14/【Git】管理しているファイルのリネームを簡単にする/index.html","hash":"0a7bfebd288ac9f1635740b996d66625e489d810","modified":1618673634658},{"_id":"public/2021/04/13/【Git】コミットメッセージのテンプレートを設定する/index.html","hash":"793beb187236fec6a35c7b33a667d2ad664ad02a","modified":1618673634658},{"_id":"public/2021/04/12/【Git】ファイル名が日本語のときに文字化けするのを防ぐ/index.html","hash":"81106861cfcf502f5796764417c72c4f884a668f","modified":1618673634658},{"_id":"public/2021/04/11/【Git】ログに更新情報も一緒に表示させる/index.html","hash":"77574689318e7a5b527f301c03e9988c2507217e","modified":1618673634658},{"_id":"public/2021/04/10/【Git】リモート関係のブランチの操作/index.html","hash":"60d97485c5e450c7507b41c990a4fe8bae5fc1c0","modified":1618673634658},{"_id":"public/2021/04/09/【Git】リポジトリ内で管理対象になっているファイルを確認する/index.html","hash":"eb84d673868b58c21668b1af121260169a8b3015","modified":1618673634658},{"_id":"public/2021/04/09/【Git】各エリアを比較-diff-する/index.html","hash":"9a06639f4d001d8e19cac8118c4e83bcd199a68d","modified":1618673634658},{"_id":"public/2021/04/08/【Git】直前のコミットを修正する/index.html","hash":"13988aea9f95f23bb7bb884b1e6ddf9fbaf439da","modified":1618673634658},{"_id":"public/2021/04/07/【Git】小分けにcommitするために使えるコマンド/index.html","hash":"b4388f5ca10140fbbdaf5c6fe6524cc7ecf140e1","modified":1618673634658},{"_id":"public/2021/04/06/【Git】ブランチの差分を比較する/index.html","hash":"531ed6b8065883182b00e2fb4da142110cc59e44","modified":1618673634658},{"_id":"public/2021/04/05/【Git】リモートとタグの操作/index.html","hash":"7553e287aefac34f7f6ee53bbf284c17c38a90ec","modified":1618673634658},{"_id":"public/2021/04/04/【Git】マージの中止の仕方/index.html","hash":"d8a02d90c4c66ded86ed82bb13b5008608d96e06","modified":1618673634658},{"_id":"public/2021/04/03/【Git】コミットを探す/index.html","hash":"7f3851257ae9934fceeb68791e7cffd5dafa221f","modified":1618673634658},{"_id":"public/2021/04/02/【Git】pullは何をしているのか/index.html","hash":"b300ea993eb468f2bbf419eded7b6d4bddf187d4","modified":1618673634658},{"_id":"public/2021/04/01/【Blog】GoogleSerchConsoleにブログを認識させる/index.html","hash":"74dd426f04e9c58e7269e7d2e2127358a57ddb33","modified":1618673634658},{"_id":"public/2021/03/31/【Git】Git独自のaliasを設定して長いコマンドを短くする/index.html","hash":"fadae134d6e9ca3f7828f0f8a3acd95263f9f47b","modified":1618673634658},{"_id":"public/2021/03/30/【Git】ファイルの巻き戻し方法/index.html","hash":"c3e1f5862550b1cee3bf4946f17242e4b7ef0412","modified":1618673634658},{"_id":"public/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/index.html","hash":"c244c6d358f0fee46b57d7fde2974b5e87f542ce","modified":1618673634658},{"_id":"public/2021/03/28/【Unity】ディレクティブを使用しているときに発生するwarning対策/index.html","hash":"50a8084781ccdceba4856db25eb9c1b926b6f08e","modified":1618673634658},{"_id":"public/2021/03/27/【Unity】URPを導入する/index.html","hash":"0d089cbb04888484da6408994384350cbf01e8be","modified":1618673634658},{"_id":"public/2021/03/26/【Git】git-logの色々な表示のさせ方/index.html","hash":"1aea3c3fb0fe34711129afe802312cded4e34852","modified":1618673634658},{"_id":"public/2021/03/25/【Mac】ツールのバージョンのチェック方法/index.html","hash":"289851aa78c7f7d6cb9ae1e1436fb7b8c2e44b4d","modified":1618673634658},{"_id":"public/2021/03/24/【Git】gitが認識しているファイルを自動でステージングしながらコミットする/index.html","hash":"daddc2f3c06916f835af54e9cc74f58403057a57","modified":1618673634658},{"_id":"public/2021/03/23/【Git】git-flowとGitHub-flowの違いについて/index.html","hash":"16ee5071c0a4dcdbe4f6cd753b0442775ed5e73a","modified":1618673634658},{"_id":"public/2021/03/22/【Git】add-staging-の必要性について/index.html","hash":"5114c2348bb40eda9c34f99c1adf116b63d453a3","modified":1618673634658},{"_id":"public/2021/03/21/【Git】HEAD-を指定したときに「no-matches-found-HEAD-」が出る時の対処法/index.html","hash":"c585a260295053c2a6fd047831f2c43e9fb56c3b","modified":1618673634658},{"_id":"public/2021/03/20/【Shell】コマンドラインから中身のあるファイルを作成する/index.html","hash":"1e4dc687a4beb900eaea43aade9c11a7f77a46dd","modified":1618673634658},{"_id":"public/2021/03/19/【Git】「waring-LF-will-be-replaced-by-CRLF-in-XXX」が出た時の対処法/index.html","hash":"9eeb29a7d51d03cc3979e7e538a9d35931124359","modified":1618673634658},{"_id":"public/2021/03/18/【Git】ベアリポジトリとはなにか/index.html","hash":"c1564b5536dd46058c80e45403483c4103fdfccd","modified":1618673634658},{"_id":"public/2021/03/17/【Winodws】コンソールのスクリーンバッファを複数枚作る/index.html","hash":"1721f55d08b432cc8dc5c7fec2ad843ed7e9ba87","modified":1618673634658},{"_id":"public/2021/03/16/【Android-Studio】Materila-Designを使用して見た目をリッチにする/index.html","hash":"c4be342cf9fbe0008b6e7d3aa0ef89cbf1383318","modified":1618673634658},{"_id":"public/2021/03/15/【Android-Studio】build-Gradleが２つあるのはなぜなのか/index.html","hash":"a1fa37f807e2cf19d9e7615997ef623d3d81a1b0","modified":1618673634658},{"_id":"public/2021/03/14/【XCode】TableViewのCellをカスタマイズする/index.html","hash":"38045f84f7b5471a2e0e95d129f383208b545dae","modified":1618673634658},{"_id":"public/2021/03/13/【Git】タグの扱い方/index.html","hash":"ea99a7e6a693e6cdb700ff6e91c22e9cfe5006b9","modified":1618673634658},{"_id":"public/2021/03/12/【Kotlin】View内のコンポーネントの取得方法/index.html","hash":"a3c7d49b46978db477294e438736b65aeccc78c6","modified":1618673634658},{"_id":"public/2021/03/11/【Ubuntu】キーボードの初期設定/index.html","hash":"e90f3c929dc78823d4a7d581a73472b8e089defd","modified":1618673634658},{"_id":"public/2021/03/10/【Shell】コマンドラインのカーソル移動/index.html","hash":"69c584119ea9c260c6c7b9e49282f4310ad4ff2e","modified":1618673634658},{"_id":"public/2021/03/10/【VSCode】開いたテキストが文字化けするときの対処法方/index.html","hash":"40eb0b7dab610b33516b2faf8108d645cf5a9e94","modified":1618673634658},{"_id":"public/2021/03/09/【Zsh】Zsh拡張フレームワーク「Prezto」/index.html","hash":"3ab0bd3159bf614dc7644c6c5433376e3d6ca197","modified":1618673634658},{"_id":"public/2021/03/08/【Git】コマンドラインの構文/index.html","hash":"2f2867e6e2477fb879467175e3a6c67bd19c4ee6","modified":1618673634658},{"_id":"public/2021/03/07/【Git】管理されているファイル情報をみる/index.html","hash":"5431f214c838da17727b8e0e50f6989c2c9a4483","modified":1618673634658},{"_id":"public/2021/03/06/【CSS】マージン・パディング・ボーダーについて/index.html","hash":"c9f76f2615221d8d829fffe8b9af39a148db30ca","modified":1618673634658},{"_id":"public/2021/03/05/【CSS】positionプロパティについて/index.html","hash":"1c3c8a0143e1da4968676ac17388a1d929a1dee0","modified":1618673634658},{"_id":"public/2021/03/03/インラインCSSと内部CSSいついて/index.html","hash":"476c788ff7c9a91487ed14a4082ec01d6f05f819","modified":1618673634658},{"_id":"public/2021/03/02/CSSについて/index.html","hash":"2ebd14673c0ff4f0f09d8bb7bf40daae70bc8d3d","modified":1618673634658},{"_id":"public/2021/03/01/【Xcode】EntryPointを変更する方法/index.html","hash":"523f081714df5827c9c53608e1b2b5be9610d8ca","modified":1618673634658},{"_id":"public/2021/03/04/【Shell】出力をそのままクリップボードにコピーする/index.html","hash":"b5a52e9fcfc39e9e78642f81067f730c62c94926","modified":1618673634658},{"_id":"public/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/index.html","hash":"ffc12e79492f5479299b8e6b2f76e50bb22a3e71","modified":1618673634658},{"_id":"public/2021/03/01/【Swift】Array内の要素を指定して消去する/index.html","hash":"389b56e54a2db0ab468c8345ec6470c7df447cb6","modified":1618673634658},{"_id":"public/2021/02/28/【Linuxコマンド】よく使うlsコマンドオプション/index.html","hash":"c9c818ed91c75fb7ef6fa3516b7b8f09085db4c9","modified":1618673634658},{"_id":"public/2021/02/27/【Vimプラグイン】囲う記述を楽にする「vim-surround」/index.html","hash":"f5b4e8eaecef26382372c2cc8c19278bba484323","modified":1618673634658},{"_id":"public/2021/02/26/【Vim】バックスペースが効かなくなった場合の対処法/index.html","hash":"8b687f11d6630fd8a6c8ed437e339e2cf20f3566","modified":1618673634658},{"_id":"public/2021/02/26/Floatレイアウトについて/index.html","hash":"d3f57201547fe69bca183c7f5befd1e06358f6eb","modified":1618673634658},{"_id":"public/2021/02/25/【Gitエラー】「fatal-Out-of-memory-malloc-failed-tried-to-allocate-xxxxxxxxxxx-bytes-」の解決方法/index.html","hash":"d4c6856907ec1aaa375b17ea310b850250304bd1","modified":1618673634658},{"_id":"public/2021/02/24/自作ソート【Swift】/index.html","hash":"1a6519a345393c25515e8cd34822d8910b2fc50f","modified":1618673634658},{"_id":"public/2021/02/23/div属性について/index.html","hash":"bb570b0637f8807c40d14364cfed58d41e5f7660","modified":1618673634658},{"_id":"public/2021/02/22/vimのカレントファイルをブラウザで開く/index.html","hash":"948d06f4225f67c49a96608d93c7b635b69fb8eb","modified":1618673634658},{"_id":"public/2021/02/21/AppleScriptでVimの保存時のファイル更新を取得してブラウザを更新する/index.html","hash":"b4ebdb91df1e98bb22fb186e1bfc3e6dc8811e7b","modified":1618673634658},{"_id":"public/2021/02/20/Swiftで迷路を解く/index.html","hash":"ac26107262d402da9d95651e7fc6128d0b12fd2c","modified":1618673634658},{"_id":"public/2021/02/18/入力補完プラグイン「Deoplete」の導入方法/index.html","hash":"5df6dae40a6dd275c5282d6c72a212208f001309","modified":1618673634658},{"_id":"public/2021/02/17/VimにPluginマネージャー「Vundle」を入れる/index.html","hash":"b7150bab7015fb3c165f67d431f5ba39fe1fdc1a","modified":1618673634658},{"_id":"public/2021/02/16/zshとaliasについて/index.html","hash":"9adaa8263f344567f80ef066ae1df0fe56dbe043","modified":1618673634658},{"_id":"public/2021/02/14/Ctrl-cとEscの違い/index.html","hash":"729b64cfc4996943caadf9bc6a24e9a3f81d9268","modified":1618673634658},{"_id":"public/2021/02/14/Markdownで改行を入れる/index.html","hash":"0442f0c8517f90e6d25e879e37fc57e5b6c9915c","modified":1618673634658},{"_id":"public/2021/02/12/iframeのaline属性について/index.html","hash":"35d35f0f8412ab22fd48ac59e093b92f1cffed26","modified":1618673634658},{"_id":"public/2021/02/11/iframeについて/index.html","hash":"4f17529514eff29552f66fbc09618012eb8f90f0","modified":1618673634658},{"_id":"public/2021/02/10/formについて/index.html","hash":"0836832d07e9d06ebd4e6b97205ee2c2c8db13a8","modified":1618673634658},{"_id":"public/2021/02/10/テーブルについて/index.html","hash":"f9dc717807312c4d1c32de1bef13a73cbdca81b8","modified":1618673634658},{"_id":"public/2021/02/10/リンクについて/index.html","hash":"c6ae0a0238c543d30f760415d6de2dc4ed5fb9b8","modified":1618673634658},{"_id":"public/2021/02/08/画像を扱う/index.html","hash":"9426b1dab5baf02a860bd20c1f5f1cdb97c13e42","modified":1618673634658},{"_id":"public/2021/02/07/段落と改行について/index.html","hash":"2043cb3da4ba03e8c397a1523203475ab5815dc1","modified":1618673634658},{"_id":"public/2021/02/06/リストについて/index.html","hash":"ecb9fedfdcf253f41b3c3becf3a2036274139046","modified":1618673634658},{"_id":"public/2021/02/05/HTMLの概要/index.html","hash":"2f67d128e80fccb536401031b8fff4497ea93066","modified":1618673634658},{"_id":"public/2021/02/05/テキストレイアウトについて/index.html","hash":"5879f714e48027b695b5f435c8213d3b79c555fa","modified":1618673634658},{"_id":"public/2021/01/26/【Notion】文字サイズ変更ショートカット/index.html","hash":"4181c760cfae9eee40f4e0e1b5081d0943177e62","modified":1618673634658},{"_id":"public/2021/01/25/GitHubでブログを作成する/index.html","hash":"a9a4d03f1d1501dda8fc993ac460e718d3fedd0f","modified":1618673634658},{"_id":"public/2021/01/25/XCodeでSwiftの練習/index.html","hash":"77653da1031a9345533f3f6a6aee05274c307315","modified":1618673634658},{"_id":"public/categories/Blog/index.html","hash":"4d51b2e264f9f2c38a48c72a714833eaacdfa98e","modified":1618673634658},{"_id":"public/tags/Vim/index.html","hash":"b51ea84311b41ae5fd0c48e5ef267e90cfd792ca","modified":1618673634658},{"_id":"public/tags/自動化/index.html","hash":"fde62998abeae2d8b0620afc9fa545100ac35b14","modified":1618673634658},{"_id":"public/tags/Hexo/index.html","hash":"e12f3be2f5f930a7f8455b34af2d424df83f5abf","modified":1618673634658},{"_id":"public/tags/GitHub/index.html","hash":"7948eb53e9c640ae80883ec648daf53f3683afae","modified":1618673634658},{"_id":"public/tags/AppleScript/index.html","hash":"ea4e73b937ed71d50cf22c45573f28bdd5709d24","modified":1618673634658},{"_id":"public/tags/HTML/index.html","hash":"3cca4c4977c31f7a27417940488e4a33e6ae731b","modified":1618673634658},{"_id":"public/tags/Markdown/index.html","hash":"648476818f9b8f77bf390b8ead249ec9c05f2845","modified":1618673634658},{"_id":"public/tags/Swift/index.html","hash":"041ac1e0113b88f529a3c5540ff5bd6dfd92e43d","modified":1618673634658},{"_id":"public/tags/XCode/index.html","hash":"2ffd828c520a981e623b4416dc16b56626729a74","modified":1618673634658},{"_id":"public/tags/HTML/page/2/index.html","hash":"9632de5047fa63acd1a7fafcd58dcb3159c028f2","modified":1618673634658},{"_id":"public/tags/CSS/index.html","hash":"1b32a59d1d866041dc8049ae32d82700747ed674","modified":1618673634658},{"_id":"public/tags/Xcode/index.html","hash":"d7d39182b21a76d3ec69b6e8a3a4e237d6623e9e","modified":1618673634658},{"_id":"public/tags/Android-Studio/index.html","hash":"38711779356b687daa656cdef48c007288e733d8","modified":1618673634658},{"_id":"public/tags/Kotlin/index.html","hash":"ea2f8ba1729f9e1459dc07b98d6f690dea29d191","modified":1618673634658},{"_id":"public/tags/zsh/index.html","hash":"1c2b5354ae6adc9d821c759c84c1d5905b6bd5c3","modified":1618673634658},{"_id":"public/tags/Git/index.html","hash":"10070c285c202651fd40e92160eab6d30e8b5282","modified":1618673634658},{"_id":"public/tags/alias/index.html","hash":"2f25807d703d02ede13fcd0dede8fb50ed038e8c","modified":1618673634658},{"_id":"public/tags/Git/page/2/index.html","hash":"d33f2d4375929bfae2ae4f5d433edd59235d4868","modified":1618673634658},{"_id":"public/tags/Android/index.html","hash":"41624b1de21e2cd04dd3e4da1cf4ca3f303a58eb","modified":1618673634658},{"_id":"public/tags/Mac/index.html","hash":"1b2866f1ba5ae71a2ec4577b18745a8b1781388b","modified":1618673634658},{"_id":"public/tags/Git/page/3/index.html","hash":"15063bc55b6d391004894977e7016c6831a3cf5a","modified":1618673634658},{"_id":"public/tags/Linux/index.html","hash":"faaae1744bbe003eebfd1ad51987899598cdcc50","modified":1618673634658},{"_id":"public/tags/Shell/index.html","hash":"d425b40c438b1205278729411d03e9e4484a09dc","modified":1618673634658},{"_id":"public/tags/Linuxコマンド/index.html","hash":"b70aa57d5735387e05f53e177dd255a61a678cde","modified":1618673634658},{"_id":"public/tags/Ubuntu/index.html","hash":"61dab9c4bd8cc99977e81209bb8e06294ecd7996","modified":1618673634658},{"_id":"public/tags/Visual-Studio/index.html","hash":"119657ff307ce5eb5c5cde3e7171c44ca3f57905","modified":1618673634658},{"_id":"public/tags/Unity/index.html","hash":"5ec88f62becf997c286f6a5fd7c1007295555912","modified":1618673634658},{"_id":"public/tags/VSCode/index.html","hash":"a97577993c2322d10e8fa7583261b07e96c0d0c9","modified":1618673634658},{"_id":"public/tags/Vimプラグイン/index.html","hash":"6b25dd04d1dd0fb91d00685cb669f632ca90756a","modified":1618673634658},{"_id":"public/tags/Windows/index.html","hash":"df0bdeb2c2201de805bd68625577e967619d8d0f","modified":1618673634658},{"_id":"public/tags/Windows-API/index.html","hash":"65512d0dba03407db94d768495c7b7bda2cc1f3f","modified":1618673634658},{"_id":"public/tags/Zsh/index.html","hash":"b76ba1715634a0a7849cb43ed885208662da593b","modified":1618673634658},{"_id":"public/tags/VimPlugin/index.html","hash":"8f39c6b31706780d4352481d6099cbd9c31c546b","modified":1618673634658},{"_id":"public/archives/index.html","hash":"539f97792a944501210f4abd0eefa2992442323b","modified":1618673634658},{"_id":"public/archives/page/2/index.html","hash":"d3345a493f149cdff016e079aaa121f610cf7e11","modified":1618673634658},{"_id":"public/archives/page/3/index.html","hash":"e28d94625f9f117848935fcb9eb386de7a1a6e5e","modified":1618673634658},{"_id":"public/archives/page/4/index.html","hash":"d1f3c4a5e53ed3282c35a5d33ccd9c97d2c4abbe","modified":1618673634658},{"_id":"public/archives/page/5/index.html","hash":"8524ba9a603f956a6ae45ddf1562d6691a4d802c","modified":1618673634658},{"_id":"public/archives/page/6/index.html","hash":"19f43af00a859b396d987d7348e8be9d45fa5a59","modified":1618673634658},{"_id":"public/archives/page/7/index.html","hash":"4a0a1ba5def601ea4af1b869102ee3a0e7bfa94f","modified":1618673634658},{"_id":"public/archives/2021/index.html","hash":"8f75f731aeedb9b70f819ac5c9f390ccd575d462","modified":1618673634658},{"_id":"public/archives/page/8/index.html","hash":"b39539084b182a6179144dea93d1a32da057049a","modified":1618673634658},{"_id":"public/archives/2021/page/2/index.html","hash":"fc9654964c25ba2b8ad070c47d673eb646cd2085","modified":1618673634658},{"_id":"public/archives/2021/page/3/index.html","hash":"1a620ab35b728452dd81ed06081d6e484a9aeddc","modified":1618673634658},{"_id":"public/archives/2021/page/4/index.html","hash":"414d428dc3ad03f3d700cc070a4aceead8fff49d","modified":1618673634658},{"_id":"public/archives/2021/page/5/index.html","hash":"70d282760f0a15f2d7217e982c598b116feb6d74","modified":1618673634658},{"_id":"public/archives/2021/page/6/index.html","hash":"5a6d9d3e009ebed26002e9d3ce9768b6f2baf1a6","modified":1618673634658},{"_id":"public/archives/2021/page/7/index.html","hash":"bcfee8a7f84e20e73962e4ebe515bf1e21253fd8","modified":1618673634658},{"_id":"public/archives/2021/page/8/index.html","hash":"813db7ad1a37dca4ed27de54c5fa1e73a8376555","modified":1618673634658},{"_id":"public/archives/2021/02/index.html","hash":"0128ac6037b96e9ed0c89722c5a5331743b24785","modified":1618673634658},{"_id":"public/archives/2021/01/index.html","hash":"30f2d851d564a346332bce1d78a93477829f6971","modified":1618673634658},{"_id":"public/archives/2021/02/page/2/index.html","hash":"162deb8ed47db9c373f13675b04002046c55875b","modified":1618673634658},{"_id":"public/archives/2021/02/page/3/index.html","hash":"1199d9fc81eecbb2493c402507d93413ed4be15f","modified":1618673634658},{"_id":"public/archives/2021/03/index.html","hash":"df88e35027f5fec85fdbf2067d2feb3deed68477","modified":1618673634658},{"_id":"public/archives/2021/03/page/2/index.html","hash":"7d70ed9dc12512472f7561c4faab5aec95b9b51d","modified":1618673634658},{"_id":"public/archives/2021/03/page/3/index.html","hash":"f6a5fd9bf4a2b4b4084080fbd0ec6a90a7f89206","modified":1618673634658},{"_id":"public/archives/2021/03/page/4/index.html","hash":"567987b3b74d237aeff73802bde20d865d4f6391","modified":1618673634658},{"_id":"public/archives/2021/04/index.html","hash":"7f8dd4f92f1ae76911be94da5a18a65a4f539fe1","modified":1618673634658},{"_id":"public/archives/2021/04/page/2/index.html","hash":"c35d3867b78d10f02fc027ea04f48c7d6124b360","modified":1618673634658},{"_id":"public/index.html","hash":"fb93987cf9b715a0ac58f4092acbb6a23c94bf7c","modified":1618673634658},{"_id":"public/page/2/index.html","hash":"eb1d26355b8262d922513222a43022fbc2978ef3","modified":1618673634658},{"_id":"public/page/3/index.html","hash":"bf36d77c32730e3c546104ddca5d7c5e8d00ae3b","modified":1618673634658},{"_id":"public/page/4/index.html","hash":"1a2131c0272160515a8bce36b8937cc0bf1caec5","modified":1618673634658},{"_id":"public/page/5/index.html","hash":"3a245b270873c2dda41b92bc9d9e756448a4b894","modified":1618673634658},{"_id":"public/page/6/index.html","hash":"0b4f510649f1998da6e5261dc40cdc2e5acce5ec","modified":1618673634658},{"_id":"public/page/7/index.html","hash":"eb65312d6f8334c1ad85cc0a257f9df7ddcaaf0f","modified":1618673634658},{"_id":"public/page/8/index.html","hash":"9b5455359c14b586151410c5f89c9dcf1648b344","modified":1618673634658},{"_id":"public/categories/index.html","hash":"9ff8bbba64e45ff6d3180d0d47cd11894c991a66","modified":1618673634658},{"_id":"public/tags/index.html","hash":"31110b89f01c9516298f43234596063f30d51bb2","modified":1618673634658},{"_id":"public/img/favicon.png","hash":"4bffbed8f63ec3fbcb331ee7eee1a494bf00a8e4","modified":1618255383641},{"_id":"public/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1618255383641},{"_id":"public/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1618255383641},{"_id":"public/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1618255383641},{"_id":"public/img/logo.png","hash":"8373641eea6ab860dc96b6a35d91369d6e476627","modified":1618255383641},{"_id":"public/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/ターミナル作業終了時にでるパスワード入力画面.png","hash":"4b3eee2868c17abcb3ca8e5170a865af9d28351a","modified":1618255383641},{"_id":"public/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/証明書作成時の入力内容.png","hash":"81dd828c234268f8af2c2b83912302191dd43cf4","modified":1618255383641},{"_id":"public/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/証明書完成.png","hash":"8ffb721ab761d448d8c75cb6a2f335ee72feb4bd","modified":1618255383641},{"_id":"public/2021/03/05/【CSS】positionプロパティについて/position.png","hash":"1de53377a2b184a780341b5b301271c9513ad430","modified":1618255383641},{"_id":"public/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/3.png","hash":"21016ca4da54f147645604051725531d1f3a3cb7","modified":1618255383641},{"_id":"public/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/4.png","hash":"a45f804e0abdb60e762efe5434a1f49c38722331","modified":1618255383641},{"_id":"public/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/1.png","hash":"e59ecf260a6d9a419d01c77799266312b2e96715","modified":1618255383641},{"_id":"public/2021/03/27/【Unity】URPを導入する/1.png","hash":"0503be15f40864dc116d3dc842a17565abc09810","modified":1618255383641},{"_id":"public/2021/03/27/【Unity】URPを導入する/2.png","hash":"c7b1a3f83d915ed1ff482e262aae5b1829b49a5a","modified":1618255383641},{"_id":"public/2021/03/27/【Unity】URPを導入する/3.png","hash":"0774680d476dc7edd92d8e6e263d5f2826a52f55","modified":1618255383641},{"_id":"public/2021/03/27/【Unity】URPを導入する/4.png","hash":"55c3ac7db315fd80f3b99784e1a811294e38f43e","modified":1618255383641},{"_id":"public/2021/03/27/【Unity】URPを導入する/5.png","hash":"415c78b1aeddeb530d3ac7e338f7e22b2ebf1d66","modified":1618255383641},{"_id":"public/2021/03/27/【Unity】URPを導入する/6.png","hash":"63bf0fadd488115238768661fddc88766bf37a78","modified":1618255383641},{"_id":"public/2021/03/10/【VSCode】開いたテキストが文字化けするときの対処法方/Search.png","hash":"8bbbb90066aaedbe2cc746d7ef9cb76e52e4bf6a","modified":1618255383641},{"_id":"public/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPointの矢印.png","hash":"96514a1c79f48781dda5b572519a0758a52e9c88","modified":1618255383641},{"_id":"public/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPointのアシスタントエリアでの表示.png","hash":"7da972c696776f8f7640c8883c2e135cc1defafc","modified":1618255383641},{"_id":"public/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPoint変更(マウス).gif","hash":"63a0759b64ab4ec1788307eba4f2412d51d4f40c","modified":1618255383641},{"_id":"public/2021/03/01/【Xcode】EntryPointを変更する方法/Inspector.png","hash":"88eec616a2ba0c652230caadb941856a05982487","modified":1618255383641},{"_id":"public/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1618255383641},{"_id":"public/img/myavatar.png","hash":"37e91ac0822a73a3e1112b2e7385828e4b8a83fd","modified":1618255383641},{"_id":"public/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/Xcode起動時の確認画面.png","hash":"e707e9a8104eeefbcdfcbd37094138c9767e64e9","modified":1618255383641},{"_id":"public/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/証明書作成時の警告.png","hash":"09776211264743fbc28b7afbfaec85e31e782592","modified":1618255383641},{"_id":"public/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/2.png","hash":"bb08739e4bab0d044880ee7871753bcf04bdd086","modified":1618255383641},{"_id":"public/2021/03/27/【Unity】URPを導入する/7.png","hash":"9c9c052f8dce9480238cc19a246dadb78fdbc07c","modified":1618255383641},{"_id":"public/2021/03/14/【XCode】TableViewのCellをカスタマイズする/TableVIew.png","hash":"1ae0db52a7dbbe11eb4776b1a01805bc63a0c272","modified":1618255383641},{"_id":"public/2021/03/27/【Unity】URPを導入する/8.png","hash":"143dadd6ba3d86a8f18ae6888e5b8d6279347b57","modified":1618255383641},{"_id":"public/2021/03/14/【XCode】TableViewのCellをカスタマイズする/完成.png","hash":"066bb479792d05dfac9f03b98922e5650feb66bd","modified":1618255383641},{"_id":"public/2021/04/01/【Blog】GoogleSerchConsoleにブログを認識させる/1.png","hash":"acc2af60f53e16f967684433146b6d47cb346a69","modified":1618255383641},{"_id":"public/2021/03/14/【XCode】TableViewのCellをカスタマイズする/Identifier.png","hash":"2c192e6afb6a4a61bc082653110f6786d54466c9","modified":1618255383641},{"_id":"public/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1618255383641},{"_id":"public/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1618255383641},{"_id":"public/js/animation.js","hash":"12cedd5caaf9109eed97e50eeab8f883f6e49be3","modified":1618255383641},{"_id":"public/js/main.js","hash":"13e4b1c4fa287f3db61aae329ad093a81992f23d","modified":1618255383641},{"_id":"public/css/cyberpunk.css","hash":"33cb6e6c54af1717a2447f527d0ccf1a06502cb1","modified":1618255383641},{"_id":"public/css/default.css","hash":"d1be246b56d96525ef38324dd769a4d70b932124","modified":1618255383641},{"_id":"public/css/style.css","hash":"d1be246b56d96525ef38324dd769a4d70b932124","modified":1618255383641},{"_id":"public/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/キーチェーン証明書作成.png","hash":"34603ca4374f3b4b9a12bde1cb2dfcf7e3a7ae9f","modified":1618255383641},{"_id":"public/2021/03/10/【VSCode】開いたテキストが文字化けするときの対処法方/Settings.png","hash":"64641cadfc9473f99c7a318d81485132e0134923","modified":1618255383641},{"_id":"public/2021/04/01/【Blog】GoogleSerchConsoleにブログを認識させる/3.png","hash":"e32944b1c3cf04b67aafd5bcd120b4dd9bf067d1","modified":1618255383641},{"_id":"public/2021/03/14/【XCode】TableViewのCellをカスタマイズする/作成時オプション.png","hash":"300f25b4927a9595bac00aee086b1c5572f256e4","modified":1618255383641},{"_id":"public/2021/03/14/【XCode】TableViewのCellをカスタマイズする/ラベル追加.png","hash":"f89d4ebb2623b2de1f08117da5a1d27bb46b9d3c","modified":1618255383641},{"_id":"public/2021/03/14/【XCode】TableViewのCellをカスタマイズする/新規作成.png","hash":"42b8c309a26ec089e4de835e3c642080cc7b6d86","modified":1618255383641},{"_id":"public/2021/01/25/XCodeでSwiftの練習/2.png","hash":"ffb0a9732865e04e08d7695053556f05eab9887f","modified":1618255383641},{"_id":"public/2021/03/14/【XCode】TableViewのCellをカスタマイズする/作成済みチェック.png","hash":"ee87d8255bf69a00a1f4af7c5892362175cab2d2","modified":1618255383641},{"_id":"public/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPoint変更(Inspector).gif","hash":"aa6cd8658664a1ea928c3a88cdc63c65fdf8cced","modified":1618255383641},{"_id":"public/2021/03/14/【XCode】TableViewのCellをカスタマイズする/TableView参照.gif","hash":"c89967b9011dc7ba817f5ef34935a28518dfa6bf","modified":1618255383641},{"_id":"public/2021/01/25/XCodeでSwiftの練習/1.png","hash":"366e3677148373af46caacec0836ca34ba5c6642","modified":1618255383641},{"_id":"public/2021/03/11/【Ubuntu】キーボードの初期設定/3.png","hash":"fefa9cf03acf00aa1b370d4e1529efc5a14903bd","modified":1618255383641},{"_id":"public/2021/03/11/【Ubuntu】キーボードの初期設定/4.png","hash":"8805839f9b592c0bf2b956be3029131f63853d86","modified":1618255383641},{"_id":"public/2021/03/14/【XCode】TableViewのCellをカスタマイズする/ラベル参照.gif","hash":"e711d03c24236fe5aad6466af10fb75c664db090","modified":1618255383641},{"_id":"public/2021/03/11/【Ubuntu】キーボードの初期設定/2.png","hash":"e8a45aacb41d410046c77aa29e316c27db1cc43c","modified":1618255383641},{"_id":"public/2021/03/11/【Ubuntu】キーボードの初期設定/6.png","hash":"6016ca31066fe02d1f0f2511b048a8accdbfe263","modified":1618255383641},{"_id":"public/2021/03/11/【Ubuntu】キーボードの初期設定/7.png","hash":"32ab3ed43e29242170e1271ed682e73d217e1bbe","modified":1618255383641},{"_id":"public/2021/03/11/【Ubuntu】キーボードの初期設定/5.png","hash":"4d85622616a11c8f07a2c4ac4c51a9edbe1fdf13","modified":1618255383641},{"_id":"public/2021/04/01/【Blog】GoogleSerchConsoleにブログを認識させる/2.png","hash":"d6ea971fc1b59598ae40f67dbb6770d3e96738f7","modified":1618255383641},{"_id":"public/2021/03/01/【Xcode】EntryPointを変更する方法/最終確認.gif","hash":"7f11eff973367a75e02327126bb82a19676537fe","modified":1618255383641},{"_id":"source/_posts/【Shell】1つのコマンドで複数行入力する.md","hash":"9a7df2c7cfc43dfdb260a85bb67a2d06d9c5e1ee","modified":1618261770451},{"_id":"source/_posts/【Shell】長いコマンドをわかりやすく入力する.md","hash":"b02cdfa3f19895c53bf668d5515013d1ee9fb543","modified":1618261748804},{"_id":"public/2021/04/17/【Shell】長いコマンドをわかりやすく入力する/index.html","hash":"851c6fa7da2685035b3e69a63d4b07c64dc8e248","modified":1618673634658},{"_id":"public/2021/04/16/【Shell】1つのコマンドで複数行入力する/index.html","hash":"a2a070c4523f1b53650f022381d0f6d2a97c8e1f","modified":1618673634658},{"_id":"source/_posts/【Gif】Gitで使えるgrepコマンド.md","hash":"fed76a7c7fe90c3c4423ca16e2f45f0f747a6bb9","modified":1618265459788},{"_id":"source/_posts/【GitHub】既存のローカルリポジトリをGitHubで管理する.md","hash":"e50063ad6cfdfecfee64333612b8a43c08e7a32c","modified":1618291627903},{"_id":"source/_posts/【Git】ミスった時の対処法.md","hash":"0bc8e1a2cd9e6a45c8618918d30f6ca15138f8c9","modified":1618275893750},{"_id":"source/_posts/【Git】rebaseを使うとき.md","hash":"cd596b78af92d4ba512b80088aae568ca3f17daa","modified":1618274764802},{"_id":"source/_posts/【Git】設定ファイルの優先順位.md","hash":"b9fd0b071e39fb37992cadf8c4c934f26b04aaa2","modified":1618292504891},{"_id":"source/_posts/【Git】付箋を貼り付ける.md","hash":"d9edccadbe2ae21ea894c9f8a7a5f91b39e7debd","modified":1618267825936},{"_id":"source/_posts/【GitHub】既存のローカルリポジトリをGitHubで管理する/GitHub画面.png","hash":"2ad983a202d523d0b9100aa0d777402b66d324a6","modified":1618290280461},{"_id":"public/2021/04/21/【GitHub】既存のローカルリポジトリをGitHubで管理する/index.html","hash":"541656087592a18074d582999fc88e305eb16554","modified":1618673634658},{"_id":"public/2021/04/22/【Git】設定ファイルの優先順位/index.html","hash":"79ae88a76c03a789fbb15287ee9087795f5b45da","modified":1618673634658},{"_id":"public/2021/04/20/【Git】ミスった時の対処法/index.html","hash":"def9d661aecc34fff17c6c9675e22a3f96941883","modified":1618673634658},{"_id":"public/2021/04/19/【Git】rebaseを使うとき/index.html","hash":"94a419904a05c2e30a7cbc3984b510338f383628","modified":1618673634658},{"_id":"public/2021/04/18/【Git】付箋を貼り付ける/index.html","hash":"1a9c75044cd7b66275dc51e199db16881f564ebb","modified":1618673634658},{"_id":"public/2021/04/15/【Gif】Gitで使えるgrepコマンド/index.html","hash":"bf364a579108545e3c818d97c25db2d1d7bec341","modified":1618673634658},{"_id":"public/page/9/index.html","hash":"a4ce16b318d01e5953c7c4171478e40e715c9dc4","modified":1618673634658},{"_id":"public/archives/page/9/index.html","hash":"070eb72c8d23f6402ea9bbb8e4e824bfc4c5d12a","modified":1618673634658},{"_id":"public/archives/2021/page/9/index.html","hash":"12c9142faf7d0951b004f27c9b09d3db0f83b229","modified":1618673634658},{"_id":"public/archives/2021/04/page/3/index.html","hash":"b3b376faea4ea29a9c07031359e36e87caf82678","modified":1618673634658},{"_id":"public/tags/Git/page/4/index.html","hash":"f52cf1dbe70113d0d918d0934113c44f23128485","modified":1618673634658},{"_id":"public/2021/04/21/【GitHub】既存のローカルリポジトリをGitHubで管理する/GitHub画面.png","hash":"2ad983a202d523d0b9100aa0d777402b66d324a6","modified":1618292514191},{"_id":"source/_posts/【Git】空のコミットをする.md","hash":"56f4e945832d65ecbfc486a7e286780435bbeb1c","modified":1618299346324},{"_id":"public/2021/04/23/【Git】空のコミットをする/index.html","hash":"4dd2d91c59c111786cf1568852c357815011d7c1","modified":1618673634658},{"_id":"source/_posts/【Git】基本的なマージの手順.md","hash":"6310b0df9546827eebe58170e337045ac02332be","modified":1618673626050},{"_id":"public/2021/04/24/【Git】基本的なマージの手順/index.html","hash":"dee25eaa7524165b53c5e6d0f7fce7d8c4ac96f7","modified":1618673634658}],"Category":[{"name":"Blog","_id":"cknezh36r0006mzb662wt2l6e"}],"Data":[],"Page":[{"_content":"google-site-verification: google54e17a966e7cdc95.html","source":"google54e17a966e7cdc95.html","raw":"google-site-verification: google54e17a966e7cdc95.html","date":"2021-03-02T12:31:09.858Z","updated":"2021-03-02T12:31:03.074Z","path":"google54e17a966e7cdc95.html","title":"","comments":1,"layout":"page","_id":"cknezh3410000mzb69dq5hb1s","content":"google-site-verification: google54e17a966e7cdc95.html","site":{"data":{}},"excerpt":"","more":"google-site-verification: google54e17a966e7cdc95.html"}],"Post":[{"title":"AppleScriptでVimの保存時のファイル更新を取得してブラウザを更新する","date":"2021-02-21T02:41:11.000Z","_content":"# 概要\nVimでファイルを保存した時にファイルをブラウザで開いている場合(HTMLを書いている場合など)、いちいちブラウザにフォーカスを当てて、ブラウザ再読み込みを行うのは面倒くさいので、\n\n1. ブラウザにフォーカスを当てる\n2. `command + r`イベントを発行\n3. フォーカスをターミナルに戻す\n\nの動作を自動化する\n\n## Vimで使用するコマンドを実装する\n1. `/Users/daiki/.vim/plugin`に`chrome.vim`を配置\n\t- ディレクトリがない場合は作成する\n2. 以下のコードを`chrome.vim`に書き込んで保存\n\n`chrome.vim`\n```\ncommand! -bar ChromeReload silent !osascript $HOME/bin/chrome_reload.scpt && osascript $HOME/bin/terminal_focus.scpt\ncommand! -bar ChromeStartObserve ChromeStopObserve | autocmd BufWritePost <buffer> ChromeReload\ncommand! -bar ChromeStopObserve autocmd! BufWritePost <buffer>\n```\n\n## ブラウザにフォーカスを当ててリロードするコマンドを実装\n1. `/Users/daiki/bin`に`chrome_reload.scpt`を配置\n\t- ディレクトリがない場合は作成する \n2. 以下のコードを`chrome_reload.scpt`に書き込んで保存\n### カスタマイズ\n- 1行目:`tell application \"safari\" to activate`の`safari`の部分を別のブラウザの名前に変更すると開くブラウザを変更できる\n\n`chrome_reload.scpt`\n```\ntell application \"safari\" to activate\ntell application \"System Events\" to keystroke \"r\" using {command down}\n```\n\n## ターミナルにフォーカスを戻すコマンド \n1. `/Users/daiki/bin`に`terminal_focus.scpt`を配置\n\t- ディレクトリがない場合は作成する \n2. 以下のコードを`terminal_focus.scpt`に書き込んで保存\n### カスタマイズ\n- `\"Terminal\"`の部分を書き換えると別アプリにフォーカスを当てられる\n\n`terminal_focus.scpt`\n```\ntell application \"Terminal\" to activate\n```\n\n## Vimで使用するには\nvimを開いて、ブラウザで更新したいファイルに対して以下のコマンドを打つ\n\n- `:ChromeReload`:１回ブラウザをリロードする\n- `:ChromeStartObserve`:Vimで保存するたびにブラウザをリロードする\n- `:ChromeStopObserve`:`ChromeStartObserve`の保存時の自動リロードを停止する\n\n# 参考\nhttps://lukesilvia.hatenablog.com/entry/20101023/p2\n","source":"_posts/AppleScriptでVimの保存時のファイル更新を取得してブラウザを更新する.md","raw":"---\ntitle: AppleScriptでVimの保存時のファイル更新を取得してブラウザを更新する\ndate: 2021-02-21 11:41:11\ntags: \n- Vim\n- AppleScript\n- 自動化\n---\n# 概要\nVimでファイルを保存した時にファイルをブラウザで開いている場合(HTMLを書いている場合など)、いちいちブラウザにフォーカスを当てて、ブラウザ再読み込みを行うのは面倒くさいので、\n\n1. ブラウザにフォーカスを当てる\n2. `command + r`イベントを発行\n3. フォーカスをターミナルに戻す\n\nの動作を自動化する\n\n## Vimで使用するコマンドを実装する\n1. `/Users/daiki/.vim/plugin`に`chrome.vim`を配置\n\t- ディレクトリがない場合は作成する\n2. 以下のコードを`chrome.vim`に書き込んで保存\n\n`chrome.vim`\n```\ncommand! -bar ChromeReload silent !osascript $HOME/bin/chrome_reload.scpt && osascript $HOME/bin/terminal_focus.scpt\ncommand! -bar ChromeStartObserve ChromeStopObserve | autocmd BufWritePost <buffer> ChromeReload\ncommand! -bar ChromeStopObserve autocmd! BufWritePost <buffer>\n```\n\n## ブラウザにフォーカスを当ててリロードするコマンドを実装\n1. `/Users/daiki/bin`に`chrome_reload.scpt`を配置\n\t- ディレクトリがない場合は作成する \n2. 以下のコードを`chrome_reload.scpt`に書き込んで保存\n### カスタマイズ\n- 1行目:`tell application \"safari\" to activate`の`safari`の部分を別のブラウザの名前に変更すると開くブラウザを変更できる\n\n`chrome_reload.scpt`\n```\ntell application \"safari\" to activate\ntell application \"System Events\" to keystroke \"r\" using {command down}\n```\n\n## ターミナルにフォーカスを戻すコマンド \n1. `/Users/daiki/bin`に`terminal_focus.scpt`を配置\n\t- ディレクトリがない場合は作成する \n2. 以下のコードを`terminal_focus.scpt`に書き込んで保存\n### カスタマイズ\n- `\"Terminal\"`の部分を書き換えると別アプリにフォーカスを当てられる\n\n`terminal_focus.scpt`\n```\ntell application \"Terminal\" to activate\n```\n\n## Vimで使用するには\nvimを開いて、ブラウザで更新したいファイルに対して以下のコマンドを打つ\n\n- `:ChromeReload`:１回ブラウザをリロードする\n- `:ChromeStartObserve`:Vimで保存するたびにブラウザをリロードする\n- `:ChromeStopObserve`:`ChromeStartObserve`の保存時の自動リロードを停止する\n\n# 参考\nhttps://lukesilvia.hatenablog.com/entry/20101023/p2\n","slug":"AppleScriptでVimの保存時のファイル更新を取得してブラウザを更新する","published":1,"updated":"2021-02-21T02:42:05.147Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh34r0001mzb6c0dcb9th","content":"<h1><span id=\"概要\">概要</span></h1><p>Vimでファイルを保存した時にファイルをブラウザで開いている場合(HTMLを書いている場合など)、いちいちブラウザにフォーカスを当てて、ブラウザ再読み込みを行うのは面倒くさいので、</p>\n<ol>\n<li>ブラウザにフォーカスを当てる</li>\n<li><code>command + r</code>イベントを発行</li>\n<li>フォーカスをターミナルに戻す</li>\n</ol>\n<p>の動作を自動化する</p>\n<h2><span id=\"vimで使用するコマンドを実装する\">Vimで使用するコマンドを実装する</span></h2><ol>\n<li><code>/Users/daiki/.vim/plugin</code>に<code>chrome.vim</code>を配置<ul>\n<li>ディレクトリがない場合は作成する</li>\n</ul>\n</li>\n<li>以下のコードを<code>chrome.vim</code>に書き込んで保存</li>\n</ol>\n<p><code>chrome.vim</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">command! -bar ChromeReload silent !osascript $HOME&#x2F;bin&#x2F;chrome_reload.scpt &amp;&amp; osascript $HOME&#x2F;bin&#x2F;terminal_focus.scpt</span><br><span class=\"line\">command! -bar ChromeStartObserve ChromeStopObserve | autocmd BufWritePost &lt;buffer&gt; ChromeReload</span><br><span class=\"line\">command! -bar ChromeStopObserve autocmd! BufWritePost &lt;buffer&gt;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"ブラウザにフォーカスを当ててリロードするコマンドを実装\">ブラウザにフォーカスを当ててリロードするコマンドを実装</span></h2><ol>\n<li><code>/Users/daiki/bin</code>に<code>chrome_reload.scpt</code>を配置<ul>\n<li>ディレクトリがない場合は作成する </li>\n</ul>\n</li>\n<li>以下のコードを<code>chrome_reload.scpt</code>に書き込んで保存<h3><span id=\"カスタマイズ\">カスタマイズ</span></h3></li>\n</ol>\n<ul>\n<li>1行目:<code>tell application &quot;safari&quot; to activate</code>の<code>safari</code>の部分を別のブラウザの名前に変更すると開くブラウザを変更できる</li>\n</ul>\n<p><code>chrome_reload.scpt</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tell application &quot;safari&quot; to activate</span><br><span class=\"line\">tell application &quot;System Events&quot; to keystroke &quot;r&quot; using &#123;command down&#125;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"ターミナルにフォーカスを戻すコマンド\">ターミナルにフォーカスを戻すコマンド</span></h2><ol>\n<li><code>/Users/daiki/bin</code>に<code>terminal_focus.scpt</code>を配置<ul>\n<li>ディレクトリがない場合は作成する </li>\n</ul>\n</li>\n<li>以下のコードを<code>terminal_focus.scpt</code>に書き込んで保存<h3><span id=\"カスタマイズ\">カスタマイズ</span></h3></li>\n</ol>\n<ul>\n<li><code>&quot;Terminal&quot;</code>の部分を書き換えると別アプリにフォーカスを当てられる</li>\n</ul>\n<p><code>terminal_focus.scpt</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tell application &quot;Terminal&quot; to activate</span><br></pre></td></tr></table></figure>\n<h2><span id=\"vimで使用するには\">Vimで使用するには</span></h2><p>vimを開いて、ブラウザで更新したいファイルに対して以下のコマンドを打つ</p>\n<ul>\n<li><code>:ChromeReload</code>:１回ブラウザをリロードする</li>\n<li><code>:ChromeStartObserve</code>:Vimで保存するたびにブラウザをリロードする</li>\n<li><code>:ChromeStopObserve</code>:<code>ChromeStartObserve</code>の保存時の自動リロードを停止する</li>\n</ul>\n<h1><span id=\"参考\">参考</span></h1><p><a href=\"https://lukesilvia.hatenablog.com/entry/20101023/p2\">https://lukesilvia.hatenablog.com/entry/20101023/p2</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h1><p>Vimでファイルを保存した時にファイルをブラウザで開いている場合(HTMLを書いている場合など)、いちいちブラウザにフォーカスを当てて、ブラウザ再読み込みを行うのは面倒くさいので、</p>\n<ol>\n<li>ブラウザにフォーカスを当てる</li>\n<li><code>command + r</code>イベントを発行</li>\n<li>フォーカスをターミナルに戻す</li>\n</ol>\n<p>の動作を自動化する</p>\n<h2 id=\"Vimで使用するコマンドを実装する\"><a href=\"#Vimで使用するコマンドを実装する\" class=\"headerlink\" title=\"Vimで使用するコマンドを実装する\"></a>Vimで使用するコマンドを実装する</h2><ol>\n<li><code>/Users/daiki/.vim/plugin</code>に<code>chrome.vim</code>を配置<ul>\n<li>ディレクトリがない場合は作成する</li>\n</ul>\n</li>\n<li>以下のコードを<code>chrome.vim</code>に書き込んで保存</li>\n</ol>\n<p><code>chrome.vim</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">command! -bar ChromeReload silent !osascript $HOME&#x2F;bin&#x2F;chrome_reload.scpt &amp;&amp; osascript $HOME&#x2F;bin&#x2F;terminal_focus.scpt</span><br><span class=\"line\">command! -bar ChromeStartObserve ChromeStopObserve | autocmd BufWritePost &lt;buffer&gt; ChromeReload</span><br><span class=\"line\">command! -bar ChromeStopObserve autocmd! BufWritePost &lt;buffer&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ブラウザにフォーカスを当ててリロードするコマンドを実装\"><a href=\"#ブラウザにフォーカスを当ててリロードするコマンドを実装\" class=\"headerlink\" title=\"ブラウザにフォーカスを当ててリロードするコマンドを実装\"></a>ブラウザにフォーカスを当ててリロードするコマンドを実装</h2><ol>\n<li><code>/Users/daiki/bin</code>に<code>chrome_reload.scpt</code>を配置<ul>\n<li>ディレクトリがない場合は作成する </li>\n</ul>\n</li>\n<li>以下のコードを<code>chrome_reload.scpt</code>に書き込んで保存<h3 id=\"カスタマイズ\"><a href=\"#カスタマイズ\" class=\"headerlink\" title=\"カスタマイズ\"></a>カスタマイズ</h3></li>\n</ol>\n<ul>\n<li>1行目:<code>tell application &quot;safari&quot; to activate</code>の<code>safari</code>の部分を別のブラウザの名前に変更すると開くブラウザを変更できる</li>\n</ul>\n<p><code>chrome_reload.scpt</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tell application &quot;safari&quot; to activate</span><br><span class=\"line\">tell application &quot;System Events&quot; to keystroke &quot;r&quot; using &#123;command down&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ターミナルにフォーカスを戻すコマンド\"><a href=\"#ターミナルにフォーカスを戻すコマンド\" class=\"headerlink\" title=\"ターミナルにフォーカスを戻すコマンド\"></a>ターミナルにフォーカスを戻すコマンド</h2><ol>\n<li><code>/Users/daiki/bin</code>に<code>terminal_focus.scpt</code>を配置<ul>\n<li>ディレクトリがない場合は作成する </li>\n</ul>\n</li>\n<li>以下のコードを<code>terminal_focus.scpt</code>に書き込んで保存<h3 id=\"カスタマイズ-1\"><a href=\"#カスタマイズ-1\" class=\"headerlink\" title=\"カスタマイズ\"></a>カスタマイズ</h3></li>\n</ol>\n<ul>\n<li><code>&quot;Terminal&quot;</code>の部分を書き換えると別アプリにフォーカスを当てられる</li>\n</ul>\n<p><code>terminal_focus.scpt</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tell application &quot;Terminal&quot; to activate</span><br></pre></td></tr></table></figure>\n<h2 id=\"Vimで使用するには\"><a href=\"#Vimで使用するには\" class=\"headerlink\" title=\"Vimで使用するには\"></a>Vimで使用するには</h2><p>vimを開いて、ブラウザで更新したいファイルに対して以下のコマンドを打つ</p>\n<ul>\n<li><code>:ChromeReload</code>:１回ブラウザをリロードする</li>\n<li><code>:ChromeStartObserve</code>:Vimで保存するたびにブラウザをリロードする</li>\n<li><code>:ChromeStopObserve</code>:<code>ChromeStartObserve</code>の保存時の自動リロードを停止する</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://lukesilvia.hatenablog.com/entry/20101023/p2\">https://lukesilvia.hatenablog.com/entry/20101023/p2</a></p>\n"},{"title":"Ctrl+cとEscの違い","date":"2021-02-14T14:57:38.000Z","_content":"# Ctrl+cはEscと同じ挙動をしない場合がある\n例えば、矩形選択モード`ctrl + v`でマルチカーソル処理を行おうとした時に、入力内容を確定するために、インサートモードを抜けるが、その時の挙動が`Ctrl + c`と`Esc`では、違ったものになる\n- Ctrl + c : 最初の１行しか入力内容が反映されない\n- Esc : 期待通りの選択している全ての行に入力値が反映される\n\n# 対策\n1. キーマップを書き換えて`Ctrl + c`を`Esc`と同じ扱いにする\n```\nimap <C-c> <Esc>\n```\n\n2. `Ctrl + [`を使う\n\n3. 素直に`Esc`を使用する\n","source":"_posts/Ctrl-cとEscの違い.md","raw":"---\ntitle: Ctrl+cとEscの違い\ndate: 2021-02-14 23:57:38\ntags: Vim\n---\n# Ctrl+cはEscと同じ挙動をしない場合がある\n例えば、矩形選択モード`ctrl + v`でマルチカーソル処理を行おうとした時に、入力内容を確定するために、インサートモードを抜けるが、その時の挙動が`Ctrl + c`と`Esc`では、違ったものになる\n- Ctrl + c : 最初の１行しか入力内容が反映されない\n- Esc : 期待通りの選択している全ての行に入力値が反映される\n\n# 対策\n1. キーマップを書き換えて`Ctrl + c`を`Esc`と同じ扱いにする\n```\nimap <C-c> <Esc>\n```\n\n2. `Ctrl + [`を使う\n\n3. 素直に`Esc`を使用する\n","slug":"Ctrl-cとEscの違い","published":1,"updated":"2021-02-14T14:58:30.627Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh36h0002mzb64pgcfgrm","content":"<h1><span id=\"ctrlcはescと同じ挙動をしない場合がある\">Ctrl+cはEscと同じ挙動をしない場合がある</span></h1><p>例えば、矩形選択モード<code>ctrl + v</code>でマルチカーソル処理を行おうとした時に、入力内容を確定するために、インサートモードを抜けるが、その時の挙動が<code>Ctrl + c</code>と<code>Esc</code>では、違ったものになる</p>\n<ul>\n<li>Ctrl + c : 最初の１行しか入力内容が反映されない</li>\n<li>Esc : 期待通りの選択している全ての行に入力値が反映される</li>\n</ul>\n<h1><span id=\"対策\">対策</span></h1><ol>\n<li><p>キーマップを書き換えて<code>Ctrl + c</code>を<code>Esc</code>と同じ扱いにする</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imap &lt;C-c&gt; &lt;Esc&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p><code>Ctrl + [</code>を使う</p>\n</li>\n<li><p>素直に<code>Esc</code>を使用する</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Ctrl-cはEscと同じ挙動をしない場合がある\"><a href=\"#Ctrl-cはEscと同じ挙動をしない場合がある\" class=\"headerlink\" title=\"Ctrl+cはEscと同じ挙動をしない場合がある\"></a>Ctrl+cはEscと同じ挙動をしない場合がある</h1><p>例えば、矩形選択モード<code>ctrl + v</code>でマルチカーソル処理を行おうとした時に、入力内容を確定するために、インサートモードを抜けるが、その時の挙動が<code>Ctrl + c</code>と<code>Esc</code>では、違ったものになる</p>\n<ul>\n<li>Ctrl + c : 最初の１行しか入力内容が反映されない</li>\n<li>Esc : 期待通りの選択している全ての行に入力値が反映される</li>\n</ul>\n<h1 id=\"対策\"><a href=\"#対策\" class=\"headerlink\" title=\"対策\"></a>対策</h1><ol>\n<li><p>キーマップを書き換えて<code>Ctrl + c</code>を<code>Esc</code>と同じ扱いにする</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imap &lt;C-c&gt; &lt;Esc&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p><code>Ctrl + [</code>を使う</p>\n</li>\n<li><p>素直に<code>Esc</code>を使用する</p>\n</li>\n</ol>\n"},{"title":"GitHubでブログを作成する(Hexo)","_content":"\n# 環境\n- Macbook Air 2020 M1\n- Big Sur 11.0.1\n\n#\t前準備\n1. node.jsをインストールする\n2. Hexoをインストールする\n\n## 1. node.jsをインストールする\n``` bash\ngit clone https://github.com/creationix/nvm ~/.nvm\nsource ~/.nvm/nvm.sh\nnvm install 10.16.3\n```\n\n## 2. Hexoをインストールする\nnode.jsに付属してくる、nmpを使用する\n\n```bash\nnpm install -g hexo\n```\n\n## 3. HexoにGit操作用ツールを追加\nhexoでdeployするときにgitを使用する\n```\nnpm install hexo-deployer-git --save\n```\n\n# GitHubでブログ用のリポジトリを作成する\nリポジトリ名はなんでも良いわけではなく、特定の記述規則に従う必要がある\n```\nusername.github.io\n\nusername = GitHubのユーザー名\n```\n\n# 作成したリポジトリをCloneして移動\n```\ngit clone [リポジトリ]\ncd [リポジトリ]\n```\n\n# Hexoでプロジェクトを作成\nここで作成するプロジェクトは後で消去するので（必要なのは作成されるフォルダの中のファイル)、適当でOK\n```\nhexo init [プロジェクト名]\n```\n\n# ファイル名の中身をCloneしたリポジトリに移動させる\n```\nmv ./<任意のプロジェクト名>/* ./\nmv ./<任意のプロジェクト名>/.* ./\nrm -r <任意のプロジェクト名>\n```\n\n# Hexoプロジェクトの設定を書き換える\n## 書き換え対象ファイル\n```\n_config.yml\n```\n## 書き換える設定\n- language: -> language: ja\n- url: -> url: https://<username>.github.io/\n\n## 「deploy:」 以下を書き換え&追記\n- 書き換え前\n```\ndeploy:\n  type: ''\n```\n\n- 書き換え後\n```\ndeploy:\n\ttype: git\n\trepo: https://github.com/<username>/<username>.github.io\n\tbranch: master\n\tmessage: コミット時のメッセージ\n```\n","source":"_posts/GitHubでブログを作成する.md","raw":"---\ntitle: GitHubでブログを作成する(Hexo)\ncategories: Blog\ntags: \n- [Hexo]\n- [GitHub]\n---\n\n# 環境\n- Macbook Air 2020 M1\n- Big Sur 11.0.1\n\n#\t前準備\n1. node.jsをインストールする\n2. Hexoをインストールする\n\n## 1. node.jsをインストールする\n``` bash\ngit clone https://github.com/creationix/nvm ~/.nvm\nsource ~/.nvm/nvm.sh\nnvm install 10.16.3\n```\n\n## 2. Hexoをインストールする\nnode.jsに付属してくる、nmpを使用する\n\n```bash\nnpm install -g hexo\n```\n\n## 3. HexoにGit操作用ツールを追加\nhexoでdeployするときにgitを使用する\n```\nnpm install hexo-deployer-git --save\n```\n\n# GitHubでブログ用のリポジトリを作成する\nリポジトリ名はなんでも良いわけではなく、特定の記述規則に従う必要がある\n```\nusername.github.io\n\nusername = GitHubのユーザー名\n```\n\n# 作成したリポジトリをCloneして移動\n```\ngit clone [リポジトリ]\ncd [リポジトリ]\n```\n\n# Hexoでプロジェクトを作成\nここで作成するプロジェクトは後で消去するので（必要なのは作成されるフォルダの中のファイル)、適当でOK\n```\nhexo init [プロジェクト名]\n```\n\n# ファイル名の中身をCloneしたリポジトリに移動させる\n```\nmv ./<任意のプロジェクト名>/* ./\nmv ./<任意のプロジェクト名>/.* ./\nrm -r <任意のプロジェクト名>\n```\n\n# Hexoプロジェクトの設定を書き換える\n## 書き換え対象ファイル\n```\n_config.yml\n```\n## 書き換える設定\n- language: -> language: ja\n- url: -> url: https://<username>.github.io/\n\n## 「deploy:」 以下を書き換え&追記\n- 書き換え前\n```\ndeploy:\n  type: ''\n```\n\n- 書き換え後\n```\ndeploy:\n\ttype: git\n\trepo: https://github.com/<username>/<username>.github.io\n\tbranch: master\n\tmessage: コミット時のメッセージ\n```\n","slug":"GitHubでブログを作成する","published":1,"date":"2021-01-24T18:48:07.007Z","updated":"2021-01-24T18:48:07.007Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh36p0004mzb6cc922uuc","content":"<h1><span id=\"環境\">環境</span></h1><ul>\n<li>Macbook Air 2020 M1</li>\n<li>Big Sur 11.0.1</li>\n</ul>\n<h1><span id=\"前準備\">前準備</span></h1><ol>\n<li>node.jsをインストールする</li>\n<li>Hexoをインストールする</li>\n</ol>\n<h2><span id=\"1-nodejsをインストールする\">1. node.jsをインストールする</span></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/creationix/nvm ~/.nvm</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.nvm/nvm.sh</span><br><span class=\"line\">nvm install 10.16.3</span><br></pre></td></tr></table></figure>\n<h2><span id=\"2-hexoをインストールする\">2. Hexoをインストールする</span></h2><p>node.jsに付属してくる、nmpを使用する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<h2><span id=\"3-hexoにgit操作用ツールを追加\">3. HexoにGit操作用ツールを追加</span></h2><p>hexoでdeployするときにgitを使用する</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h1><span id=\"githubでブログ用のリポジトリを作成する\">GitHubでブログ用のリポジトリを作成する</span></h1><p>リポジトリ名はなんでも良いわけではなく、特定の記述規則に従う必要がある</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">username.github.io</span><br><span class=\"line\"></span><br><span class=\"line\">username &#x3D; GitHubのユーザー名</span><br></pre></td></tr></table></figure>\n<h1><span id=\"作成したリポジトリをcloneして移動\">作成したリポジトリをCloneして移動</span></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone [リポジトリ]</span><br><span class=\"line\">cd [リポジトリ]</span><br></pre></td></tr></table></figure>\n<h1><span id=\"hexoでプロジェクトを作成\">Hexoでプロジェクトを作成</span></h1><p>ここで作成するプロジェクトは後で消去するので（必要なのは作成されるフォルダの中のファイル)、適当でOK</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init [プロジェクト名]</span><br></pre></td></tr></table></figure>\n<h1><span id=\"ファイル名の中身をcloneしたリポジトリに移動させる\">ファイル名の中身をCloneしたリポジトリに移動させる</span></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv .&#x2F;&lt;任意のプロジェクト名&gt;&#x2F;* .&#x2F;</span><br><span class=\"line\">mv .&#x2F;&lt;任意のプロジェクト名&gt;&#x2F;.* .&#x2F;</span><br><span class=\"line\">rm -r &lt;任意のプロジェクト名&gt;</span><br></pre></td></tr></table></figure>\n<h1><span id=\"hexoプロジェクトの設定を書き換える\">Hexoプロジェクトの設定を書き換える</span></h1><h2><span id=\"書き換え対象ファイル\">書き換え対象ファイル</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_config.yml</span><br></pre></td></tr></table></figure>\n<h2><span id=\"書き換える設定\">書き換える設定</span></h2><ul>\n<li>language: -&gt; language: ja</li>\n<li>url: -&gt; url: https://<username>.github.io/</username></li>\n</ul>\n<h2><span id=\"deploy-以下を書き換えamp追記\">「deploy:」 以下を書き換え&amp;追記</span></h2><ul>\n<li>書き換え前<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: &#39;&#39;</span><br></pre></td></tr></table></figure></li>\n<li>書き換え後<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">\ttype: git</span><br><span class=\"line\">\trepo: https:&#x2F;&#x2F;github.com&#x2F;&lt;username&gt;&#x2F;&lt;username&gt;.github.io</span><br><span class=\"line\">\tbranch: master</span><br><span class=\"line\">\tmessage: コミット時のメッセージ</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Macbook Air 2020 M1</li>\n<li>Big Sur 11.0.1</li>\n</ul>\n<h1 id=\"前準備\"><a href=\"#前準備\" class=\"headerlink\" title=\"前準備\"></a>前準備</h1><ol>\n<li>node.jsをインストールする</li>\n<li>Hexoをインストールする</li>\n</ol>\n<h2 id=\"1-node-jsをインストールする\"><a href=\"#1-node-jsをインストールする\" class=\"headerlink\" title=\"1. node.jsをインストールする\"></a>1. node.jsをインストールする</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/creationix/nvm ~/.nvm</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.nvm/nvm.sh</span><br><span class=\"line\">nvm install 10.16.3</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Hexoをインストールする\"><a href=\"#2-Hexoをインストールする\" class=\"headerlink\" title=\"2. Hexoをインストールする\"></a>2. Hexoをインストールする</h2><p>node.jsに付属してくる、nmpを使用する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-HexoにGit操作用ツールを追加\"><a href=\"#3-HexoにGit操作用ツールを追加\" class=\"headerlink\" title=\"3. HexoにGit操作用ツールを追加\"></a>3. HexoにGit操作用ツールを追加</h2><p>hexoでdeployするときにgitを使用する</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h1 id=\"GitHubでブログ用のリポジトリを作成する\"><a href=\"#GitHubでブログ用のリポジトリを作成する\" class=\"headerlink\" title=\"GitHubでブログ用のリポジトリを作成する\"></a>GitHubでブログ用のリポジトリを作成する</h1><p>リポジトリ名はなんでも良いわけではなく、特定の記述規則に従う必要がある</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">username.github.io</span><br><span class=\"line\"></span><br><span class=\"line\">username &#x3D; GitHubのユーザー名</span><br></pre></td></tr></table></figure>\n<h1 id=\"作成したリポジトリをCloneして移動\"><a href=\"#作成したリポジトリをCloneして移動\" class=\"headerlink\" title=\"作成したリポジトリをCloneして移動\"></a>作成したリポジトリをCloneして移動</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone [リポジトリ]</span><br><span class=\"line\">cd [リポジトリ]</span><br></pre></td></tr></table></figure>\n<h1 id=\"Hexoでプロジェクトを作成\"><a href=\"#Hexoでプロジェクトを作成\" class=\"headerlink\" title=\"Hexoでプロジェクトを作成\"></a>Hexoでプロジェクトを作成</h1><p>ここで作成するプロジェクトは後で消去するので（必要なのは作成されるフォルダの中のファイル)、適当でOK</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init [プロジェクト名]</span><br></pre></td></tr></table></figure>\n<h1 id=\"ファイル名の中身をCloneしたリポジトリに移動させる\"><a href=\"#ファイル名の中身をCloneしたリポジトリに移動させる\" class=\"headerlink\" title=\"ファイル名の中身をCloneしたリポジトリに移動させる\"></a>ファイル名の中身をCloneしたリポジトリに移動させる</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv .&#x2F;&lt;任意のプロジェクト名&gt;&#x2F;* .&#x2F;</span><br><span class=\"line\">mv .&#x2F;&lt;任意のプロジェクト名&gt;&#x2F;.* .&#x2F;</span><br><span class=\"line\">rm -r &lt;任意のプロジェクト名&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Hexoプロジェクトの設定を書き換える\"><a href=\"#Hexoプロジェクトの設定を書き換える\" class=\"headerlink\" title=\"Hexoプロジェクトの設定を書き換える\"></a>Hexoプロジェクトの設定を書き換える</h1><h2 id=\"書き換え対象ファイル\"><a href=\"#書き換え対象ファイル\" class=\"headerlink\" title=\"書き換え対象ファイル\"></a>書き換え対象ファイル</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_config.yml</span><br></pre></td></tr></table></figure>\n<h2 id=\"書き換える設定\"><a href=\"#書き換える設定\" class=\"headerlink\" title=\"書き換える設定\"></a>書き換える設定</h2><ul>\n<li>language: -&gt; language: ja</li>\n<li>url: -&gt; url: https://<username>.github.io/</li>\n</ul>\n<h2 id=\"「deploy-」-以下を書き換え-amp-追記\"><a href=\"#「deploy-」-以下を書き換え-amp-追記\" class=\"headerlink\" title=\"「deploy:」 以下を書き換え&amp;追記\"></a>「deploy:」 以下を書き換え&amp;追記</h2><ul>\n<li>書き換え前<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: &#39;&#39;</span><br></pre></td></tr></table></figure></li>\n<li>書き換え後<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">\ttype: git</span><br><span class=\"line\">\trepo: https:&#x2F;&#x2F;github.com&#x2F;&lt;username&gt;&#x2F;&lt;username&gt;.github.io</span><br><span class=\"line\">\tbranch: master</span><br><span class=\"line\">\tmessage: コミット時のメッセージ</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"HTMLの概要","date":"2021-02-04T15:21:18.000Z","_content":"# HTMLの特徴\n\n全てのコードはタグで囲まれている\n\n```html\n<body>\n  <title>タイトル</title>\n</body>\n```\n\n## HTMLのサンプルサイト\n[サンプルサイト](http://example.com)\n\n# タグ\n## 基本\n```\n- <html></html>      : HTMLの内容\n```\n## 文章関係\n```\n- <body></body>      : 文章の本文\n- <div></div>        : division(領域)画面上の領域を分ける\n- <h~></h~>          : Header(タイトル)~部分は数字が入り、数字によってタイトルのサイズが変わる\n- <p></p>            : Paragraf(段落)\n- <a href=\"xxx\"></a> : リンク\n```\n\n## レイアウト関係\n```\n- <head></head>      : レイアウトの記述\n- <title></title>    : ブラウザのタブに表示される名前\n- <style></style>    : 文字やレイアウトの装飾を指定する部分\n\t- body{}           : <body></body>に対するレイアウト設定\n\t- div{}            : <div></div>に対するレイアウト設定\n\t- a:link,a:visited : リンクに対する書式設定\n\t- @media           : メディアクエリー（デバイスによって切り替える)レスポンシブデザインのための記述\n```\n### メタ\n```\n- <meta charset=\"\"/>    : 文字コードの指定\n- <meta http-equiv=\"\" content=\"\"/>\t: ページの種類の指定 \n- <meta name=\"\"content=\"\"/>         : \n```\n","source":"_posts/HTMLの概要.md","raw":"---\ntitle: HTMLの概要\ndate: 2021-02-05 00:21:18\ntags: HTML\n---\n# HTMLの特徴\n\n全てのコードはタグで囲まれている\n\n```html\n<body>\n  <title>タイトル</title>\n</body>\n```\n\n## HTMLのサンプルサイト\n[サンプルサイト](http://example.com)\n\n# タグ\n## 基本\n```\n- <html></html>      : HTMLの内容\n```\n## 文章関係\n```\n- <body></body>      : 文章の本文\n- <div></div>        : division(領域)画面上の領域を分ける\n- <h~></h~>          : Header(タイトル)~部分は数字が入り、数字によってタイトルのサイズが変わる\n- <p></p>            : Paragraf(段落)\n- <a href=\"xxx\"></a> : リンク\n```\n\n## レイアウト関係\n```\n- <head></head>      : レイアウトの記述\n- <title></title>    : ブラウザのタブに表示される名前\n- <style></style>    : 文字やレイアウトの装飾を指定する部分\n\t- body{}           : <body></body>に対するレイアウト設定\n\t- div{}            : <div></div>に対するレイアウト設定\n\t- a:link,a:visited : リンクに対する書式設定\n\t- @media           : メディアクエリー（デバイスによって切り替える)レスポンシブデザインのための記述\n```\n### メタ\n```\n- <meta charset=\"\"/>    : 文字コードの指定\n- <meta http-equiv=\"\" content=\"\"/>\t: ページの種類の指定 \n- <meta name=\"\"content=\"\"/>         : \n```\n","slug":"HTMLの概要","published":1,"updated":"2021-02-04T15:25:55.901Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh36q0005mzb6epdgf6t7","content":"<h1><span id=\"htmlの特徴\">HTMLの特徴</span></h1><p>全てのコードはタグで囲まれている</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>タイトル<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"htmlのサンプルサイト\">HTMLのサンプルサイト</span></h2><p><a href=\"http://example.com/\">サンプルサイト</a></p>\n<h1><span id=\"タグ\">タグ</span></h1><h2><span id=\"基本\">基本</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- &lt;html&gt;&lt;&#x2F;html&gt;      : HTMLの内容</span><br></pre></td></tr></table></figure>\n<h2><span id=\"文章関係\">文章関係</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- &lt;body&gt;&lt;&#x2F;body&gt;      : 文章の本文</span><br><span class=\"line\">- &lt;div&gt;&lt;&#x2F;div&gt;        : division(領域)画面上の領域を分ける</span><br><span class=\"line\">- &lt;h~&gt;&lt;&#x2F;h~&gt;          : Header(タイトル)~部分は数字が入り、数字によってタイトルのサイズが変わる</span><br><span class=\"line\">- &lt;p&gt;&lt;&#x2F;p&gt;            : Paragraf(段落)</span><br><span class=\"line\">- &lt;a href&#x3D;&quot;xxx&quot;&gt;&lt;&#x2F;a&gt; : リンク</span><br></pre></td></tr></table></figure>\n<h2><span id=\"レイアウト関係\">レイアウト関係</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- &lt;head&gt;&lt;&#x2F;head&gt;      : レイアウトの記述</span><br><span class=\"line\">- &lt;title&gt;&lt;&#x2F;title&gt;    : ブラウザのタブに表示される名前</span><br><span class=\"line\">- &lt;style&gt;&lt;&#x2F;style&gt;    : 文字やレイアウトの装飾を指定する部分</span><br><span class=\"line\">\t- body&#123;&#125;           : &lt;body&gt;&lt;&#x2F;body&gt;に対するレイアウト設定</span><br><span class=\"line\">\t- div&#123;&#125;            : &lt;div&gt;&lt;&#x2F;div&gt;に対するレイアウト設定</span><br><span class=\"line\">\t- a:link,a:visited : リンクに対する書式設定</span><br><span class=\"line\">\t- @media           : メディアクエリー（デバイスによって切り替える)レスポンシブデザインのための記述</span><br></pre></td></tr></table></figure>\n<h3><span id=\"メタ\">メタ</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- &lt;meta charset&#x3D;&quot;&quot;&#x2F;&gt;    : 文字コードの指定</span><br><span class=\"line\">- &lt;meta http-equiv&#x3D;&quot;&quot; content&#x3D;&quot;&quot;&#x2F;&gt;\t: ページの種類の指定 </span><br><span class=\"line\">- &lt;meta name&#x3D;&quot;&quot;content&#x3D;&quot;&quot;&#x2F;&gt;         : </span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"HTMLの特徴\"><a href=\"#HTMLの特徴\" class=\"headerlink\" title=\"HTMLの特徴\"></a>HTMLの特徴</h1><p>全てのコードはタグで囲まれている</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>タイトル<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"HTMLのサンプルサイト\"><a href=\"#HTMLのサンプルサイト\" class=\"headerlink\" title=\"HTMLのサンプルサイト\"></a>HTMLのサンプルサイト</h2><p><a href=\"http://example.com/\">サンプルサイト</a></p>\n<h1 id=\"タグ\"><a href=\"#タグ\" class=\"headerlink\" title=\"タグ\"></a>タグ</h1><h2 id=\"基本\"><a href=\"#基本\" class=\"headerlink\" title=\"基本\"></a>基本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- &lt;html&gt;&lt;&#x2F;html&gt;      : HTMLの内容</span><br></pre></td></tr></table></figure>\n<h2 id=\"文章関係\"><a href=\"#文章関係\" class=\"headerlink\" title=\"文章関係\"></a>文章関係</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- &lt;body&gt;&lt;&#x2F;body&gt;      : 文章の本文</span><br><span class=\"line\">- &lt;div&gt;&lt;&#x2F;div&gt;        : division(領域)画面上の領域を分ける</span><br><span class=\"line\">- &lt;h~&gt;&lt;&#x2F;h~&gt;          : Header(タイトル)~部分は数字が入り、数字によってタイトルのサイズが変わる</span><br><span class=\"line\">- &lt;p&gt;&lt;&#x2F;p&gt;            : Paragraf(段落)</span><br><span class=\"line\">- &lt;a href&#x3D;&quot;xxx&quot;&gt;&lt;&#x2F;a&gt; : リンク</span><br></pre></td></tr></table></figure>\n<h2 id=\"レイアウト関係\"><a href=\"#レイアウト関係\" class=\"headerlink\" title=\"レイアウト関係\"></a>レイアウト関係</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- &lt;head&gt;&lt;&#x2F;head&gt;      : レイアウトの記述</span><br><span class=\"line\">- &lt;title&gt;&lt;&#x2F;title&gt;    : ブラウザのタブに表示される名前</span><br><span class=\"line\">- &lt;style&gt;&lt;&#x2F;style&gt;    : 文字やレイアウトの装飾を指定する部分</span><br><span class=\"line\">\t- body&#123;&#125;           : &lt;body&gt;&lt;&#x2F;body&gt;に対するレイアウト設定</span><br><span class=\"line\">\t- div&#123;&#125;            : &lt;div&gt;&lt;&#x2F;div&gt;に対するレイアウト設定</span><br><span class=\"line\">\t- a:link,a:visited : リンクに対する書式設定</span><br><span class=\"line\">\t- @media           : メディアクエリー（デバイスによって切り替える)レスポンシブデザインのための記述</span><br></pre></td></tr></table></figure>\n<h3 id=\"メタ\"><a href=\"#メタ\" class=\"headerlink\" title=\"メタ\"></a>メタ</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- &lt;meta charset&#x3D;&quot;&quot;&#x2F;&gt;    : 文字コードの指定</span><br><span class=\"line\">- &lt;meta http-equiv&#x3D;&quot;&quot; content&#x3D;&quot;&quot;&#x2F;&gt;\t: ページの種類の指定 </span><br><span class=\"line\">- &lt;meta name&#x3D;&quot;&quot;content&#x3D;&quot;&quot;&#x2F;&gt;         : </span><br></pre></td></tr></table></figure>"},{"title":"Markdownで改行を入れる","date":"2021-02-13T23:39:40.000Z","_content":"# 改行の入れ方3パターン\n## 1. 半角空白を２つ入れて改行する\n- この改行の入れ方の場合、ブロックは別れない\n- `HTML`で言うところの、`<br>`タグと同じ\n```markdown\n1\n2\n3\n```\n\n## 2. 改行を１つ入れる\n- ブロックが別れる\n- `HTML`で言うところの、`<p>`タグと同じ\n```markdown\n1\n\n2\n\n3\n```\n\n## 3. \\<br\\>タグを入れる\n- `HTML`のタグと同じ\n```markdown\n1<br>2<br>3<br>\n```\n","source":"_posts/Markdownで改行を入れる.md","raw":"---\ntitle: Markdownで改行を入れる\ndate: 2021-02-14 08:39:40\ntags: Markdown\n---\n# 改行の入れ方3パターン\n## 1. 半角空白を２つ入れて改行する\n- この改行の入れ方の場合、ブロックは別れない\n- `HTML`で言うところの、`<br>`タグと同じ\n```markdown\n1\n2\n3\n```\n\n## 2. 改行を１つ入れる\n- ブロックが別れる\n- `HTML`で言うところの、`<p>`タグと同じ\n```markdown\n1\n\n2\n\n3\n```\n\n## 3. \\<br\\>タグを入れる\n- `HTML`のタグと同じ\n```markdown\n1<br>2<br>3<br>\n```\n","slug":"Markdownで改行を入れる","published":1,"updated":"2021-02-13T23:40:47.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh36r0007mzb6771k50qh","content":"<h1><span id=\"改行の入れ方3パターン\">改行の入れ方3パターン</span></h1><h2><span id=\"1-半角空白を2つ入れて改行する\">1. 半角空白を２つ入れて改行する</span></h2><ul>\n<li>この改行の入れ方の場合、ブロックは別れない</li>\n<li><code>HTML</code>で言うところの、<code>&lt;br&gt;</code>タグと同じ<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n<h2><span id=\"2-改行を1つ入れる\">2. 改行を１つ入れる</span></h2></li>\n<li>ブロックが別れる</li>\n<li><code>HTML</code>で言うところの、<code>&lt;p&gt;</code>タグと同じ<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\"></span><br><span class=\"line\">2</span><br><span class=\"line\"></span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n<h2><span id=\"3-ltbrgtタグを入れる\">3. &lt;br&gt;タグを入れる</span></h2></li>\n<li><code>HTML</code>のタグと同じ<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span>2<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span>3<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"改行の入れ方3パターン\"><a href=\"#改行の入れ方3パターン\" class=\"headerlink\" title=\"改行の入れ方3パターン\"></a>改行の入れ方3パターン</h1><h2 id=\"1-半角空白を２つ入れて改行する\"><a href=\"#1-半角空白を２つ入れて改行する\" class=\"headerlink\" title=\"1. 半角空白を２つ入れて改行する\"></a>1. 半角空白を２つ入れて改行する</h2><ul>\n<li>この改行の入れ方の場合、ブロックは別れない</li>\n<li><code>HTML</code>で言うところの、<code>&lt;br&gt;</code>タグと同じ<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-改行を１つ入れる\"><a href=\"#2-改行を１つ入れる\" class=\"headerlink\" title=\"2. 改行を１つ入れる\"></a>2. 改行を１つ入れる</h2></li>\n<li>ブロックが別れる</li>\n<li><code>HTML</code>で言うところの、<code>&lt;p&gt;</code>タグと同じ<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\"></span><br><span class=\"line\">2</span><br><span class=\"line\"></span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-lt-br-gt-タグを入れる\"><a href=\"#3-lt-br-gt-タグを入れる\" class=\"headerlink\" title=\"3. &lt;br&gt;タグを入れる\"></a>3. &lt;br&gt;タグを入れる</h2></li>\n<li><code>HTML</code>のタグと同じ<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span>2<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span>3<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"Swiftで迷路を解く","date":"2021-02-20T13:28:40.000Z","_content":"## 目的\n- Swiftの勉強\n\n## 制作時間\n- 4時間\n\n## コード\n```swift\nimport UIKit\n\nvar targetMaze = [\n    [\"#\",\"S\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n    [\"#\",\" \",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\" \",\"#\",\"#\"],\n    [\"#\",\" \",\" \",\" \",\" \",\"#\",\"#\",\" \",\" \",\"#\",\"#\"],\n    [\"#\",\" \",\"#\",\"#\",\" \",\" \",\" \",\" \",\"#\",\"#\",\"#\"],\n    [\"#\",\"#\",\"#\",\"#\",\" \",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n    [\"#\",\" \",\" \",\" \",\" \",\"#\",\" \",\" \",\" \",\"#\",\"#\"],\n    [\"#\",\" \",\"#\",\"#\",\"#\",\"#\",\" \",\"#\",\" \",\"#\",\"#\"],\n    [\"#\",\" \",\"#\",\"#\",\"#\",\"#\",\" \",\"#\",\" \",\"#\",\"#\"],\n    [\"#\",\" \",\" \",\" \",\" \",\" \",\" \",\"#\",\" \",\"#\",\"#\"],\n    [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"G\",\"#\",\"#\"]\n]\n\nenum MapType:String\n{\n    case Start = \"S\"\n    case Goal = \"G\"\n    case Wall = \"#\"\n    case Root = \"+\"\n}\n\nstruct Vec2:Equatable{\n    var X:Int = 0\n    var Y:Int = 0\n}\n\nstruct Direction\n{\n    var Now:Vec2\n\n    var Up:Vec2?\n    var Down:Vec2?\n    var Right:Vec2?\n    var Left:Vec2?\n}\n\nfunc CheckRoad(maze:[[String]],pos:Vec2?,beforPos:Vec2,maxPos:Vec2,checkType:MapType)-> Direction?\n{\n    if(pos == nil) {\n        return nil\n    }\n\n    //  上,右,下,左\n    var retPos:Direction = Direction(Now:pos!,Up:nil,Down: nil,Right: nil,Left: nil)\n\n    //  上下左右の座標を取得\n    let minusY = retPos.Now.Y - 1\n    let plusY = retPos.Now.Y + 1\n    let minusX = retPos.Now.X - 1\n    let plusX = retPos.Now.X + 1\n\n    // マップ内かチェック\n    if(minusY >= 0){\n        retPos.Down = Vec2()\n    }\n    if(plusY < maxPos.Y){\n        retPos.Up = Vec2()\n    }\n    if(minusX >= 0){\n        retPos.Left = Vec2()\n    }\n    if(plusX < maxPos.X){\n        retPos.Right = Vec2()\n    }\n\n    //  壁があるかチェック\n    if(retPos.Down == Vec2() &&\n        (maze[minusY][retPos.Now.X] != checkType.rawValue) &&\n        beforPos != Vec2(X: retPos.Now.X, Y: minusY))\n    {\n        retPos.Down = Vec2(X:retPos.Now.X,Y:minusY)\n    }\n    else{\n        retPos.Down = nil\n    }\n\n    if(retPos.Up == Vec2() &&\n        (maze[plusY][retPos.Now.X] != checkType.rawValue) &&\n       beforPos != Vec2(X: retPos.Now.X, Y: plusY))\n    {\n        retPos.Up = Vec2(X:retPos.Now.X,Y:plusY)\n    }else{\n        retPos.Up = nil\n    }\n\n    if(retPos.Left == Vec2() &&\n        (maze[retPos.Now.Y][minusX] != checkType.rawValue) &&\n        beforPos != Vec2(X: minusX, Y: retPos.Now.Y))\n    {\n        retPos.Left = Vec2(X:minusX,Y:retPos.Now.Y)\n    }else{\n        retPos.Left = nil\n    }\n\n    if(retPos.Right == Vec2() &&\n        (maze[retPos.Now.Y][plusX] != checkType.rawValue) &&\n        beforPos != Vec2(X: plusX, Y: retPos.Now.Y))\n    {\n        retPos.Right = Vec2(X:plusX,Y:retPos.Now.Y)\n    }else{\n        retPos.Right = nil\n    }\n\n\n    return retPos\n}\n\n// 指定したターゲットの位置を返す\n// 見つからなかった場合は、nilが返えってくる\nfunc serchTargetPoint(maze:[[String]],targetMapType:MapType)->Vec2?\n{\n    var retPos:Vec2? = nil\n\n    let mazeYCount = maze.count - 1\n    let mazeXCount = maze[0].count - 1\n\n    for Y in 0...mazeYCount\n    {\n        for X in 0...mazeXCount{\n            let checkValue = maze[Y][X]\n\n            if(checkValue == targetMapType.rawValue)\n            {\n                retPos = Vec2(X:X,Y:Y)\n            }\n        }\n    }\n\n    return retPos\n}\n\nfunc printMaze(maze:[[String]]){\n\n    let mazeYCount = maze.count - 1\n    let mazeXCount = maze[0].count - 1\n\n    for Y in 0...mazeYCount\n    {\n        print(\"\\n\")\n        for X in 0...mazeXCount{\n            print(maze[Y][X], terminator: \"\")\n        }\n    }\n\n    print(\"\\n\")\n}\n\n\nprintMaze(maze:targetMaze)\n\nlet SPos = serchTargetPoint(maze:targetMaze,targetMapType:MapType.Start)\nlet GPos = serchTargetPoint(maze:targetMaze,targetMapType:MapType.Goal)\n\nprint(SPos ?? \"スタートなし\")\nprint(GPos ?? \"ゴールなし\")\n\n\nlet mazeYCount = targetMaze.count - 1\nlet mazeXCount = targetMaze[0].count - 1\n\nlet maxPos = Vec2(X: mazeYCount, Y: mazeXCount)\n\nvar RootList:Array<Direction> = Array<Direction>()\nRootList.append (CheckRoad(maze:targetMaze,pos: SPos,beforPos: Vec2(X: 0,Y: 0),maxPos: maxPos,checkType: MapType.Wall)!)\n\n\nvar BlackList:Array<Vec2> = Array<Vec2>()\n\nwhile true {\n\n    let direction = CheckRoad(maze:targetMaze,pos: RootList.last?.Up ?? nil,beforPos: RootList.last?.Now ?? Vec2(),maxPos: maxPos,checkType: MapType.Wall)\n\n    var checkFlag:Bool = false\n\n    for black in BlackList\n    {\n        if(black == direction?.Now ?? Vec2())\n        {\n            checkFlag = true\n        }\n    }\n\n    if(GPos == direction?.Now ?? Vec2())\n    {\n        break\n    }\n\n\n    if(direction != nil && !checkFlag)\n    {\n        RootList.append(direction!)\n    }else\n    {\n        let direction = CheckRoad(maze:targetMaze,pos: RootList.last?.Right ?? nil,beforPos: RootList.last?.Now ?? Vec2(),maxPos: maxPos,checkType: MapType.Wall)\n\n        var checkFlag:Bool = false\n\n        for black in BlackList\n        {\n            if(black == direction?.Now ?? Vec2())\n            {\n                checkFlag = true\n            }\n        }\n\n        if(GPos == direction?.Now ?? Vec2())\n        {\n            break\n        }\n\n\n        if(direction != nil && !checkFlag)\n        {\n            RootList.append(direction!)\n        }else\n        {\n            let direction = CheckRoad(maze:targetMaze,pos: RootList.last?.Down ?? nil,beforPos: RootList.last?.Now ?? Vec2(),maxPos: maxPos,checkType: MapType.Wall)\n\n            var checkFlag:Bool = false\n\n            for black in BlackList\n            {\n                if(black == direction?.Now ?? Vec2())\n                {\n                    checkFlag = true\n                }\n            }\n\n            if(GPos == direction?.Now ?? Vec2())\n            {\n                break\n            }\n\n\n            if(direction != nil && !checkFlag)\n            {\n                RootList.append(direction!)\n            }else\n            {\n                let direction = CheckRoad(maze:targetMaze,pos: RootList.last?.Left ?? nil,beforPos: RootList.last?.Now ?? Vec2(),maxPos: maxPos,checkType: MapType.Wall)\n\n                var checkFlag:Bool = false\n\n                for black in BlackList\n                {\n                    if(black == direction?.Now ?? Vec2())\n                    {\n                        checkFlag = true\n                    }\n                }\n\n                if(GPos == direction?.Now ?? Vec2())\n                {\n                    break\n                }\n\n                if(direction != nil && !checkFlag)\n                {\n                    RootList.append(direction!)\n                }else\n                {\n                    BlackList.append(RootList.last?.Now ?? Vec2())\n                    if(RootList.count > 0)\n                    {\n                        RootList.removeLast()\n                    }else\n                    {\n                        break\n                    }\n                }\n            }\n        }\n    }\n}\n\nfor root in RootList\n{\n    print(root.Now)\n    targetMaze[root.Now.Y][root.Now.X] = MapType.Root.rawValue\n}\n\nprintMaze(maze:targetMaze)\n```\n\n## 感想\n- `Enum`のコードに値をセットできるので、コードが読みやすい\n- ちょこちょこ出てくる制約に最初はイライラするが、書いているとなれる\n- 制約があるおかげで、コードに統一感が出る\n\n\n","source":"_posts/Swiftで迷路を解く.md","raw":"---\ntitle: Swiftで迷路を解く\ndate: 2021-02-20 22:28:40\ntags: Swift\n---\n## 目的\n- Swiftの勉強\n\n## 制作時間\n- 4時間\n\n## コード\n```swift\nimport UIKit\n\nvar targetMaze = [\n    [\"#\",\"S\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n    [\"#\",\" \",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\" \",\"#\",\"#\"],\n    [\"#\",\" \",\" \",\" \",\" \",\"#\",\"#\",\" \",\" \",\"#\",\"#\"],\n    [\"#\",\" \",\"#\",\"#\",\" \",\" \",\" \",\" \",\"#\",\"#\",\"#\"],\n    [\"#\",\"#\",\"#\",\"#\",\" \",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n    [\"#\",\" \",\" \",\" \",\" \",\"#\",\" \",\" \",\" \",\"#\",\"#\"],\n    [\"#\",\" \",\"#\",\"#\",\"#\",\"#\",\" \",\"#\",\" \",\"#\",\"#\"],\n    [\"#\",\" \",\"#\",\"#\",\"#\",\"#\",\" \",\"#\",\" \",\"#\",\"#\"],\n    [\"#\",\" \",\" \",\" \",\" \",\" \",\" \",\"#\",\" \",\"#\",\"#\"],\n    [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"G\",\"#\",\"#\"]\n]\n\nenum MapType:String\n{\n    case Start = \"S\"\n    case Goal = \"G\"\n    case Wall = \"#\"\n    case Root = \"+\"\n}\n\nstruct Vec2:Equatable{\n    var X:Int = 0\n    var Y:Int = 0\n}\n\nstruct Direction\n{\n    var Now:Vec2\n\n    var Up:Vec2?\n    var Down:Vec2?\n    var Right:Vec2?\n    var Left:Vec2?\n}\n\nfunc CheckRoad(maze:[[String]],pos:Vec2?,beforPos:Vec2,maxPos:Vec2,checkType:MapType)-> Direction?\n{\n    if(pos == nil) {\n        return nil\n    }\n\n    //  上,右,下,左\n    var retPos:Direction = Direction(Now:pos!,Up:nil,Down: nil,Right: nil,Left: nil)\n\n    //  上下左右の座標を取得\n    let minusY = retPos.Now.Y - 1\n    let plusY = retPos.Now.Y + 1\n    let minusX = retPos.Now.X - 1\n    let plusX = retPos.Now.X + 1\n\n    // マップ内かチェック\n    if(minusY >= 0){\n        retPos.Down = Vec2()\n    }\n    if(plusY < maxPos.Y){\n        retPos.Up = Vec2()\n    }\n    if(minusX >= 0){\n        retPos.Left = Vec2()\n    }\n    if(plusX < maxPos.X){\n        retPos.Right = Vec2()\n    }\n\n    //  壁があるかチェック\n    if(retPos.Down == Vec2() &&\n        (maze[minusY][retPos.Now.X] != checkType.rawValue) &&\n        beforPos != Vec2(X: retPos.Now.X, Y: minusY))\n    {\n        retPos.Down = Vec2(X:retPos.Now.X,Y:minusY)\n    }\n    else{\n        retPos.Down = nil\n    }\n\n    if(retPos.Up == Vec2() &&\n        (maze[plusY][retPos.Now.X] != checkType.rawValue) &&\n       beforPos != Vec2(X: retPos.Now.X, Y: plusY))\n    {\n        retPos.Up = Vec2(X:retPos.Now.X,Y:plusY)\n    }else{\n        retPos.Up = nil\n    }\n\n    if(retPos.Left == Vec2() &&\n        (maze[retPos.Now.Y][minusX] != checkType.rawValue) &&\n        beforPos != Vec2(X: minusX, Y: retPos.Now.Y))\n    {\n        retPos.Left = Vec2(X:minusX,Y:retPos.Now.Y)\n    }else{\n        retPos.Left = nil\n    }\n\n    if(retPos.Right == Vec2() &&\n        (maze[retPos.Now.Y][plusX] != checkType.rawValue) &&\n        beforPos != Vec2(X: plusX, Y: retPos.Now.Y))\n    {\n        retPos.Right = Vec2(X:plusX,Y:retPos.Now.Y)\n    }else{\n        retPos.Right = nil\n    }\n\n\n    return retPos\n}\n\n// 指定したターゲットの位置を返す\n// 見つからなかった場合は、nilが返えってくる\nfunc serchTargetPoint(maze:[[String]],targetMapType:MapType)->Vec2?\n{\n    var retPos:Vec2? = nil\n\n    let mazeYCount = maze.count - 1\n    let mazeXCount = maze[0].count - 1\n\n    for Y in 0...mazeYCount\n    {\n        for X in 0...mazeXCount{\n            let checkValue = maze[Y][X]\n\n            if(checkValue == targetMapType.rawValue)\n            {\n                retPos = Vec2(X:X,Y:Y)\n            }\n        }\n    }\n\n    return retPos\n}\n\nfunc printMaze(maze:[[String]]){\n\n    let mazeYCount = maze.count - 1\n    let mazeXCount = maze[0].count - 1\n\n    for Y in 0...mazeYCount\n    {\n        print(\"\\n\")\n        for X in 0...mazeXCount{\n            print(maze[Y][X], terminator: \"\")\n        }\n    }\n\n    print(\"\\n\")\n}\n\n\nprintMaze(maze:targetMaze)\n\nlet SPos = serchTargetPoint(maze:targetMaze,targetMapType:MapType.Start)\nlet GPos = serchTargetPoint(maze:targetMaze,targetMapType:MapType.Goal)\n\nprint(SPos ?? \"スタートなし\")\nprint(GPos ?? \"ゴールなし\")\n\n\nlet mazeYCount = targetMaze.count - 1\nlet mazeXCount = targetMaze[0].count - 1\n\nlet maxPos = Vec2(X: mazeYCount, Y: mazeXCount)\n\nvar RootList:Array<Direction> = Array<Direction>()\nRootList.append (CheckRoad(maze:targetMaze,pos: SPos,beforPos: Vec2(X: 0,Y: 0),maxPos: maxPos,checkType: MapType.Wall)!)\n\n\nvar BlackList:Array<Vec2> = Array<Vec2>()\n\nwhile true {\n\n    let direction = CheckRoad(maze:targetMaze,pos: RootList.last?.Up ?? nil,beforPos: RootList.last?.Now ?? Vec2(),maxPos: maxPos,checkType: MapType.Wall)\n\n    var checkFlag:Bool = false\n\n    for black in BlackList\n    {\n        if(black == direction?.Now ?? Vec2())\n        {\n            checkFlag = true\n        }\n    }\n\n    if(GPos == direction?.Now ?? Vec2())\n    {\n        break\n    }\n\n\n    if(direction != nil && !checkFlag)\n    {\n        RootList.append(direction!)\n    }else\n    {\n        let direction = CheckRoad(maze:targetMaze,pos: RootList.last?.Right ?? nil,beforPos: RootList.last?.Now ?? Vec2(),maxPos: maxPos,checkType: MapType.Wall)\n\n        var checkFlag:Bool = false\n\n        for black in BlackList\n        {\n            if(black == direction?.Now ?? Vec2())\n            {\n                checkFlag = true\n            }\n        }\n\n        if(GPos == direction?.Now ?? Vec2())\n        {\n            break\n        }\n\n\n        if(direction != nil && !checkFlag)\n        {\n            RootList.append(direction!)\n        }else\n        {\n            let direction = CheckRoad(maze:targetMaze,pos: RootList.last?.Down ?? nil,beforPos: RootList.last?.Now ?? Vec2(),maxPos: maxPos,checkType: MapType.Wall)\n\n            var checkFlag:Bool = false\n\n            for black in BlackList\n            {\n                if(black == direction?.Now ?? Vec2())\n                {\n                    checkFlag = true\n                }\n            }\n\n            if(GPos == direction?.Now ?? Vec2())\n            {\n                break\n            }\n\n\n            if(direction != nil && !checkFlag)\n            {\n                RootList.append(direction!)\n            }else\n            {\n                let direction = CheckRoad(maze:targetMaze,pos: RootList.last?.Left ?? nil,beforPos: RootList.last?.Now ?? Vec2(),maxPos: maxPos,checkType: MapType.Wall)\n\n                var checkFlag:Bool = false\n\n                for black in BlackList\n                {\n                    if(black == direction?.Now ?? Vec2())\n                    {\n                        checkFlag = true\n                    }\n                }\n\n                if(GPos == direction?.Now ?? Vec2())\n                {\n                    break\n                }\n\n                if(direction != nil && !checkFlag)\n                {\n                    RootList.append(direction!)\n                }else\n                {\n                    BlackList.append(RootList.last?.Now ?? Vec2())\n                    if(RootList.count > 0)\n                    {\n                        RootList.removeLast()\n                    }else\n                    {\n                        break\n                    }\n                }\n            }\n        }\n    }\n}\n\nfor root in RootList\n{\n    print(root.Now)\n    targetMaze[root.Now.Y][root.Now.X] = MapType.Root.rawValue\n}\n\nprintMaze(maze:targetMaze)\n```\n\n## 感想\n- `Enum`のコードに値をセットできるので、コードが読みやすい\n- ちょこちょこ出てくる制約に最初はイライラするが、書いているとなれる\n- 制約があるおかげで、コードに統一感が出る\n\n\n","slug":"Swiftで迷路を解く","published":1,"updated":"2021-02-20T13:28:54.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3700009mzb61zx74h99","content":"<h2><span id=\"目的\">目的</span></h2><ul>\n<li>Swiftの勉強</li>\n</ul>\n<h2><span id=\"制作時間\">制作時間</span></h2><ul>\n<li>4時間</li>\n</ul>\n<h2><span id=\"コード\">コード</span></h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> targetMaze <span class=\"operator\">=</span> [</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;S&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;G&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">MapType</span>:<span class=\"title\">String</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Start</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;S&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Goal</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;G&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Wall</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;#&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Root</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;+&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Vec2</span>:<span class=\"title\">Equatable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">X</span>:<span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Y</span>:<span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Direction</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Now</span>:<span class=\"type\">Vec2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Up</span>:<span class=\"type\">Vec2</span>?</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Down</span>:<span class=\"type\">Vec2</span>?</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Right</span>:<span class=\"type\">Vec2</span>?</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Left</span>:<span class=\"type\">Vec2</span>?</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">CheckRoad</span><span class=\"params\">(maze:[[String]],pos:Vec2?,beforPos:Vec2,maxPos:Vec2,checkType:MapType)</span></span>-&gt; <span class=\"type\">Direction</span>?</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pos <span class=\"operator\">==</span> <span class=\"literal\">nil</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//  上,右,下,左</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> retPos:<span class=\"type\">Direction</span> <span class=\"operator\">=</span> <span class=\"type\">Direction</span>(<span class=\"type\">Now</span>:pos<span class=\"operator\">!</span>,<span class=\"type\">Up</span>:<span class=\"literal\">nil</span>,<span class=\"type\">Down</span>: <span class=\"literal\">nil</span>,<span class=\"type\">Right</span>: <span class=\"literal\">nil</span>,<span class=\"type\">Left</span>: <span class=\"literal\">nil</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//  上下左右の座標を取得</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> minusY <span class=\"operator\">=</span> retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span> <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> plusY <span class=\"operator\">=</span> retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span> <span class=\"operator\">+</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> minusX <span class=\"operator\">=</span> retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span> <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> plusX <span class=\"operator\">=</span> retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span> <span class=\"operator\">+</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// マップ内かチェック</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(minusY <span class=\"operator\">&gt;=</span> <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Down</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(plusY <span class=\"operator\">&lt;</span> maxPos.<span class=\"type\">Y</span>)&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Up</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(minusX <span class=\"operator\">&gt;=</span> <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Left</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(plusX <span class=\"operator\">&lt;</span> maxPos.<span class=\"type\">X</span>)&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Right</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//  壁があるかチェック</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(retPos.<span class=\"type\">Down</span> <span class=\"operator\">==</span> <span class=\"type\">Vec2</span>() <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        (maze[minusY][retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>] <span class=\"operator\">!=</span> checkType.rawValue) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        beforPos <span class=\"operator\">!=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>, <span class=\"type\">Y</span>: minusY))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Down</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>:retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>,<span class=\"type\">Y</span>:minusY)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Down</span> <span class=\"operator\">=</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(retPos.<span class=\"type\">Up</span> <span class=\"operator\">==</span> <span class=\"type\">Vec2</span>() <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        (maze[plusY][retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>] <span class=\"operator\">!=</span> checkType.rawValue) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">       beforPos <span class=\"operator\">!=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>, <span class=\"type\">Y</span>: plusY))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Up</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>:retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>,<span class=\"type\">Y</span>:plusY)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Up</span> <span class=\"operator\">=</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(retPos.<span class=\"type\">Left</span> <span class=\"operator\">==</span> <span class=\"type\">Vec2</span>() <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        (maze[retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>][minusX] <span class=\"operator\">!=</span> checkType.rawValue) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        beforPos <span class=\"operator\">!=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: minusX, <span class=\"type\">Y</span>: retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Left</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>:minusX,<span class=\"type\">Y</span>:retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Left</span> <span class=\"operator\">=</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(retPos.<span class=\"type\">Right</span> <span class=\"operator\">==</span> <span class=\"type\">Vec2</span>() <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        (maze[retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>][plusX] <span class=\"operator\">!=</span> checkType.rawValue) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        beforPos <span class=\"operator\">!=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: plusX, <span class=\"type\">Y</span>: retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Right</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>:plusX,<span class=\"type\">Y</span>:retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Right</span> <span class=\"operator\">=</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retPos</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 指定したターゲットの位置を返す</span></span><br><span class=\"line\"><span class=\"comment\">// 見つからなかった場合は、nilが返えってくる</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">serchTargetPoint</span><span class=\"params\">(maze:[[String]],targetMapType:MapType)</span></span>-&gt;<span class=\"type\">Vec2</span>?</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> retPos:<span class=\"type\">Vec2</span>? <span class=\"operator\">=</span> <span class=\"literal\">nil</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> mazeYCount <span class=\"operator\">=</span> maze.count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> mazeXCount <span class=\"operator\">=</span> maze[<span class=\"number\">0</span>].count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"type\">Y</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>mazeYCount</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"type\">X</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>mazeXCount&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> checkValue <span class=\"operator\">=</span> maze[<span class=\"type\">Y</span>][<span class=\"type\">X</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(checkValue <span class=\"operator\">==</span> targetMapType.rawValue)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                retPos <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>:<span class=\"type\">X</span>,<span class=\"type\">Y</span>:<span class=\"type\">Y</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retPos</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printMaze</span><span class=\"params\">(maze:[[String]])</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> mazeYCount <span class=\"operator\">=</span> maze.count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> mazeXCount <span class=\"operator\">=</span> maze[<span class=\"number\">0</span>].count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"type\">Y</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>mazeYCount</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">\\n</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"type\">X</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>mazeXCount&#123;</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(maze[<span class=\"type\">Y</span>][<span class=\"type\">X</span>], terminator: <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">\\n</span>&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">printMaze(maze:targetMaze)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"type\">SPos</span> <span class=\"operator\">=</span> serchTargetPoint(maze:targetMaze,targetMapType:<span class=\"type\">MapType</span>.<span class=\"type\">Start</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"type\">GPos</span> <span class=\"operator\">=</span> serchTargetPoint(maze:targetMaze,targetMapType:<span class=\"type\">MapType</span>.<span class=\"type\">Goal</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"type\">SPos</span> <span class=\"operator\">??</span> <span class=\"string\">&quot;スタートなし&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"type\">GPos</span> <span class=\"operator\">??</span> <span class=\"string\">&quot;ゴールなし&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> mazeYCount <span class=\"operator\">=</span> targetMaze.count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> mazeXCount <span class=\"operator\">=</span> targetMaze[<span class=\"number\">0</span>].count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> maxPos <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: mazeYCount, <span class=\"type\">Y</span>: mazeXCount)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"type\">RootList</span>:<span class=\"type\">Array</span>&lt;<span class=\"type\">Direction</span>&gt; <span class=\"operator\">=</span> <span class=\"type\">Array</span>&lt;<span class=\"type\">Direction</span>&gt;()</span><br><span class=\"line\"><span class=\"type\">RootList</span>.append (<span class=\"type\">CheckRoad</span>(maze:targetMaze,pos: <span class=\"type\">SPos</span>,beforPos: <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: <span class=\"number\">0</span>,<span class=\"type\">Y</span>: <span class=\"number\">0</span>),maxPos: maxPos,checkType: <span class=\"type\">MapType</span>.<span class=\"type\">Wall</span>)<span class=\"operator\">!</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"type\">BlackList</span>:<span class=\"type\">Array</span>&lt;<span class=\"type\">Vec2</span>&gt; <span class=\"operator\">=</span> <span class=\"type\">Array</span>&lt;<span class=\"type\">Vec2</span>&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">true</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> direction <span class=\"operator\">=</span> <span class=\"type\">CheckRoad</span>(maze:targetMaze,pos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Up</span> <span class=\"operator\">??</span> <span class=\"literal\">nil</span>,beforPos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>(),maxPos: maxPos,checkType: <span class=\"type\">MapType</span>.<span class=\"type\">Wall</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> checkFlag:<span class=\"type\">Bool</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> black <span class=\"keyword\">in</span> <span class=\"type\">BlackList</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(black <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            checkFlag <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"type\">GPos</span> <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(direction <span class=\"operator\">!=</span> <span class=\"literal\">nil</span> <span class=\"operator\">&amp;&amp;</span> <span class=\"operator\">!</span>checkFlag)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">RootList</span>.append(direction<span class=\"operator\">!</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> direction <span class=\"operator\">=</span> <span class=\"type\">CheckRoad</span>(maze:targetMaze,pos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Right</span> <span class=\"operator\">??</span> <span class=\"literal\">nil</span>,beforPos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>(),maxPos: maxPos,checkType: <span class=\"type\">MapType</span>.<span class=\"type\">Wall</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> checkFlag:<span class=\"type\">Bool</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> black <span class=\"keyword\">in</span> <span class=\"type\">BlackList</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(black <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                checkFlag <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"type\">GPos</span> <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(direction <span class=\"operator\">!=</span> <span class=\"literal\">nil</span> <span class=\"operator\">&amp;&amp;</span> <span class=\"operator\">!</span>checkFlag)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">RootList</span>.append(direction<span class=\"operator\">!</span>)</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> direction <span class=\"operator\">=</span> <span class=\"type\">CheckRoad</span>(maze:targetMaze,pos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Down</span> <span class=\"operator\">??</span> <span class=\"literal\">nil</span>,beforPos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>(),maxPos: maxPos,checkType: <span class=\"type\">MapType</span>.<span class=\"type\">Wall</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> checkFlag:<span class=\"type\">Bool</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> black <span class=\"keyword\">in</span> <span class=\"type\">BlackList</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(black <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    checkFlag <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"type\">GPos</span> <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(direction <span class=\"operator\">!=</span> <span class=\"literal\">nil</span> <span class=\"operator\">&amp;&amp;</span> <span class=\"operator\">!</span>checkFlag)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"type\">RootList</span>.append(direction<span class=\"operator\">!</span>)</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> direction <span class=\"operator\">=</span> <span class=\"type\">CheckRoad</span>(maze:targetMaze,pos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Left</span> <span class=\"operator\">??</span> <span class=\"literal\">nil</span>,beforPos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>(),maxPos: maxPos,checkType: <span class=\"type\">MapType</span>.<span class=\"type\">Wall</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> checkFlag:<span class=\"type\">Bool</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">for</span> black <span class=\"keyword\">in</span> <span class=\"type\">BlackList</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(black <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        checkFlag <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"type\">GPos</span> <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(direction <span class=\"operator\">!=</span> <span class=\"literal\">nil</span> <span class=\"operator\">&amp;&amp;</span> <span class=\"operator\">!</span>checkFlag)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"type\">RootList</span>.append(direction<span class=\"operator\">!</span>)</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"type\">BlackList</span>.append(<span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(<span class=\"type\">RootList</span>.count <span class=\"operator\">&gt;</span> <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"type\">RootList</span>.removeLast()</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> root <span class=\"keyword\">in</span> <span class=\"type\">RootList</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(root.<span class=\"type\">Now</span>)</span><br><span class=\"line\">    targetMaze[root.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>][root.<span class=\"type\">Now</span>.<span class=\"type\">X</span>] <span class=\"operator\">=</span> <span class=\"type\">MapType</span>.<span class=\"type\">Root</span>.rawValue</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">printMaze(maze:targetMaze)</span><br></pre></td></tr></table></figure>\n<h2><span id=\"感想\">感想</span></h2><ul>\n<li><code>Enum</code>のコードに値をセットできるので、コードが読みやすい</li>\n<li>ちょこちょこ出てくる制約に最初はイライラするが、書いているとなれる</li>\n<li>制約があるおかげで、コードに統一感が出る</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><ul>\n<li>Swiftの勉強</li>\n</ul>\n<h2 id=\"制作時間\"><a href=\"#制作時間\" class=\"headerlink\" title=\"制作時間\"></a>制作時間</h2><ul>\n<li>4時間</li>\n</ul>\n<h2 id=\"コード\"><a href=\"#コード\" class=\"headerlink\" title=\"コード\"></a>コード</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> targetMaze <span class=\"operator\">=</span> [</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;S&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;G&quot;</span>,<span class=\"string\">&quot;#&quot;</span>,<span class=\"string\">&quot;#&quot;</span>]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">MapType</span>:<span class=\"title\">String</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Start</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;S&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Goal</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;G&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Wall</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;#&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Root</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;+&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Vec2</span>:<span class=\"title\">Equatable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">X</span>:<span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Y</span>:<span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Direction</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Now</span>:<span class=\"type\">Vec2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Up</span>:<span class=\"type\">Vec2</span>?</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Down</span>:<span class=\"type\">Vec2</span>?</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Right</span>:<span class=\"type\">Vec2</span>?</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"type\">Left</span>:<span class=\"type\">Vec2</span>?</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">CheckRoad</span><span class=\"params\">(maze:[[String]],pos:Vec2?,beforPos:Vec2,maxPos:Vec2,checkType:MapType)</span></span>-&gt; <span class=\"type\">Direction</span>?</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pos <span class=\"operator\">==</span> <span class=\"literal\">nil</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//  上,右,下,左</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> retPos:<span class=\"type\">Direction</span> <span class=\"operator\">=</span> <span class=\"type\">Direction</span>(<span class=\"type\">Now</span>:pos<span class=\"operator\">!</span>,<span class=\"type\">Up</span>:<span class=\"literal\">nil</span>,<span class=\"type\">Down</span>: <span class=\"literal\">nil</span>,<span class=\"type\">Right</span>: <span class=\"literal\">nil</span>,<span class=\"type\">Left</span>: <span class=\"literal\">nil</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//  上下左右の座標を取得</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> minusY <span class=\"operator\">=</span> retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span> <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> plusY <span class=\"operator\">=</span> retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span> <span class=\"operator\">+</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> minusX <span class=\"operator\">=</span> retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span> <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> plusX <span class=\"operator\">=</span> retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span> <span class=\"operator\">+</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// マップ内かチェック</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(minusY <span class=\"operator\">&gt;=</span> <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Down</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(plusY <span class=\"operator\">&lt;</span> maxPos.<span class=\"type\">Y</span>)&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Up</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(minusX <span class=\"operator\">&gt;=</span> <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Left</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(plusX <span class=\"operator\">&lt;</span> maxPos.<span class=\"type\">X</span>)&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Right</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//  壁があるかチェック</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(retPos.<span class=\"type\">Down</span> <span class=\"operator\">==</span> <span class=\"type\">Vec2</span>() <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        (maze[minusY][retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>] <span class=\"operator\">!=</span> checkType.rawValue) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        beforPos <span class=\"operator\">!=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>, <span class=\"type\">Y</span>: minusY))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Down</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>:retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>,<span class=\"type\">Y</span>:minusY)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Down</span> <span class=\"operator\">=</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(retPos.<span class=\"type\">Up</span> <span class=\"operator\">==</span> <span class=\"type\">Vec2</span>() <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        (maze[plusY][retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>] <span class=\"operator\">!=</span> checkType.rawValue) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">       beforPos <span class=\"operator\">!=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>, <span class=\"type\">Y</span>: plusY))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Up</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>:retPos.<span class=\"type\">Now</span>.<span class=\"type\">X</span>,<span class=\"type\">Y</span>:plusY)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Up</span> <span class=\"operator\">=</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(retPos.<span class=\"type\">Left</span> <span class=\"operator\">==</span> <span class=\"type\">Vec2</span>() <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        (maze[retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>][minusX] <span class=\"operator\">!=</span> checkType.rawValue) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        beforPos <span class=\"operator\">!=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: minusX, <span class=\"type\">Y</span>: retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Left</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>:minusX,<span class=\"type\">Y</span>:retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Left</span> <span class=\"operator\">=</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(retPos.<span class=\"type\">Right</span> <span class=\"operator\">==</span> <span class=\"type\">Vec2</span>() <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        (maze[retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>][plusX] <span class=\"operator\">!=</span> checkType.rawValue) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">        beforPos <span class=\"operator\">!=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: plusX, <span class=\"type\">Y</span>: retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Right</span> <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>:plusX,<span class=\"type\">Y</span>:retPos.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        retPos.<span class=\"type\">Right</span> <span class=\"operator\">=</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retPos</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 指定したターゲットの位置を返す</span></span><br><span class=\"line\"><span class=\"comment\">// 見つからなかった場合は、nilが返えってくる</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">serchTargetPoint</span><span class=\"params\">(maze:[[String]],targetMapType:MapType)</span></span>-&gt;<span class=\"type\">Vec2</span>?</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> retPos:<span class=\"type\">Vec2</span>? <span class=\"operator\">=</span> <span class=\"literal\">nil</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> mazeYCount <span class=\"operator\">=</span> maze.count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> mazeXCount <span class=\"operator\">=</span> maze[<span class=\"number\">0</span>].count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"type\">Y</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>mazeYCount</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"type\">X</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>mazeXCount&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> checkValue <span class=\"operator\">=</span> maze[<span class=\"type\">Y</span>][<span class=\"type\">X</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(checkValue <span class=\"operator\">==</span> targetMapType.rawValue)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                retPos <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>:<span class=\"type\">X</span>,<span class=\"type\">Y</span>:<span class=\"type\">Y</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retPos</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printMaze</span><span class=\"params\">(maze:[[String]])</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> mazeYCount <span class=\"operator\">=</span> maze.count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> mazeXCount <span class=\"operator\">=</span> maze[<span class=\"number\">0</span>].count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"type\">Y</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>mazeYCount</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">\\n</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"type\">X</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>mazeXCount&#123;</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(maze[<span class=\"type\">Y</span>][<span class=\"type\">X</span>], terminator: <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">\\n</span>&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">printMaze(maze:targetMaze)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"type\">SPos</span> <span class=\"operator\">=</span> serchTargetPoint(maze:targetMaze,targetMapType:<span class=\"type\">MapType</span>.<span class=\"type\">Start</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"type\">GPos</span> <span class=\"operator\">=</span> serchTargetPoint(maze:targetMaze,targetMapType:<span class=\"type\">MapType</span>.<span class=\"type\">Goal</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"type\">SPos</span> <span class=\"operator\">??</span> <span class=\"string\">&quot;スタートなし&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"type\">GPos</span> <span class=\"operator\">??</span> <span class=\"string\">&quot;ゴールなし&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> mazeYCount <span class=\"operator\">=</span> targetMaze.count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> mazeXCount <span class=\"operator\">=</span> targetMaze[<span class=\"number\">0</span>].count <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> maxPos <span class=\"operator\">=</span> <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: mazeYCount, <span class=\"type\">Y</span>: mazeXCount)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"type\">RootList</span>:<span class=\"type\">Array</span>&lt;<span class=\"type\">Direction</span>&gt; <span class=\"operator\">=</span> <span class=\"type\">Array</span>&lt;<span class=\"type\">Direction</span>&gt;()</span><br><span class=\"line\"><span class=\"type\">RootList</span>.append (<span class=\"type\">CheckRoad</span>(maze:targetMaze,pos: <span class=\"type\">SPos</span>,beforPos: <span class=\"type\">Vec2</span>(<span class=\"type\">X</span>: <span class=\"number\">0</span>,<span class=\"type\">Y</span>: <span class=\"number\">0</span>),maxPos: maxPos,checkType: <span class=\"type\">MapType</span>.<span class=\"type\">Wall</span>)<span class=\"operator\">!</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"type\">BlackList</span>:<span class=\"type\">Array</span>&lt;<span class=\"type\">Vec2</span>&gt; <span class=\"operator\">=</span> <span class=\"type\">Array</span>&lt;<span class=\"type\">Vec2</span>&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">true</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> direction <span class=\"operator\">=</span> <span class=\"type\">CheckRoad</span>(maze:targetMaze,pos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Up</span> <span class=\"operator\">??</span> <span class=\"literal\">nil</span>,beforPos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>(),maxPos: maxPos,checkType: <span class=\"type\">MapType</span>.<span class=\"type\">Wall</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> checkFlag:<span class=\"type\">Bool</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> black <span class=\"keyword\">in</span> <span class=\"type\">BlackList</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(black <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            checkFlag <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"type\">GPos</span> <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(direction <span class=\"operator\">!=</span> <span class=\"literal\">nil</span> <span class=\"operator\">&amp;&amp;</span> <span class=\"operator\">!</span>checkFlag)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">RootList</span>.append(direction<span class=\"operator\">!</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> direction <span class=\"operator\">=</span> <span class=\"type\">CheckRoad</span>(maze:targetMaze,pos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Right</span> <span class=\"operator\">??</span> <span class=\"literal\">nil</span>,beforPos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>(),maxPos: maxPos,checkType: <span class=\"type\">MapType</span>.<span class=\"type\">Wall</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> checkFlag:<span class=\"type\">Bool</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> black <span class=\"keyword\">in</span> <span class=\"type\">BlackList</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(black <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                checkFlag <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"type\">GPos</span> <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(direction <span class=\"operator\">!=</span> <span class=\"literal\">nil</span> <span class=\"operator\">&amp;&amp;</span> <span class=\"operator\">!</span>checkFlag)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">RootList</span>.append(direction<span class=\"operator\">!</span>)</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> direction <span class=\"operator\">=</span> <span class=\"type\">CheckRoad</span>(maze:targetMaze,pos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Down</span> <span class=\"operator\">??</span> <span class=\"literal\">nil</span>,beforPos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>(),maxPos: maxPos,checkType: <span class=\"type\">MapType</span>.<span class=\"type\">Wall</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> checkFlag:<span class=\"type\">Bool</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> black <span class=\"keyword\">in</span> <span class=\"type\">BlackList</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(black <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    checkFlag <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"type\">GPos</span> <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(direction <span class=\"operator\">!=</span> <span class=\"literal\">nil</span> <span class=\"operator\">&amp;&amp;</span> <span class=\"operator\">!</span>checkFlag)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"type\">RootList</span>.append(direction<span class=\"operator\">!</span>)</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> direction <span class=\"operator\">=</span> <span class=\"type\">CheckRoad</span>(maze:targetMaze,pos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Left</span> <span class=\"operator\">??</span> <span class=\"literal\">nil</span>,beforPos: <span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>(),maxPos: maxPos,checkType: <span class=\"type\">MapType</span>.<span class=\"type\">Wall</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> checkFlag:<span class=\"type\">Bool</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">for</span> black <span class=\"keyword\">in</span> <span class=\"type\">BlackList</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(black <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        checkFlag <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"type\">GPos</span> <span class=\"operator\">==</span> direction<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(direction <span class=\"operator\">!=</span> <span class=\"literal\">nil</span> <span class=\"operator\">&amp;&amp;</span> <span class=\"operator\">!</span>checkFlag)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"type\">RootList</span>.append(direction<span class=\"operator\">!</span>)</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"type\">BlackList</span>.append(<span class=\"type\">RootList</span>.last<span class=\"operator\">?</span>.<span class=\"type\">Now</span> <span class=\"operator\">??</span> <span class=\"type\">Vec2</span>())</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(<span class=\"type\">RootList</span>.count <span class=\"operator\">&gt;</span> <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"type\">RootList</span>.removeLast()</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> root <span class=\"keyword\">in</span> <span class=\"type\">RootList</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(root.<span class=\"type\">Now</span>)</span><br><span class=\"line\">    targetMaze[root.<span class=\"type\">Now</span>.<span class=\"type\">Y</span>][root.<span class=\"type\">Now</span>.<span class=\"type\">X</span>] <span class=\"operator\">=</span> <span class=\"type\">MapType</span>.<span class=\"type\">Root</span>.rawValue</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">printMaze(maze:targetMaze)</span><br></pre></td></tr></table></figure>\n<h2 id=\"感想\"><a href=\"#感想\" class=\"headerlink\" title=\"感想\"></a>感想</h2><ul>\n<li><code>Enum</code>のコードに値をセットできるので、コードが読みやすい</li>\n<li>ちょこちょこ出てくる制約に最初はイライラするが、書いているとなれる</li>\n<li>制約があるおかげで、コードに統一感が出る</li>\n</ul>\n"},{"title":"VimにPluginマネージャー「Vundle」を入れる","date":"2021-02-17T13:33:59.000Z","_content":"# 環境\n- Mac MacBook Air (M1, 2020) \n- OS Big Sur v11.0.1\n- VIM - Vi IMproved 8.2 (2019 Dec 12, compiled Oct 29 2020 23:33:57)\n\n# 手順\n## 1. ホームディレクトリにフォルダを作る\n```\nmkdir -p ~/.vim/bundle/Vundle.vim\n```\n## 2. GitHubからダウンロード\n```\ngit clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n```\n\n## 3. .vimrcにの先頭に設定を記述\n```\nset nocompatible\nfiletype off\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\nPlugin 'VundleVim/Vundle.vim'\n\n\" 導入したいプラグインを以下に列挙\n\" Plugin '[Github Author]/[Github repo]' の形式で記入\nPlugin 'airblade/vim-gitgutter'\n\ncall vundle#end()\nfiletype plugin indent on\n\n\"　その他のカスタム設定を以下に書く\n```\n\n## 4. vimを開いた状態でコマンドを打ってインストール\n```\n:PluginInstall\n```\n","source":"_posts/VimにPluginマネージャー「Vundle」を入れる.md","raw":"---\ntitle: VimにPluginマネージャー「Vundle」を入れる\ndate: 2021-02-17 22:33:59\ntags: Vim\n---\n# 環境\n- Mac MacBook Air (M1, 2020) \n- OS Big Sur v11.0.1\n- VIM - Vi IMproved 8.2 (2019 Dec 12, compiled Oct 29 2020 23:33:57)\n\n# 手順\n## 1. ホームディレクトリにフォルダを作る\n```\nmkdir -p ~/.vim/bundle/Vundle.vim\n```\n## 2. GitHubからダウンロード\n```\ngit clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n```\n\n## 3. .vimrcにの先頭に設定を記述\n```\nset nocompatible\nfiletype off\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\nPlugin 'VundleVim/Vundle.vim'\n\n\" 導入したいプラグインを以下に列挙\n\" Plugin '[Github Author]/[Github repo]' の形式で記入\nPlugin 'airblade/vim-gitgutter'\n\ncall vundle#end()\nfiletype plugin indent on\n\n\"　その他のカスタム設定を以下に書く\n```\n\n## 4. vimを開いた状態でコマンドを打ってインストール\n```\n:PluginInstall\n```\n","slug":"VimにPluginマネージャー「Vundle」を入れる","published":1,"updated":"2021-02-17T13:34:19.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh373000amzb6ehl6aycg","content":"<h1><span id=\"環境\">環境</span></h1><ul>\n<li>Mac MacBook Air (M1, 2020) </li>\n<li>OS Big Sur v11.0.1</li>\n<li>VIM - Vi IMproved 8.2 (2019 Dec 12, compiled Oct 29 2020 23:33:57)</li>\n</ul>\n<h1><span id=\"手順\">手順</span></h1><h2><span id=\"1-ホームディレクトリにフォルダを作る\">1. ホームディレクトリにフォルダを作る</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p ~&#x2F;.vim&#x2F;bundle&#x2F;Vundle.vim</span><br></pre></td></tr></table></figure>\n<h2><span id=\"2-githubからダウンロード\">2. GitHubからダウンロード</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;VundleVim&#x2F;Vundle.vim.git ~&#x2F;.vim&#x2F;bundle&#x2F;Vundle.vim</span><br></pre></td></tr></table></figure>\n<h2><span id=\"3-vimrcにの先頭に設定を記述\">3. .vimrcにの先頭に設定を記述</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set nocompatible</span><br><span class=\"line\">filetype off</span><br><span class=\"line\">set rtp+&#x3D;~&#x2F;.vim&#x2F;bundle&#x2F;Vundle.vim</span><br><span class=\"line\">call vundle#begin()</span><br><span class=\"line\"></span><br><span class=\"line\">Plugin &#39;VundleVim&#x2F;Vundle.vim&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; 導入したいプラグインを以下に列挙</span><br><span class=\"line\">&quot; Plugin &#39;[Github Author]&#x2F;[Github repo]&#39; の形式で記入</span><br><span class=\"line\">Plugin &#39;airblade&#x2F;vim-gitgutter&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">call vundle#end()</span><br><span class=\"line\">filetype plugin indent on</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;　その他のカスタム設定を以下に書く</span><br></pre></td></tr></table></figure>\n<h2><span id=\"4-vimを開いた状態でコマンドを打ってインストール\">4. vimを開いた状態でコマンドを打ってインストール</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:PluginInstall</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Mac MacBook Air (M1, 2020) </li>\n<li>OS Big Sur v11.0.1</li>\n<li>VIM - Vi IMproved 8.2 (2019 Dec 12, compiled Oct 29 2020 23:33:57)</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"1-ホームディレクトリにフォルダを作る\"><a href=\"#1-ホームディレクトリにフォルダを作る\" class=\"headerlink\" title=\"1. ホームディレクトリにフォルダを作る\"></a>1. ホームディレクトリにフォルダを作る</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p ~&#x2F;.vim&#x2F;bundle&#x2F;Vundle.vim</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-GitHubからダウンロード\"><a href=\"#2-GitHubからダウンロード\" class=\"headerlink\" title=\"2. GitHubからダウンロード\"></a>2. GitHubからダウンロード</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;VundleVim&#x2F;Vundle.vim.git ~&#x2F;.vim&#x2F;bundle&#x2F;Vundle.vim</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-vimrcにの先頭に設定を記述\"><a href=\"#3-vimrcにの先頭に設定を記述\" class=\"headerlink\" title=\"3. .vimrcにの先頭に設定を記述\"></a>3. .vimrcにの先頭に設定を記述</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set nocompatible</span><br><span class=\"line\">filetype off</span><br><span class=\"line\">set rtp+&#x3D;~&#x2F;.vim&#x2F;bundle&#x2F;Vundle.vim</span><br><span class=\"line\">call vundle#begin()</span><br><span class=\"line\"></span><br><span class=\"line\">Plugin &#39;VundleVim&#x2F;Vundle.vim&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; 導入したいプラグインを以下に列挙</span><br><span class=\"line\">&quot; Plugin &#39;[Github Author]&#x2F;[Github repo]&#39; の形式で記入</span><br><span class=\"line\">Plugin &#39;airblade&#x2F;vim-gitgutter&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">call vundle#end()</span><br><span class=\"line\">filetype plugin indent on</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;　その他のカスタム設定を以下に書く</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-vimを開いた状態でコマンドを打ってインストール\"><a href=\"#4-vimを開いた状態でコマンドを打ってインストール\" class=\"headerlink\" title=\"4. vimを開いた状態でコマンドを打ってインストール\"></a>4. vimを開いた状態でコマンドを打ってインストール</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:PluginInstall</span><br></pre></td></tr></table></figure>"},{"title":"XCodeでSwiftの練習","date":"2021-01-24T15:37:33.000Z","_content":"\n## 1. AppStoreでXCodeをダウンロード\n- AppStoreの検索欄に「XCode」と入力して検索\n\n## 2. インストールしたXCodeを起動\n\n## 3. Playgroundファイルを作成\n- File -> New -> Playground...\n![ファイル作成方法](/2021/01/25/XCodeでSwiftの練習/1.png \"ファイル作成方法\")\n\t- 以前のバージョンのXCodeではトップウィンドウにPlaygourndファイルの作成ボタンがあったが、今はなくなっている\n\n## 4. 特別な理由が無い限りは、デフォルトの設定のまま作成\n- Mac -> Blank\tで作成\n\n## 再生ボタンの意味\n- 下の再生ボタンは記述してあるコード全てを再生する\n- 今青いカーソルがある部分まで再生される\n![再生ボタン解説](/2021/01/25/XCodeでSwiftの練習/2.png \"再生ボタン解説\")\n","source":"_posts/XCodeでSwiftの練習.md","raw":"---\ntitle: XCodeでSwiftの練習\ndate: 2021-01-25 00:37:33\ntags:\tXcode\n---\n\n## 1. AppStoreでXCodeをダウンロード\n- AppStoreの検索欄に「XCode」と入力して検索\n\n## 2. インストールしたXCodeを起動\n\n## 3. Playgroundファイルを作成\n- File -> New -> Playground...\n![ファイル作成方法](/2021/01/25/XCodeでSwiftの練習/1.png \"ファイル作成方法\")\n\t- 以前のバージョンのXCodeではトップウィンドウにPlaygourndファイルの作成ボタンがあったが、今はなくなっている\n\n## 4. 特別な理由が無い限りは、デフォルトの設定のまま作成\n- Mac -> Blank\tで作成\n\n## 再生ボタンの意味\n- 下の再生ボタンは記述してあるコード全てを再生する\n- 今青いカーソルがある部分まで再生される\n![再生ボタン解説](/2021/01/25/XCodeでSwiftの練習/2.png \"再生ボタン解説\")\n","slug":"XCodeでSwiftの練習","published":1,"updated":"2021-01-24T18:06:08.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh374000cmzb6eqsjcu6m","content":"<h2><span id=\"1-appstoreでxcodeをダウンロード\">1. AppStoreでXCodeをダウンロード</span></h2><ul>\n<li>AppStoreの検索欄に「XCode」と入力して検索</li>\n</ul>\n<h2><span id=\"2-インストールしたxcodeを起動\">2. インストールしたXCodeを起動</span></h2><h2><span id=\"3-playgroundファイルを作成\">3. Playgroundファイルを作成</span></h2><ul>\n<li>File -&gt; New -&gt; Playground…<br><img src=\"/2021/01/25/XCode%E3%81%A7Swift%E3%81%AE%E7%B7%B4%E7%BF%92/1.png\" alt=\"ファイル作成方法\" title=\"ファイル作成方法\"><ul>\n<li>以前のバージョンのXCodeではトップウィンドウにPlaygourndファイルの作成ボタンがあったが、今はなくなっている</li>\n</ul>\n</li>\n</ul>\n<h2><span id=\"4-特別な理由が無い限りは-デフォルトの設定のまま作成\">4. 特別な理由が無い限りは、デフォルトの設定のまま作成</span></h2><ul>\n<li>Mac -&gt; Blank    で作成</li>\n</ul>\n<h2><span id=\"再生ボタンの意味\">再生ボタンの意味</span></h2><ul>\n<li>下の再生ボタンは記述してあるコード全てを再生する</li>\n<li>今青いカーソルがある部分まで再生される<br><img src=\"/2021/01/25/XCode%E3%81%A7Swift%E3%81%AE%E7%B7%B4%E7%BF%92/2.png\" alt=\"再生ボタン解説\" title=\"再生ボタン解説\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-AppStoreでXCodeをダウンロード\"><a href=\"#1-AppStoreでXCodeをダウンロード\" class=\"headerlink\" title=\"1. AppStoreでXCodeをダウンロード\"></a>1. AppStoreでXCodeをダウンロード</h2><ul>\n<li>AppStoreの検索欄に「XCode」と入力して検索</li>\n</ul>\n<h2 id=\"2-インストールしたXCodeを起動\"><a href=\"#2-インストールしたXCodeを起動\" class=\"headerlink\" title=\"2. インストールしたXCodeを起動\"></a>2. インストールしたXCodeを起動</h2><h2 id=\"3-Playgroundファイルを作成\"><a href=\"#3-Playgroundファイルを作成\" class=\"headerlink\" title=\"3. Playgroundファイルを作成\"></a>3. Playgroundファイルを作成</h2><ul>\n<li>File -&gt; New -&gt; Playground…<br><img src=\"/2021/01/25/XCode%E3%81%A7Swift%E3%81%AE%E7%B7%B4%E7%BF%92/1.png\" alt=\"ファイル作成方法\" title=\"ファイル作成方法\"><ul>\n<li>以前のバージョンのXCodeではトップウィンドウにPlaygourndファイルの作成ボタンがあったが、今はなくなっている</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-特別な理由が無い限りは、デフォルトの設定のまま作成\"><a href=\"#4-特別な理由が無い限りは、デフォルトの設定のまま作成\" class=\"headerlink\" title=\"4. 特別な理由が無い限りは、デフォルトの設定のまま作成\"></a>4. 特別な理由が無い限りは、デフォルトの設定のまま作成</h2><ul>\n<li>Mac -&gt; Blank    で作成</li>\n</ul>\n<h2 id=\"再生ボタンの意味\"><a href=\"#再生ボタンの意味\" class=\"headerlink\" title=\"再生ボタンの意味\"></a>再生ボタンの意味</h2><ul>\n<li>下の再生ボタンは記述してあるコード全てを再生する</li>\n<li>今青いカーソルがある部分まで再生される<br><img src=\"/2021/01/25/XCode%E3%81%A7Swift%E3%81%AE%E7%B7%B4%E7%BF%92/2.png\" alt=\"再生ボタン解説\" title=\"再生ボタン解説\"></li>\n</ul>\n"},{"title":"XcodeでVimキーバインドを使う「XVim2」","date":"2021-02-28T03:07:33.000Z","_content":"\n## 目次\n1. 証明書の発行\n2. XVim2のインストール\n3. XcodeにXVim2を読み込ませる\n4. .xvimrcでカスタマイズ　\n5. 参考\n\n## 1. 証明書の発行\n1. アプリケーションの`Keychain Access(キーチェーンアクセス)`を起動\n2. `Keychain Access`ウィンドウの左側のデフォルトチェーン内の`ログイン`を選択\n3. 画面上部のメニューバーから、`キーチェーンアクセス->証明書アシスタント->証明書を作成`を選択\n\n\t![キーチェーン証明書作成](/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/キーチェーン証明書作成.png \"キーチェーン証明書作成\")\n4. 以下と`同じ情報`を設定して、`作成`ボタンを押下\n\t- 名前 : XcodeSigner\n\t- 固有名のタイプ : 自己署名ルート\n\t- 証明書のタイプ : コード署名\n\n\t![証明書作成時の入力内容](/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/証明書作成時の入力内容.png \"証明書作成時の入力内容\")\n5. 作成時の警告が出るが、`続ける`を選択\n\n\t![証明書作成時の警告](/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/証明書作成時の警告.png \"証明書作成時の警告\")\n6. 以下の画像のような画面が表示されれば証明書の発行は成功\n\n\t![証明書完成](/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/証明書完成.png \"証明書完成\")\n\n## 2. XVim2のインストール\nこの作業では、任意の場所にリポジトリをクローンして作業を行ますが、今回は`Desktop`で作業することとして解説します。\n\n### Xcodeのパスの確認\nインストール作業を行う前に、Xcodeが配置されているファイルパスの確認をします。\n\n以下のコマンドで、`/Applications/Xcode.app/Contents/Developer`というパスが表示されればOKです。それ以外のパスが表示されてしまった場合は、以下コマンドで、パスを設定してください。\n```\nxcode-select -p\n```\n\nそれ以外のパスが表示されてしまった場合は、以下コマンドで、パスを設定してください。\n```\nxcode-select -s /Applications/Xcode.app/Contents/Developer\n```\n### インストール\n注意 : この作業を行うときは、Xcodeを完全に落として(タスクキル)から行ってください\n\n1. ディレクトリを移動\n```\ncd ~/Desktop\n```\n\n2. リポジトリをクローン\n```\ngit clone https://github.com/XVimProject/XVim2.git \n``` \n\n3. クローンしてきたリポジトリのディレクトリに移動\n```\ncd XVim2/\n```\n\n4. `makeコマンド`でプラグインをビルド\n```\nmake\n```\n\n5. 出力がたくさん流れたあと、に以下のような文字が表示されれば成功\n```\n** BUILD SUCCEEDED **\n```\n\n## 3. XcodeにXVim2を読み込ませる\n1. Xcodeを起動すると、以下の画像のようなウィンドウが表示されるので、`Load Bundle`を選択する\n\t![Xcode起動時の確認画面](/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/Xcode起動時の確認画面.png \"確認画面\")\n2. 上部メニューバーの`Edit`メニューの一番下に`XVim`が表示されて入れば導入成功\n\n### 間違えて、`Skip Bundle`を選択してしまった場合\n一度XCodeを閉じて(タスクキル)して、以下コマンドをターミナルで実行してから再度XCodeを実行するとまた確認ウィンドウが表示さる\n\nX.X = 自分が使っているXcodeのバージョン \n```\ndefaults delete com.apple.dt.Xcode DVTPlugInManagerNonApplePlugIns-Xcod-X.X\n```\n\n## 4. .xvimrcでカスタマイズ\nホームディレクトリ直下に`.xvimrc`ファイルを作成して、`.vimrc`と同じように記述していく\n```\nvim ~/.xvimrc\n```\n\n## 5. 参考\n- https://github.com/XVimProject/XVim2\n- https://zenn.dev/ryo_kawamata/articles/intoroduce-xvim2\n- https://qiita.com/ks-cap/items/91fb8578bbb930141a60\n","source":"_posts/XcodeでVimキーバインドを使う「XVim2」.md","raw":"---\ntitle: XcodeでVimキーバインドを使う「XVim2」\ndate: 2021-02-28 12:07:33\ntags:\n- Vim\n- XCode\n---\n\n## 目次\n1. 証明書の発行\n2. XVim2のインストール\n3. XcodeにXVim2を読み込ませる\n4. .xvimrcでカスタマイズ　\n5. 参考\n\n## 1. 証明書の発行\n1. アプリケーションの`Keychain Access(キーチェーンアクセス)`を起動\n2. `Keychain Access`ウィンドウの左側のデフォルトチェーン内の`ログイン`を選択\n3. 画面上部のメニューバーから、`キーチェーンアクセス->証明書アシスタント->証明書を作成`を選択\n\n\t![キーチェーン証明書作成](/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/キーチェーン証明書作成.png \"キーチェーン証明書作成\")\n4. 以下と`同じ情報`を設定して、`作成`ボタンを押下\n\t- 名前 : XcodeSigner\n\t- 固有名のタイプ : 自己署名ルート\n\t- 証明書のタイプ : コード署名\n\n\t![証明書作成時の入力内容](/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/証明書作成時の入力内容.png \"証明書作成時の入力内容\")\n5. 作成時の警告が出るが、`続ける`を選択\n\n\t![証明書作成時の警告](/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/証明書作成時の警告.png \"証明書作成時の警告\")\n6. 以下の画像のような画面が表示されれば証明書の発行は成功\n\n\t![証明書完成](/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/証明書完成.png \"証明書完成\")\n\n## 2. XVim2のインストール\nこの作業では、任意の場所にリポジトリをクローンして作業を行ますが、今回は`Desktop`で作業することとして解説します。\n\n### Xcodeのパスの確認\nインストール作業を行う前に、Xcodeが配置されているファイルパスの確認をします。\n\n以下のコマンドで、`/Applications/Xcode.app/Contents/Developer`というパスが表示されればOKです。それ以外のパスが表示されてしまった場合は、以下コマンドで、パスを設定してください。\n```\nxcode-select -p\n```\n\nそれ以外のパスが表示されてしまった場合は、以下コマンドで、パスを設定してください。\n```\nxcode-select -s /Applications/Xcode.app/Contents/Developer\n```\n### インストール\n注意 : この作業を行うときは、Xcodeを完全に落として(タスクキル)から行ってください\n\n1. ディレクトリを移動\n```\ncd ~/Desktop\n```\n\n2. リポジトリをクローン\n```\ngit clone https://github.com/XVimProject/XVim2.git \n``` \n\n3. クローンしてきたリポジトリのディレクトリに移動\n```\ncd XVim2/\n```\n\n4. `makeコマンド`でプラグインをビルド\n```\nmake\n```\n\n5. 出力がたくさん流れたあと、に以下のような文字が表示されれば成功\n```\n** BUILD SUCCEEDED **\n```\n\n## 3. XcodeにXVim2を読み込ませる\n1. Xcodeを起動すると、以下の画像のようなウィンドウが表示されるので、`Load Bundle`を選択する\n\t![Xcode起動時の確認画面](/2021/02/28/XcodeでVimキーバインドを使う「XVim2」/Xcode起動時の確認画面.png \"確認画面\")\n2. 上部メニューバーの`Edit`メニューの一番下に`XVim`が表示されて入れば導入成功\n\n### 間違えて、`Skip Bundle`を選択してしまった場合\n一度XCodeを閉じて(タスクキル)して、以下コマンドをターミナルで実行してから再度XCodeを実行するとまた確認ウィンドウが表示さる\n\nX.X = 自分が使っているXcodeのバージョン \n```\ndefaults delete com.apple.dt.Xcode DVTPlugInManagerNonApplePlugIns-Xcod-X.X\n```\n\n## 4. .xvimrcでカスタマイズ\nホームディレクトリ直下に`.xvimrc`ファイルを作成して、`.vimrc`と同じように記述していく\n```\nvim ~/.xvimrc\n```\n\n## 5. 参考\n- https://github.com/XVimProject/XVim2\n- https://zenn.dev/ryo_kawamata/articles/intoroduce-xvim2\n- https://qiita.com/ks-cap/items/91fb8578bbb930141a60\n","slug":"XcodeでVimキーバインドを使う「XVim2」","published":1,"updated":"2021-02-28T08:17:44.871Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh376000emzb63cw9cvzr","content":"<h2><span id=\"目次\">目次</span></h2><ol>\n<li>証明書の発行</li>\n<li>XVim2のインストール</li>\n<li>XcodeにXVim2を読み込ませる</li>\n<li>.xvimrcでカスタマイズ　</li>\n<li>参考</li>\n</ol>\n<h2><span id=\"1-証明書の発行\">1. 証明書の発行</span></h2><ol>\n<li><p>アプリケーションの<code>Keychain Access(キーチェーンアクセス)</code>を起動</p>\n</li>\n<li><p><code>Keychain Access</code>ウィンドウの左側のデフォルトチェーン内の<code>ログイン</code>を選択</p>\n</li>\n<li><p>画面上部のメニューバーから、<code>キーチェーンアクセス-&gt;証明書アシスタント-&gt;証明書を作成</code>を選択</p>\n<p> <img src=\"/2021/02/28/Xcode%E3%81%A7Vim%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%80%8CXVim2%E3%80%8D/%E3%82%AD%E3%83%BC%E3%83%81%E3%82%A7%E3%83%BC%E3%83%B3%E8%A8%BC%E6%98%8E%E6%9B%B8%E4%BD%9C%E6%88%90.png\" alt=\"キーチェーン証明書作成\" title=\"キーチェーン証明書作成\"></p>\n</li>\n<li><p>以下と<code>同じ情報</code>を設定して、<code>作成</code>ボタンを押下</p>\n<ul>\n<li><p>名前 : XcodeSigner</p>\n</li>\n<li><p>固有名のタイプ : 自己署名ルート</p>\n</li>\n<li><p>証明書のタイプ : コード署名</p>\n<p><img src=\"/2021/02/28/Xcode%E3%81%A7Vim%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%80%8CXVim2%E3%80%8D/%E8%A8%BC%E6%98%8E%E6%9B%B8%E4%BD%9C%E6%88%90%E6%99%82%E3%81%AE%E5%85%A5%E5%8A%9B%E5%86%85%E5%AE%B9.png\" alt=\"証明書作成時の入力内容\" title=\"証明書作成時の入力内容\"></p>\n</li>\n</ul>\n</li>\n<li><p>作成時の警告が出るが、<code>続ける</code>を選択</p>\n<p> <img src=\"/2021/02/28/Xcode%E3%81%A7Vim%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%80%8CXVim2%E3%80%8D/%E8%A8%BC%E6%98%8E%E6%9B%B8%E4%BD%9C%E6%88%90%E6%99%82%E3%81%AE%E8%AD%A6%E5%91%8A.png\" alt=\"証明書作成時の警告\" title=\"証明書作成時の警告\"></p>\n</li>\n<li><p>以下の画像のような画面が表示されれば証明書の発行は成功</p>\n<p> <img src=\"/2021/02/28/Xcode%E3%81%A7Vim%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%80%8CXVim2%E3%80%8D/%E8%A8%BC%E6%98%8E%E6%9B%B8%E5%AE%8C%E6%88%90.png\" alt=\"証明書完成\" title=\"証明書完成\"></p>\n</li>\n</ol>\n<h2><span id=\"2-xvim2のインストール\">2. XVim2のインストール</span></h2><p>この作業では、任意の場所にリポジトリをクローンして作業を行ますが、今回は<code>Desktop</code>で作業することとして解説します。</p>\n<h3><span id=\"xcodeのパスの確認\">Xcodeのパスの確認</span></h3><p>インストール作業を行う前に、Xcodeが配置されているファイルパスの確認をします。</p>\n<p>以下のコマンドで、<code>/Applications/Xcode.app/Contents/Developer</code>というパスが表示されればOKです。それ以外のパスが表示されてしまった場合は、以下コマンドで、パスを設定してください。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select -p</span><br></pre></td></tr></table></figure>\n<p>それ以外のパスが表示されてしまった場合は、以下コマンドで、パスを設定してください。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select -s &#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer</span><br></pre></td></tr></table></figure>\n<h3><span id=\"インストール\">インストール</span></h3><p>注意 : この作業を行うときは、Xcodeを完全に落として(タスクキル)から行ってください</p>\n<ol>\n<li><p>ディレクトリを移動</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~&#x2F;Desktop</span><br></pre></td></tr></table></figure></li>\n<li><p>リポジトリをクローン</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;XVimProject&#x2F;XVim2.git </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>クローンしてきたリポジトリのディレクトリに移動</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd XVim2&#x2F;</span><br></pre></td></tr></table></figure></li>\n<li><p><code>makeコマンド</code>でプラグインをビルド</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make</span><br></pre></td></tr></table></figure></li>\n<li><p>出力がたくさん流れたあと、に以下のような文字が表示されれば成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">** BUILD SUCCEEDED **</span><br></pre></td></tr></table></figure>\n<h2><span id=\"3-xcodeにxvim2を読み込ませる\">3. XcodeにXVim2を読み込ませる</span></h2></li>\n<li><p>Xcodeを起動すると、以下の画像のようなウィンドウが表示されるので、<code>Load Bundle</code>を選択する<br> <img src=\"/2021/02/28/Xcode%E3%81%A7Vim%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%80%8CXVim2%E3%80%8D/Xcode%E8%B5%B7%E5%8B%95%E6%99%82%E3%81%AE%E7%A2%BA%E8%AA%8D%E7%94%BB%E9%9D%A2.png\" alt=\"Xcode起動時の確認画面\" title=\"確認画面\"></p>\n</li>\n<li><p>上部メニューバーの<code>Edit</code>メニューの一番下に<code>XVim</code>が表示されて入れば導入成功</p>\n</li>\n</ol>\n<h3><span id=\"間違えて-skip-bundleを選択してしまった場合\">間違えて、<code>Skip Bundle</code>を選択してしまった場合</span></h3><p>一度XCodeを閉じて(タスクキル)して、以下コマンドをターミナルで実行してから再度XCodeを実行するとまた確認ウィンドウが表示さる</p>\n<p>X.X = 自分が使っているXcodeのバージョン </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults delete com.apple.dt.Xcode DVTPlugInManagerNonApplePlugIns-Xcod-X.X</span><br></pre></td></tr></table></figure>\n<h2><span id=\"4-xvimrcでカスタマイズ\">4. .xvimrcでカスタマイズ</span></h2><p>ホームディレクトリ直下に<code>.xvimrc</code>ファイルを作成して、<code>.vimrc</code>と同じように記述していく</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~&#x2F;.xvimrc</span><br></pre></td></tr></table></figure>\n<h2><span id=\"5-参考\">5. 参考</span></h2><ul>\n<li><a href=\"https://github.com/XVimProject/XVim2\">https://github.com/XVimProject/XVim2</a></li>\n<li><a href=\"https://zenn.dev/ryo_kawamata/articles/intoroduce-xvim2\">https://zenn.dev/ryo_kawamata/articles/intoroduce-xvim2</a></li>\n<li><a href=\"https://qiita.com/ks-cap/items/91fb8578bbb930141a60\">https://qiita.com/ks-cap/items/91fb8578bbb930141a60</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><ol>\n<li>証明書の発行</li>\n<li>XVim2のインストール</li>\n<li>XcodeにXVim2を読み込ませる</li>\n<li>.xvimrcでカスタマイズ　</li>\n<li>参考</li>\n</ol>\n<h2 id=\"1-証明書の発行\"><a href=\"#1-証明書の発行\" class=\"headerlink\" title=\"1. 証明書の発行\"></a>1. 証明書の発行</h2><ol>\n<li><p>アプリケーションの<code>Keychain Access(キーチェーンアクセス)</code>を起動</p>\n</li>\n<li><p><code>Keychain Access</code>ウィンドウの左側のデフォルトチェーン内の<code>ログイン</code>を選択</p>\n</li>\n<li><p>画面上部のメニューバーから、<code>キーチェーンアクセス-&gt;証明書アシスタント-&gt;証明書を作成</code>を選択</p>\n<p> <img src=\"/2021/02/28/Xcode%E3%81%A7Vim%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%80%8CXVim2%E3%80%8D/%E3%82%AD%E3%83%BC%E3%83%81%E3%82%A7%E3%83%BC%E3%83%B3%E8%A8%BC%E6%98%8E%E6%9B%B8%E4%BD%9C%E6%88%90.png\" alt=\"キーチェーン証明書作成\" title=\"キーチェーン証明書作成\"></p>\n</li>\n<li><p>以下と<code>同じ情報</code>を設定して、<code>作成</code>ボタンを押下</p>\n<ul>\n<li><p>名前 : XcodeSigner</p>\n</li>\n<li><p>固有名のタイプ : 自己署名ルート</p>\n</li>\n<li><p>証明書のタイプ : コード署名</p>\n<p><img src=\"/2021/02/28/Xcode%E3%81%A7Vim%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%80%8CXVim2%E3%80%8D/%E8%A8%BC%E6%98%8E%E6%9B%B8%E4%BD%9C%E6%88%90%E6%99%82%E3%81%AE%E5%85%A5%E5%8A%9B%E5%86%85%E5%AE%B9.png\" alt=\"証明書作成時の入力内容\" title=\"証明書作成時の入力内容\"></p>\n</li>\n</ul>\n</li>\n<li><p>作成時の警告が出るが、<code>続ける</code>を選択</p>\n<p> <img src=\"/2021/02/28/Xcode%E3%81%A7Vim%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%80%8CXVim2%E3%80%8D/%E8%A8%BC%E6%98%8E%E6%9B%B8%E4%BD%9C%E6%88%90%E6%99%82%E3%81%AE%E8%AD%A6%E5%91%8A.png\" alt=\"証明書作成時の警告\" title=\"証明書作成時の警告\"></p>\n</li>\n<li><p>以下の画像のような画面が表示されれば証明書の発行は成功</p>\n<p> <img src=\"/2021/02/28/Xcode%E3%81%A7Vim%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%80%8CXVim2%E3%80%8D/%E8%A8%BC%E6%98%8E%E6%9B%B8%E5%AE%8C%E6%88%90.png\" alt=\"証明書完成\" title=\"証明書完成\"></p>\n</li>\n</ol>\n<h2 id=\"2-XVim2のインストール\"><a href=\"#2-XVim2のインストール\" class=\"headerlink\" title=\"2. XVim2のインストール\"></a>2. XVim2のインストール</h2><p>この作業では、任意の場所にリポジトリをクローンして作業を行ますが、今回は<code>Desktop</code>で作業することとして解説します。</p>\n<h3 id=\"Xcodeのパスの確認\"><a href=\"#Xcodeのパスの確認\" class=\"headerlink\" title=\"Xcodeのパスの確認\"></a>Xcodeのパスの確認</h3><p>インストール作業を行う前に、Xcodeが配置されているファイルパスの確認をします。</p>\n<p>以下のコマンドで、<code>/Applications/Xcode.app/Contents/Developer</code>というパスが表示されればOKです。それ以外のパスが表示されてしまった場合は、以下コマンドで、パスを設定してください。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select -p</span><br></pre></td></tr></table></figure>\n<p>それ以外のパスが表示されてしまった場合は、以下コマンドで、パスを設定してください。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select -s &#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer</span><br></pre></td></tr></table></figure>\n<h3 id=\"インストール\"><a href=\"#インストール\" class=\"headerlink\" title=\"インストール\"></a>インストール</h3><p>注意 : この作業を行うときは、Xcodeを完全に落として(タスクキル)から行ってください</p>\n<ol>\n<li><p>ディレクトリを移動</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~&#x2F;Desktop</span><br></pre></td></tr></table></figure></li>\n<li><p>リポジトリをクローン</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;XVimProject&#x2F;XVim2.git </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>クローンしてきたリポジトリのディレクトリに移動</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd XVim2&#x2F;</span><br></pre></td></tr></table></figure></li>\n<li><p><code>makeコマンド</code>でプラグインをビルド</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make</span><br></pre></td></tr></table></figure></li>\n<li><p>出力がたくさん流れたあと、に以下のような文字が表示されれば成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">** BUILD SUCCEEDED **</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-XcodeにXVim2を読み込ませる\"><a href=\"#3-XcodeにXVim2を読み込ませる\" class=\"headerlink\" title=\"3. XcodeにXVim2を読み込ませる\"></a>3. XcodeにXVim2を読み込ませる</h2></li>\n<li><p>Xcodeを起動すると、以下の画像のようなウィンドウが表示されるので、<code>Load Bundle</code>を選択する<br> <img src=\"/2021/02/28/Xcode%E3%81%A7Vim%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%80%8CXVim2%E3%80%8D/Xcode%E8%B5%B7%E5%8B%95%E6%99%82%E3%81%AE%E7%A2%BA%E8%AA%8D%E7%94%BB%E9%9D%A2.png\" alt=\"Xcode起動時の確認画面\" title=\"確認画面\"></p>\n</li>\n<li><p>上部メニューバーの<code>Edit</code>メニューの一番下に<code>XVim</code>が表示されて入れば導入成功</p>\n</li>\n</ol>\n<h3 id=\"間違えて、Skip-Bundleを選択してしまった場合\"><a href=\"#間違えて、Skip-Bundleを選択してしまった場合\" class=\"headerlink\" title=\"間違えて、Skip Bundleを選択してしまった場合\"></a>間違えて、<code>Skip Bundle</code>を選択してしまった場合</h3><p>一度XCodeを閉じて(タスクキル)して、以下コマンドをターミナルで実行してから再度XCodeを実行するとまた確認ウィンドウが表示さる</p>\n<p>X.X = 自分が使っているXcodeのバージョン </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults delete com.apple.dt.Xcode DVTPlugInManagerNonApplePlugIns-Xcod-X.X</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-xvimrcでカスタマイズ\"><a href=\"#4-xvimrcでカスタマイズ\" class=\"headerlink\" title=\"4. .xvimrcでカスタマイズ\"></a>4. .xvimrcでカスタマイズ</h2><p>ホームディレクトリ直下に<code>.xvimrc</code>ファイルを作成して、<code>.vimrc</code>と同じように記述していく</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~&#x2F;.xvimrc</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-参考\"><a href=\"#5-参考\" class=\"headerlink\" title=\"5. 参考\"></a>5. 参考</h2><ul>\n<li><a href=\"https://github.com/XVimProject/XVim2\">https://github.com/XVimProject/XVim2</a></li>\n<li><a href=\"https://zenn.dev/ryo_kawamata/articles/intoroduce-xvim2\">https://zenn.dev/ryo_kawamata/articles/intoroduce-xvim2</a></li>\n<li><a href=\"https://qiita.com/ks-cap/items/91fb8578bbb930141a60\">https://qiita.com/ks-cap/items/91fb8578bbb930141a60</a></li>\n</ul>\n"},{"title":"iframeのaline属性について","date":"2021-02-12T14:14:32.000Z","_content":"# alineとは\n- `iframe(インラインフレーム)`に並ぶテキスト位置を指定できる\n- `iframe(インラインフレーム)`をフロートさせられる\n\t- フロート : 左右どちらかに寄せて、後続のテキストを回り込ませる\n\n## 指定可能文字列\n- left : 左に配置して、後続の内容を右側に回り込ませる\n- right: 右に配置して、後続の内容を左側に回り込ませる\n```html\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/DrDm7uO4Fu0\" align =\"right\"></iframe>\n```\n","source":"_posts/iframeのaline属性について.md","raw":"---\ntitle: iframeのaline属性について\ndate: 2021-02-12 23:14:32\ntags: HTML\n---\n# alineとは\n- `iframe(インラインフレーム)`に並ぶテキスト位置を指定できる\n- `iframe(インラインフレーム)`をフロートさせられる\n\t- フロート : 左右どちらかに寄せて、後続のテキストを回り込ませる\n\n## 指定可能文字列\n- left : 左に配置して、後続の内容を右側に回り込ませる\n- right: 右に配置して、後続の内容を左側に回り込ませる\n```html\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/DrDm7uO4Fu0\" align =\"right\"></iframe>\n```\n","slug":"iframeのaline属性について","published":1,"updated":"2021-02-12T14:14:40.371Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh37o000hmzb62slh2bxe","content":"<h1><span id=\"alineとは\">alineとは</span></h1><ul>\n<li><code>iframe(インラインフレーム)</code>に並ぶテキスト位置を指定できる</li>\n<li><code>iframe(インラインフレーム)</code>をフロートさせられる<ul>\n<li>フロート : 左右どちらかに寄せて、後続のテキストを回り込ませる</li>\n</ul>\n</li>\n</ul>\n<h2><span id=\"指定可能文字列\">指定可能文字列</span></h2><ul>\n<li>left : 左に配置して、後続の内容を右側に回り込ませる</li>\n<li>right: 右に配置して、後続の内容を左側に回り込ませる<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;560&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;315&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.youtube.com/embed/DrDm7uO4Fu0&quot;</span> <span class=\"attr\">align</span> =<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"alineとは\"><a href=\"#alineとは\" class=\"headerlink\" title=\"alineとは\"></a>alineとは</h1><ul>\n<li><code>iframe(インラインフレーム)</code>に並ぶテキスト位置を指定できる</li>\n<li><code>iframe(インラインフレーム)</code>をフロートさせられる<ul>\n<li>フロート : 左右どちらかに寄せて、後続のテキストを回り込ませる</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"指定可能文字列\"><a href=\"#指定可能文字列\" class=\"headerlink\" title=\"指定可能文字列\"></a>指定可能文字列</h2><ul>\n<li>left : 左に配置して、後続の内容を右側に回り込ませる</li>\n<li>right: 右に配置して、後続の内容を左側に回り込ませる<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;560&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;315&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.youtube.com/embed/DrDm7uO4Fu0&quot;</span> <span class=\"attr\">align</span> =<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"formについて","date":"2021-02-09T23:59:29.000Z","_content":"# 参考\n[基本的なフォーム](https://www.kanzaki.com/docs/html/htminfo31.html)\n\n# form(入力・送信フォーム)タグ\n- どこに、どうやって送信するかを記述するタグ\n- このタグセクションの中には、何を送信するかを示す\n\n```html\n<form></form>\n```\n\n## input(入力)タグ\n- formタグの「何を」送信するかを記述するためのタグ\n- formタグで囲む必要があるのは、入力した値を送信したい場合\n\t- 必ずformタグに記述する必要はない\n- `type`属性を指定することで、入力インターフェイスを変更できる\n\n### type属性の種類\n[type属性の値](http://www.htmq.com/html5/input.shtml)\n- type=\"hidden\"\n\t- 画面上は表示されない隠しデータを指定する\n- type=\"text\"\n\t- 一行テキストボックスを作成する（初期値）\n- type=\"search\"\n\t- 検索テキストの入力欄を作成するHTML5から追加\n- type=\"tel\"\n\t- 電話番号の入力欄を作成するHTML5から追加\n- type=\"url\"\n\t- URLの入力欄を作成するHTML5から追加\n- type=\"email\"\n\t- メールアドレスの入力欄を作成するHTML5から追加\n- type=\"password\"\n\t- パスワード入力欄を作成する\n- type=\"datetime\"\n\t- UTC（協定世界時）による日時の入力欄を作成するHTML5から追加\n- type=\"date\"\n\t- 日付の入力欄を作成するHTML5から追加\n- type=\"month\"\n\t- 月の入力欄を作成するHTML5から追加\n- type=\"week\"\n\t- 週の入力欄を作成するHTML5から追加\n- type=\"time\"\n\t- 時間の入力欄を作成するHTML5から追加\n- type=\"datetime-local\"\n\t- UTC（協定世界時）によらないローカル日時の入力欄を作成するHTML5から追加\n- type=\"number\"\n\t- 数値の入力欄を作成するHTML5から追加\n- type=\"range\"\n\t- レンジの入力欄を作成するHTML5から追加\n- type=\"color\"\n\t- 色の入力欄を作成するHTML5から追加\n- type=\"checkbox\"\n\t- チェックボックスを作成する\n- type=\"radio\"\n\t- ラジオボタンを作成する\n- type=\"file\"\n\t- サーバーへファイルを送信する\n- type=\"submit\"\n\t- 送信ボタンを作成する\n- type=\"image\"\n\t- 画像ボタンを作成する\n- type=\"reset\"\n\t- リセットボタンを作成する\n- type=\"button\"\n\t- 汎用ボタンを作成する\n\n```html\n<form>\n\t<input type=\"text\">\n</form>\n```\n\n### ボタンにアクションを設定する\n- `action`属性を設定することで、ボタンを押した時の挙動を指定できる\n\nこの例の場合、ボタンを押すと`action`で指定しているURLを開く\n```html\n<form action=\"http://www.google.co.jp\">\n\t<input type=\"submit\">\n</form>\n```\n\n### テキストをデフォルトで設定しておく\n- 入力された状態でデフォルト設定\n\t- `value`タグを使用する\n```html\n<input type=\"text\" value=\"デフォルト\"> \n```\n- ガイドラインとして表示する\n\t- `placeholder`タグを使用する\n```html\n<input type=\"text\" placeholder=\"デフォルト\"> \n```\n\n### チェックボックスをデフォルトでチェックした状態にする\n- `checked`属性を使う\n```html\n<input type=\"checkbox\" checked>\n```\n\n### ボタンの表示名を変える\n- `value`属性を設定する\n\n```\n<input type=\"button\" value=\"これはボタンです\">\n```\n\n### 複数のラジオボタンの連携\n- `name`属性をつけることで、グルーピングができる\n\n```html\n1<input type=\"radio\" name=\"test\">\n2<input type=\"radio\" name=\"test\">\n3<input type=\"radio\" name=\"test\">\n```\n\n### ラジオボタンをデフォルトでチェックした状態にする\n- `checked`属性を使う\n```html\n<input type=\"checkbox\" checked>\n```\n\n\n## ドロップダウンを生成する\n- `<select></select>`タグを使用して、その中のセクションに`<option></option>`タグで項目を記述する\n```html\n<select>\n <option>塩ラーメン</option>\n <option>味噌ラーメン</option>\n <option>醤油ラーメン</option>\n <option>豚骨ラーメン</option>\n</select>\n```\n\n### ドロップダウンのデフォルト選択項目を指定する\n- デフォルトで選択させた状態にしたい`<option>`タグに、`selected`属性を付与する\n\n```html\n<select>\n <option>塩ラーメン</option>\n <option>味噌ラーメン</option>\n <option selected>醤油ラーメン</option>\n <option>豚骨ラーメン</option>\n</select>\n```\n","source":"_posts/formについて.md","raw":"---\ntitle: formについて\ndate: 2021-02-10 08:59:29\ntags: HTML\n---\n# 参考\n[基本的なフォーム](https://www.kanzaki.com/docs/html/htminfo31.html)\n\n# form(入力・送信フォーム)タグ\n- どこに、どうやって送信するかを記述するタグ\n- このタグセクションの中には、何を送信するかを示す\n\n```html\n<form></form>\n```\n\n## input(入力)タグ\n- formタグの「何を」送信するかを記述するためのタグ\n- formタグで囲む必要があるのは、入力した値を送信したい場合\n\t- 必ずformタグに記述する必要はない\n- `type`属性を指定することで、入力インターフェイスを変更できる\n\n### type属性の種類\n[type属性の値](http://www.htmq.com/html5/input.shtml)\n- type=\"hidden\"\n\t- 画面上は表示されない隠しデータを指定する\n- type=\"text\"\n\t- 一行テキストボックスを作成する（初期値）\n- type=\"search\"\n\t- 検索テキストの入力欄を作成するHTML5から追加\n- type=\"tel\"\n\t- 電話番号の入力欄を作成するHTML5から追加\n- type=\"url\"\n\t- URLの入力欄を作成するHTML5から追加\n- type=\"email\"\n\t- メールアドレスの入力欄を作成するHTML5から追加\n- type=\"password\"\n\t- パスワード入力欄を作成する\n- type=\"datetime\"\n\t- UTC（協定世界時）による日時の入力欄を作成するHTML5から追加\n- type=\"date\"\n\t- 日付の入力欄を作成するHTML5から追加\n- type=\"month\"\n\t- 月の入力欄を作成するHTML5から追加\n- type=\"week\"\n\t- 週の入力欄を作成するHTML5から追加\n- type=\"time\"\n\t- 時間の入力欄を作成するHTML5から追加\n- type=\"datetime-local\"\n\t- UTC（協定世界時）によらないローカル日時の入力欄を作成するHTML5から追加\n- type=\"number\"\n\t- 数値の入力欄を作成するHTML5から追加\n- type=\"range\"\n\t- レンジの入力欄を作成するHTML5から追加\n- type=\"color\"\n\t- 色の入力欄を作成するHTML5から追加\n- type=\"checkbox\"\n\t- チェックボックスを作成する\n- type=\"radio\"\n\t- ラジオボタンを作成する\n- type=\"file\"\n\t- サーバーへファイルを送信する\n- type=\"submit\"\n\t- 送信ボタンを作成する\n- type=\"image\"\n\t- 画像ボタンを作成する\n- type=\"reset\"\n\t- リセットボタンを作成する\n- type=\"button\"\n\t- 汎用ボタンを作成する\n\n```html\n<form>\n\t<input type=\"text\">\n</form>\n```\n\n### ボタンにアクションを設定する\n- `action`属性を設定することで、ボタンを押した時の挙動を指定できる\n\nこの例の場合、ボタンを押すと`action`で指定しているURLを開く\n```html\n<form action=\"http://www.google.co.jp\">\n\t<input type=\"submit\">\n</form>\n```\n\n### テキストをデフォルトで設定しておく\n- 入力された状態でデフォルト設定\n\t- `value`タグを使用する\n```html\n<input type=\"text\" value=\"デフォルト\"> \n```\n- ガイドラインとして表示する\n\t- `placeholder`タグを使用する\n```html\n<input type=\"text\" placeholder=\"デフォルト\"> \n```\n\n### チェックボックスをデフォルトでチェックした状態にする\n- `checked`属性を使う\n```html\n<input type=\"checkbox\" checked>\n```\n\n### ボタンの表示名を変える\n- `value`属性を設定する\n\n```\n<input type=\"button\" value=\"これはボタンです\">\n```\n\n### 複数のラジオボタンの連携\n- `name`属性をつけることで、グルーピングができる\n\n```html\n1<input type=\"radio\" name=\"test\">\n2<input type=\"radio\" name=\"test\">\n3<input type=\"radio\" name=\"test\">\n```\n\n### ラジオボタンをデフォルトでチェックした状態にする\n- `checked`属性を使う\n```html\n<input type=\"checkbox\" checked>\n```\n\n\n## ドロップダウンを生成する\n- `<select></select>`タグを使用して、その中のセクションに`<option></option>`タグで項目を記述する\n```html\n<select>\n <option>塩ラーメン</option>\n <option>味噌ラーメン</option>\n <option>醤油ラーメン</option>\n <option>豚骨ラーメン</option>\n</select>\n```\n\n### ドロップダウンのデフォルト選択項目を指定する\n- デフォルトで選択させた状態にしたい`<option>`タグに、`selected`属性を付与する\n\n```html\n<select>\n <option>塩ラーメン</option>\n <option>味噌ラーメン</option>\n <option selected>醤油ラーメン</option>\n <option>豚骨ラーメン</option>\n</select>\n```\n","slug":"formについて","published":1,"updated":"2021-02-10T00:04:00.216Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh37z000jmzb607ar4lpl","content":"<h1><span id=\"参考\">参考</span></h1><p><a href=\"https://www.kanzaki.com/docs/html/htminfo31.html\">基本的なフォーム</a></p>\n<h1><span id=\"form入力送信フォームタグ\">form(入力・送信フォーム)タグ</span></h1><ul>\n<li>どこに、どうやって送信するかを記述するタグ</li>\n<li>このタグセクションの中には、何を送信するかを示す</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"input入力タグ\">input(入力)タグ</span></h2><ul>\n<li>formタグの「何を」送信するかを記述するためのタグ</li>\n<li>formタグで囲む必要があるのは、入力した値を送信したい場合<ul>\n<li>必ずformタグに記述する必要はない</li>\n</ul>\n</li>\n<li><code>type</code>属性を指定することで、入力インターフェイスを変更できる</li>\n</ul>\n<h3><span id=\"type属性の種類\">type属性の種類</span></h3><p><a href=\"http://www.htmq.com/html5/input.shtml\">type属性の値</a></p>\n<ul>\n<li>type=”hidden”<ul>\n<li>画面上は表示されない隠しデータを指定する</li>\n</ul>\n</li>\n<li>type=”text”<ul>\n<li>一行テキストボックスを作成する（初期値）</li>\n</ul>\n</li>\n<li>type=”search”<ul>\n<li>検索テキストの入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”tel”<ul>\n<li>電話番号の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”url”<ul>\n<li>URLの入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”email”<ul>\n<li>メールアドレスの入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”password”<ul>\n<li>パスワード入力欄を作成する</li>\n</ul>\n</li>\n<li>type=”datetime”<ul>\n<li>UTC（協定世界時）による日時の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”date”<ul>\n<li>日付の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”month”<ul>\n<li>月の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”week”<ul>\n<li>週の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”time”<ul>\n<li>時間の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”datetime-local”<ul>\n<li>UTC（協定世界時）によらないローカル日時の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”number”<ul>\n<li>数値の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”range”<ul>\n<li>レンジの入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”color”<ul>\n<li>色の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”checkbox”<ul>\n<li>チェックボックスを作成する</li>\n</ul>\n</li>\n<li>type=”radio”<ul>\n<li>ラジオボタンを作成する</li>\n</ul>\n</li>\n<li>type=”file”<ul>\n<li>サーバーへファイルを送信する</li>\n</ul>\n</li>\n<li>type=”submit”<ul>\n<li>送信ボタンを作成する</li>\n</ul>\n</li>\n<li>type=”image”<ul>\n<li>画像ボタンを作成する</li>\n</ul>\n</li>\n<li>type=”reset”<ul>\n<li>リセットボタンを作成する</li>\n</ul>\n</li>\n<li>type=”button”<ul>\n<li>汎用ボタンを作成する</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"ボタンにアクションを設定する\">ボタンにアクションを設定する</span></h3><ul>\n<li><code>action</code>属性を設定することで、ボタンを押した時の挙動を指定できる</li>\n</ul>\n<p>この例の場合、ボタンを押すと<code>action</code>で指定しているURLを開く</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;http://www.google.co.jp&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"テキストをデフォルトで設定しておく\">テキストをデフォルトで設定しておく</span></h3><ul>\n<li>入力された状態でデフォルト設定<ul>\n<li><code>value</code>タグを使用する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;デフォルト&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>ガイドラインとして表示する<ul>\n<li><code>placeholder</code>タグを使用する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;デフォルト&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure>\n<h3><span id=\"チェックボックスをデフォルトでチェックした状態にする\">チェックボックスをデフォルトでチェックした状態にする</span></h3></li>\n</ul>\n</li>\n<li><code>checked</code>属性を使う<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">checked</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"ボタンの表示名を変える\">ボタンの表示名を変える</span></h3></li>\n<li><code>value</code>属性を設定する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;これはボタンです&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"複数のラジオボタンの連携\">複数のラジオボタンの連携</span></h3><ul>\n<li><code>name</code>属性をつけることで、グルーピングができる</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span></span><br><span class=\"line\">2<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span></span><br><span class=\"line\">3<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"ラジオボタンをデフォルトでチェックした状態にする\">ラジオボタンをデフォルトでチェックした状態にする</span></h3><ul>\n<li><code>checked</code>属性を使う<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">checked</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2><span id=\"ドロップダウンを生成する\">ドロップダウンを生成する</span></h2><ul>\n<li><code>&lt;select&gt;&lt;/select&gt;</code>タグを使用して、その中のセクションに<code>&lt;option&gt;&lt;/option&gt;</code>タグで項目を記述する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>塩ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>味噌ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>醤油ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>豚骨ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"ドロップダウンのデフォルト選択項目を指定する\">ドロップダウンのデフォルト選択項目を指定する</span></h3></li>\n<li>デフォルトで選択させた状態にしたい<code>&lt;option&gt;</code>タグに、<code>selected</code>属性を付与する</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>塩ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>味噌ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">selected</span>&gt;</span>醤油ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>豚骨ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://www.kanzaki.com/docs/html/htminfo31.html\">基本的なフォーム</a></p>\n<h1 id=\"form-入力・送信フォーム-タグ\"><a href=\"#form-入力・送信フォーム-タグ\" class=\"headerlink\" title=\"form(入力・送信フォーム)タグ\"></a>form(入力・送信フォーム)タグ</h1><ul>\n<li>どこに、どうやって送信するかを記述するタグ</li>\n<li>このタグセクションの中には、何を送信するかを示す</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"input-入力-タグ\"><a href=\"#input-入力-タグ\" class=\"headerlink\" title=\"input(入力)タグ\"></a>input(入力)タグ</h2><ul>\n<li>formタグの「何を」送信するかを記述するためのタグ</li>\n<li>formタグで囲む必要があるのは、入力した値を送信したい場合<ul>\n<li>必ずformタグに記述する必要はない</li>\n</ul>\n</li>\n<li><code>type</code>属性を指定することで、入力インターフェイスを変更できる</li>\n</ul>\n<h3 id=\"type属性の種類\"><a href=\"#type属性の種類\" class=\"headerlink\" title=\"type属性の種類\"></a>type属性の種類</h3><p><a href=\"http://www.htmq.com/html5/input.shtml\">type属性の値</a></p>\n<ul>\n<li>type=”hidden”<ul>\n<li>画面上は表示されない隠しデータを指定する</li>\n</ul>\n</li>\n<li>type=”text”<ul>\n<li>一行テキストボックスを作成する（初期値）</li>\n</ul>\n</li>\n<li>type=”search”<ul>\n<li>検索テキストの入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”tel”<ul>\n<li>電話番号の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”url”<ul>\n<li>URLの入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”email”<ul>\n<li>メールアドレスの入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”password”<ul>\n<li>パスワード入力欄を作成する</li>\n</ul>\n</li>\n<li>type=”datetime”<ul>\n<li>UTC（協定世界時）による日時の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”date”<ul>\n<li>日付の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”month”<ul>\n<li>月の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”week”<ul>\n<li>週の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”time”<ul>\n<li>時間の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”datetime-local”<ul>\n<li>UTC（協定世界時）によらないローカル日時の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”number”<ul>\n<li>数値の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”range”<ul>\n<li>レンジの入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”color”<ul>\n<li>色の入力欄を作成するHTML5から追加</li>\n</ul>\n</li>\n<li>type=”checkbox”<ul>\n<li>チェックボックスを作成する</li>\n</ul>\n</li>\n<li>type=”radio”<ul>\n<li>ラジオボタンを作成する</li>\n</ul>\n</li>\n<li>type=”file”<ul>\n<li>サーバーへファイルを送信する</li>\n</ul>\n</li>\n<li>type=”submit”<ul>\n<li>送信ボタンを作成する</li>\n</ul>\n</li>\n<li>type=”image”<ul>\n<li>画像ボタンを作成する</li>\n</ul>\n</li>\n<li>type=”reset”<ul>\n<li>リセットボタンを作成する</li>\n</ul>\n</li>\n<li>type=”button”<ul>\n<li>汎用ボタンを作成する</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ボタンにアクションを設定する\"><a href=\"#ボタンにアクションを設定する\" class=\"headerlink\" title=\"ボタンにアクションを設定する\"></a>ボタンにアクションを設定する</h3><ul>\n<li><code>action</code>属性を設定することで、ボタンを押した時の挙動を指定できる</li>\n</ul>\n<p>この例の場合、ボタンを押すと<code>action</code>で指定しているURLを開く</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;http://www.google.co.jp&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"テキストをデフォルトで設定しておく\"><a href=\"#テキストをデフォルトで設定しておく\" class=\"headerlink\" title=\"テキストをデフォルトで設定しておく\"></a>テキストをデフォルトで設定しておく</h3><ul>\n<li>入力された状態でデフォルト設定<ul>\n<li><code>value</code>タグを使用する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;デフォルト&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>ガイドラインとして表示する<ul>\n<li><code>placeholder</code>タグを使用する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;デフォルト&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure>\n<h3 id=\"チェックボックスをデフォルトでチェックした状態にする\"><a href=\"#チェックボックスをデフォルトでチェックした状態にする\" class=\"headerlink\" title=\"チェックボックスをデフォルトでチェックした状態にする\"></a>チェックボックスをデフォルトでチェックした状態にする</h3></li>\n</ul>\n</li>\n<li><code>checked</code>属性を使う<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">checked</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ボタンの表示名を変える\"><a href=\"#ボタンの表示名を変える\" class=\"headerlink\" title=\"ボタンの表示名を変える\"></a>ボタンの表示名を変える</h3></li>\n<li><code>value</code>属性を設定する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;これはボタンです&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"複数のラジオボタンの連携\"><a href=\"#複数のラジオボタンの連携\" class=\"headerlink\" title=\"複数のラジオボタンの連携\"></a>複数のラジオボタンの連携</h3><ul>\n<li><code>name</code>属性をつけることで、グルーピングができる</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span></span><br><span class=\"line\">2<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span></span><br><span class=\"line\">3<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ラジオボタンをデフォルトでチェックした状態にする\"><a href=\"#ラジオボタンをデフォルトでチェックした状態にする\" class=\"headerlink\" title=\"ラジオボタンをデフォルトでチェックした状態にする\"></a>ラジオボタンをデフォルトでチェックした状態にする</h3><ul>\n<li><code>checked</code>属性を使う<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">checked</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"ドロップダウンを生成する\"><a href=\"#ドロップダウンを生成する\" class=\"headerlink\" title=\"ドロップダウンを生成する\"></a>ドロップダウンを生成する</h2><ul>\n<li><code>&lt;select&gt;&lt;/select&gt;</code>タグを使用して、その中のセクションに<code>&lt;option&gt;&lt;/option&gt;</code>タグで項目を記述する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>塩ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>味噌ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>醤油ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>豚骨ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ドロップダウンのデフォルト選択項目を指定する\"><a href=\"#ドロップダウンのデフォルト選択項目を指定する\" class=\"headerlink\" title=\"ドロップダウンのデフォルト選択項目を指定する\"></a>ドロップダウンのデフォルト選択項目を指定する</h3></li>\n<li>デフォルトで選択させた状態にしたい<code>&lt;option&gt;</code>タグに、<code>selected</code>属性を付与する</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>塩ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>味噌ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">selected</span>&gt;</span>醤油ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>豚骨ラーメン<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"div属性について","date":"2021-02-23T12:33:43.000Z","_content":"# dev(devision)要素について\n- `dev`要素は、複数のブロックに対して、レイアウトを適応させることができる\n- `\\<dev\\>\\</dev\\>`で囲んだブロック全体にレイアウトが適応させる\n- 基本的な概念は内部CSSの`class`や`id`と同じ\n\n```html\n<html>\n <head>\n  <style>\n   .A{\n    background:pink;\n    }\n   #B{\n    background:yellow;\n    }\n  </style>\t\n </head>\n <body>\n  <!--classを使用-->\n  <div class=\"A\">\n    <h1>これは見出しです</p>\n    <p>これは見出しに対する本文です</p>\n  </div>\n\n  <!--idを使用-->\n  <div id=\"B\">\n    <h1>これは見出し2です</p>\n    <p>これは見出し2に対する本文です</p>\n  </div>\n\n </body>\n</html>\n```\n","source":"_posts/div属性について.md","raw":"---\ntitle: div属性について\ndate: 2021-02-23 21:33:43\ntags: HTML\n---\n# dev(devision)要素について\n- `dev`要素は、複数のブロックに対して、レイアウトを適応させることができる\n- `\\<dev\\>\\</dev\\>`で囲んだブロック全体にレイアウトが適応させる\n- 基本的な概念は内部CSSの`class`や`id`と同じ\n\n```html\n<html>\n <head>\n  <style>\n   .A{\n    background:pink;\n    }\n   #B{\n    background:yellow;\n    }\n  </style>\t\n </head>\n <body>\n  <!--classを使用-->\n  <div class=\"A\">\n    <h1>これは見出しです</p>\n    <p>これは見出しに対する本文です</p>\n  </div>\n\n  <!--idを使用-->\n  <div id=\"B\">\n    <h1>これは見出し2です</p>\n    <p>これは見出し2に対する本文です</p>\n  </div>\n\n </body>\n</html>\n```\n","slug":"div属性について","published":1,"updated":"2021-02-23T12:33:59.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh383000mmzb6hcrbbmir","content":"<h1><span id=\"devdevision要素について\">dev(devision)要素について</span></h1><ul>\n<li><code>dev</code>要素は、複数のブロックに対して、レイアウトを適応させることができる</li>\n<li><code>\\&lt;dev\\&gt;\\&lt;/dev\\&gt;</code>で囲んだブロック全体にレイアウトが適応させる</li>\n<li>基本的な概念は内部CSSの<code>class</code>や<code>id</code>と同じ</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-class\">.A</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">background</span><span class=\"selector-pseudo\">:pink</span>;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-id\">#B</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">background</span><span class=\"selector-pseudo\">:yellow</span>;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--classを使用--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;A&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>これは見出しです<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは見出しに対する本文です<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--idを使用--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;B&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>これは見出し2です<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは見出し2に対する本文です<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"dev-devision-要素について\"><a href=\"#dev-devision-要素について\" class=\"headerlink\" title=\"dev(devision)要素について\"></a>dev(devision)要素について</h1><ul>\n<li><code>dev</code>要素は、複数のブロックに対して、レイアウトを適応させることができる</li>\n<li><code>\\&lt;dev\\&gt;\\&lt;/dev\\&gt;</code>で囲んだブロック全体にレイアウトが適応させる</li>\n<li>基本的な概念は内部CSSの<code>class</code>や<code>id</code>と同じ</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-class\">.A</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">background</span><span class=\"selector-pseudo\">:pink</span>;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-id\">#B</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">background</span><span class=\"selector-pseudo\">:yellow</span>;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--classを使用--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;A&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>これは見出しです<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは見出しに対する本文です<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--idを使用--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;B&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>これは見出し2です<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは見出し2に対する本文です<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"Floatレイアウトについて","date":"2021-02-26T12:26:11.000Z","_content":"","source":"_posts/Floatレイアウトについて.md","raw":"---\ntitle: Floatレイアウトについて\ndate: 2021-02-26 21:26:11\ntags: \n- HTML\n- CSS\n---\n","slug":"Floatレイアウトについて","published":1,"updated":"2021-02-26T12:26:23.577Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh384000omzb6aevf4jp0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"vimのカレントファイルをブラウザで開く","date":"2021-02-22T13:35:42.000Z","_content":"## openコマンドを使う\n- vimでは`%`でカレントファイルのパスを取得できる\n- `!`はOS用のコマンド(`echo`や`pwd`など)の先頭につけることで`vimエディタ`上からOS用コマンドを実行することができる\n- `open`はファイルのデフォルトで開くソフトに設定されているソフトで開かれる\n\n```\n:!open %\n```\n\n## 入力の手間を減らす\n- これまでのコマンドをショートカットキーで呼び出せるように`.vimrc`に追記する\n\n```\n\" スペースキーをショートカットのトリガーとして認識するように設定\nlet mapleader = \"\\<Space>\" \n\n\"\tスペースキー + o で実行できる\nnnoremap <Leader>o :!open %<CR>\n```\n\n## フォーカスを戻す(Mac)\n- `open`コマンドを使うとフォーカスがブラウザになってしまうので、`AppleScript`を使ってフォーカスをVim(iTerm)に戻す\n\t- `terminal_focus`の対象アプリを変更すればiTerm以外のソフトにも対応可能\n\n~/.vim/plugin/BrowserOpen.vim\n```\ncommand! -bar BrowserOpen !open % | osascript $HOME/bin/terminal_focus.scpt\n```\n\n~/bin/terminal_focus.scpt\n```\ntell application \"iTerm\" to activate\n```\n\n~/.vimrc\n```\n\" スペースキーをショートカットのトリガーとして認識するように設定\nlet mapleader = \"\\<Space>\" \n\n\"\tスペースキー + o で実行できる\nnnoremap <Leader>o :BrowserOpen<CR>\n```\n","source":"_posts/vimのカレントファイルをブラウザで開く.md","raw":"---\ntitle: vimのカレントファイルをブラウザで開く\ndate: 2021-02-22 22:35:42\ntags:\n- Vim\n---\n## openコマンドを使う\n- vimでは`%`でカレントファイルのパスを取得できる\n- `!`はOS用のコマンド(`echo`や`pwd`など)の先頭につけることで`vimエディタ`上からOS用コマンドを実行することができる\n- `open`はファイルのデフォルトで開くソフトに設定されているソフトで開かれる\n\n```\n:!open %\n```\n\n## 入力の手間を減らす\n- これまでのコマンドをショートカットキーで呼び出せるように`.vimrc`に追記する\n\n```\n\" スペースキーをショートカットのトリガーとして認識するように設定\nlet mapleader = \"\\<Space>\" \n\n\"\tスペースキー + o で実行できる\nnnoremap <Leader>o :!open %<CR>\n```\n\n## フォーカスを戻す(Mac)\n- `open`コマンドを使うとフォーカスがブラウザになってしまうので、`AppleScript`を使ってフォーカスをVim(iTerm)に戻す\n\t- `terminal_focus`の対象アプリを変更すればiTerm以外のソフトにも対応可能\n\n~/.vim/plugin/BrowserOpen.vim\n```\ncommand! -bar BrowserOpen !open % | osascript $HOME/bin/terminal_focus.scpt\n```\n\n~/bin/terminal_focus.scpt\n```\ntell application \"iTerm\" to activate\n```\n\n~/.vimrc\n```\n\" スペースキーをショートカットのトリガーとして認識するように設定\nlet mapleader = \"\\<Space>\" \n\n\"\tスペースキー + o で実行できる\nnnoremap <Leader>o :BrowserOpen<CR>\n```\n","slug":"vimのカレントファイルをブラウザで開く","published":1,"updated":"2021-02-22T23:37:27.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh385000rmzb6fk5dfrj9","content":"<h2><span id=\"openコマンドを使う\">openコマンドを使う</span></h2><ul>\n<li>vimでは<code>%</code>でカレントファイルのパスを取得できる</li>\n<li><code>!</code>はOS用のコマンド(<code>echo</code>や<code>pwd</code>など)の先頭につけることで<code>vimエディタ</code>上からOS用コマンドを実行することができる</li>\n<li><code>open</code>はファイルのデフォルトで開くソフトに設定されているソフトで開かれる</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:!open %</span><br></pre></td></tr></table></figure>\n<h2><span id=\"入力の手間を減らす\">入力の手間を減らす</span></h2><ul>\n<li>これまでのコマンドをショートカットキーで呼び出せるように<code>.vimrc</code>に追記する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; スペースキーをショートカットのトリガーとして認識するように設定</span><br><span class=\"line\">let mapleader &#x3D; &quot;\\&lt;Space&gt;&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">&quot;\tスペースキー + o で実行できる</span><br><span class=\"line\">nnoremap &lt;Leader&gt;o :!open %&lt;CR&gt;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"フォーカスを戻すmac\">フォーカスを戻す(Mac)</span></h2><ul>\n<li><code>open</code>コマンドを使うとフォーカスがブラウザになってしまうので、<code>AppleScript</code>を使ってフォーカスをVim(iTerm)に戻す<ul>\n<li><code>terminal_focus</code>の対象アプリを変更すればiTerm以外のソフトにも対応可能</li>\n</ul>\n</li>\n</ul>\n<p>~/.vim/plugin/BrowserOpen.vim</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">command! -bar BrowserOpen !open % | osascript $HOME&#x2F;bin&#x2F;terminal_focus.scpt</span><br></pre></td></tr></table></figure>\n<p>~/bin/terminal_focus.scpt</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tell application &quot;iTerm&quot; to activate</span><br></pre></td></tr></table></figure>\n<p>~/.vimrc</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; スペースキーをショートカットのトリガーとして認識するように設定</span><br><span class=\"line\">let mapleader &#x3D; &quot;\\&lt;Space&gt;&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">&quot;\tスペースキー + o で実行できる</span><br><span class=\"line\">nnoremap &lt;Leader&gt;o :BrowserOpen&lt;CR&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"openコマンドを使う\"><a href=\"#openコマンドを使う\" class=\"headerlink\" title=\"openコマンドを使う\"></a>openコマンドを使う</h2><ul>\n<li>vimでは<code>%</code>でカレントファイルのパスを取得できる</li>\n<li><code>!</code>はOS用のコマンド(<code>echo</code>や<code>pwd</code>など)の先頭につけることで<code>vimエディタ</code>上からOS用コマンドを実行することができる</li>\n<li><code>open</code>はファイルのデフォルトで開くソフトに設定されているソフトで開かれる</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:!open %</span><br></pre></td></tr></table></figure>\n<h2 id=\"入力の手間を減らす\"><a href=\"#入力の手間を減らす\" class=\"headerlink\" title=\"入力の手間を減らす\"></a>入力の手間を減らす</h2><ul>\n<li>これまでのコマンドをショートカットキーで呼び出せるように<code>.vimrc</code>に追記する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; スペースキーをショートカットのトリガーとして認識するように設定</span><br><span class=\"line\">let mapleader &#x3D; &quot;\\&lt;Space&gt;&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">&quot;\tスペースキー + o で実行できる</span><br><span class=\"line\">nnoremap &lt;Leader&gt;o :!open %&lt;CR&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"フォーカスを戻す-Mac\"><a href=\"#フォーカスを戻す-Mac\" class=\"headerlink\" title=\"フォーカスを戻す(Mac)\"></a>フォーカスを戻す(Mac)</h2><ul>\n<li><code>open</code>コマンドを使うとフォーカスがブラウザになってしまうので、<code>AppleScript</code>を使ってフォーカスをVim(iTerm)に戻す<ul>\n<li><code>terminal_focus</code>の対象アプリを変更すればiTerm以外のソフトにも対応可能</li>\n</ul>\n</li>\n</ul>\n<p>~/.vim/plugin/BrowserOpen.vim</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">command! -bar BrowserOpen !open % | osascript $HOME&#x2F;bin&#x2F;terminal_focus.scpt</span><br></pre></td></tr></table></figure>\n<p>~/bin/terminal_focus.scpt</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tell application &quot;iTerm&quot; to activate</span><br></pre></td></tr></table></figure>\n<p>~/.vimrc</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; スペースキーをショートカットのトリガーとして認識するように設定</span><br><span class=\"line\">let mapleader &#x3D; &quot;\\&lt;Space&gt;&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">&quot;\tスペースキー + o で実行できる</span><br><span class=\"line\">nnoremap &lt;Leader&gt;o :BrowserOpen&lt;CR&gt;</span><br></pre></td></tr></table></figure>"},{"title":"iframeについて","date":"2021-02-11T12:32:02.000Z","_content":"# ページ上に複数のページから読み込んだページを表示する\n# iframeタグを使用する\n- iframe = Inline Frame(行内フレーム)\n```html\n<iframe src=\"table.html\"></iframe>\n```\n\n# Youtubeの動画を埋め込む\n1. youtubeで埋め込みたい動画を選択\n2. 動画の再生画面から、`埋め込みコード`を取得\n3. `埋め込みコード`は`iframe`で記述してあるので、そのままコピペする\n\n取得した埋め込みコード例\n```html\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/y4noU6qgJlc\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n```\n","source":"_posts/iframeについて.md","raw":"---\ntitle: iframeについて\ndate: 2021-02-11 21:32:02\ntags: HTML\n---\n# ページ上に複数のページから読み込んだページを表示する\n# iframeタグを使用する\n- iframe = Inline Frame(行内フレーム)\n```html\n<iframe src=\"table.html\"></iframe>\n```\n\n# Youtubeの動画を埋め込む\n1. youtubeで埋め込みたい動画を選択\n2. 動画の再生画面から、`埋め込みコード`を取得\n3. `埋め込みコード`は`iframe`で記述してあるので、そのままコピペする\n\n取得した埋め込みコード例\n```html\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/y4noU6qgJlc\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n```\n","slug":"iframeについて","published":1,"updated":"2021-02-11T12:32:15.119Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh385000smzb68j015i6w","content":"<h1><span id=\"ページ上に複数のページから読み込んだページを表示する\">ページ上に複数のページから読み込んだページを表示する</span></h1><h1><span id=\"iframeタグを使用する\">iframeタグを使用する</span></h1><ul>\n<li>iframe = Inline Frame(行内フレーム)<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;table.html&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"youtubeの動画を埋め込む\">Youtubeの動画を埋め込む</span></h1></li>\n</ul>\n<ol>\n<li>youtubeで埋め込みたい動画を選択</li>\n<li>動画の再生画面から、<code>埋め込みコード</code>を取得</li>\n<li><code>埋め込みコード</code>は<code>iframe</code>で記述してあるので、そのままコピペする</li>\n</ol>\n<p>取得した埋め込みコード例</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;560&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;315&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.youtube.com/embed/y4noU6qgJlc&quot;</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">allow</span>=<span class=\"string\">&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot;</span> <span class=\"attr\">allowfullscreen</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ページ上に複数のページから読み込んだページを表示する\"><a href=\"#ページ上に複数のページから読み込んだページを表示する\" class=\"headerlink\" title=\"ページ上に複数のページから読み込んだページを表示する\"></a>ページ上に複数のページから読み込んだページを表示する</h1><h1 id=\"iframeタグを使用する\"><a href=\"#iframeタグを使用する\" class=\"headerlink\" title=\"iframeタグを使用する\"></a>iframeタグを使用する</h1><ul>\n<li>iframe = Inline Frame(行内フレーム)<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;table.html&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Youtubeの動画を埋め込む\"><a href=\"#Youtubeの動画を埋め込む\" class=\"headerlink\" title=\"Youtubeの動画を埋め込む\"></a>Youtubeの動画を埋め込む</h1></li>\n</ul>\n<ol>\n<li>youtubeで埋め込みたい動画を選択</li>\n<li>動画の再生画面から、<code>埋め込みコード</code>を取得</li>\n<li><code>埋め込みコード</code>は<code>iframe</code>で記述してあるので、そのままコピペする</li>\n</ol>\n<p>取得した埋め込みコード例</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;560&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;315&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.youtube.com/embed/y4noU6qgJlc&quot;</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">allow</span>=<span class=\"string\">&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot;</span> <span class=\"attr\">allowfullscreen</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"【Android Studio】Materila Designを使用して見た目をリッチにする","date":"2021-03-16T13:56:54.000Z","_content":"## 参考資料\n- 参考ドキュメント\n[https://material.io/design](https://material.io/design)\n[https://github.com/material-components/material-components-android](https://github.com/material-components/material-components-android)\n\n- スタートガイド\n[https://github.com/material-components/material-components-android/blob/master/docs/getting-started.md](https://github.com/material-components/material-components-android/blob/master/docs/getting-started.md)\n\n## 手順\n1. build.gradle(Project:プロジェクト名)に`google()`が含まれているかチェック\n\n    ```jsx\n    allprojects {\n        repositories {\n            google()     <- これが記述してあればOK\n        }\n    }\n    ```\n\n2. build.gradle(Module:app)にライブラリを記述\n\n    `<version>`の部分は以下のURLを参考にする\n\t\t- [https://mvnrepository.com/artifact/com.google.android.material/material](https://mvnrepository.com/artifact/com.google.android.material/material)\n\n    ```jsx\n    dependencies {\n    \t...\n    \timplementation 'com.google.android.material:material:<version>'\n    \t...\n    }\n    ```\n\n3. 一度ビルドする\n4. styles.xmlを書き換えてみる\n\n    生成したての状態\n\n    ```jsx\n    <resources>\n        <!-- Base application theme. -->\n        <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n            <!-- Customize your theme here. -->\n            <item name=\"colorPrimary\">@color/colorPrimary</item>\n            <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n            <item name=\"colorAccent\">@color/colorAccent</item>\n        </style>\n\n    </resources>\n    ```\n\n    これの`<style>`ブロックの`parent`パラメーターを書き換えることで、テーマを変更できる\n\n    ```jsx\n    <style name=\"AppTheme\" parent=\"Theme.MaterialComponents.DayNight.NoActionBar\">\n    ```\n\n    このテーマを書き換えることで、`<Button>` と `<AutoCompleteTextView>`の XML コンポーネントをそれぞれ `<MaterialButton>` と `<MaterialAutoCompleteTextView>` に置き換えます。\n\n    他のコンポーネントのテーマを変えるには、XMLに直接記述する必要がある\n","source":"_posts/【Android-Studio】Materila-Designを使用して見た目をリッチにする.md","raw":"---\ntitle: 【Android Studio】Materila Designを使用して見た目をリッチにする\ndate: 2021-03-16 22:56:54\ntags:\n- Android Studio\n- Kotlin\n---\n## 参考資料\n- 参考ドキュメント\n[https://material.io/design](https://material.io/design)\n[https://github.com/material-components/material-components-android](https://github.com/material-components/material-components-android)\n\n- スタートガイド\n[https://github.com/material-components/material-components-android/blob/master/docs/getting-started.md](https://github.com/material-components/material-components-android/blob/master/docs/getting-started.md)\n\n## 手順\n1. build.gradle(Project:プロジェクト名)に`google()`が含まれているかチェック\n\n    ```jsx\n    allprojects {\n        repositories {\n            google()     <- これが記述してあればOK\n        }\n    }\n    ```\n\n2. build.gradle(Module:app)にライブラリを記述\n\n    `<version>`の部分は以下のURLを参考にする\n\t\t- [https://mvnrepository.com/artifact/com.google.android.material/material](https://mvnrepository.com/artifact/com.google.android.material/material)\n\n    ```jsx\n    dependencies {\n    \t...\n    \timplementation 'com.google.android.material:material:<version>'\n    \t...\n    }\n    ```\n\n3. 一度ビルドする\n4. styles.xmlを書き換えてみる\n\n    生成したての状態\n\n    ```jsx\n    <resources>\n        <!-- Base application theme. -->\n        <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n            <!-- Customize your theme here. -->\n            <item name=\"colorPrimary\">@color/colorPrimary</item>\n            <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n            <item name=\"colorAccent\">@color/colorAccent</item>\n        </style>\n\n    </resources>\n    ```\n\n    これの`<style>`ブロックの`parent`パラメーターを書き換えることで、テーマを変更できる\n\n    ```jsx\n    <style name=\"AppTheme\" parent=\"Theme.MaterialComponents.DayNight.NoActionBar\">\n    ```\n\n    このテーマを書き換えることで、`<Button>` と `<AutoCompleteTextView>`の XML コンポーネントをそれぞれ `<MaterialButton>` と `<MaterialAutoCompleteTextView>` に置き換えます。\n\n    他のコンポーネントのテーマを変えるには、XMLに直接記述する必要がある\n","slug":"【Android-Studio】Materila-Designを使用して見た目をリッチにする","published":1,"updated":"2021-03-16T20:01:50.086Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh386000umzb601la7c7a","content":"<h2><span id=\"参考資料\">参考資料</span></h2><ul>\n<li><p>参考ドキュメント<br><a href=\"https://material.io/design\">https://material.io/design</a><br><a href=\"https://github.com/material-components/material-components-android\">https://github.com/material-components/material-components-android</a></p>\n</li>\n<li><p>スタートガイド<br><a href=\"https://github.com/material-components/material-components-android/blob/master/docs/getting-started.md\">https://github.com/material-components/material-components-android/blob/master/docs/getting-started.md</a></p>\n</li>\n</ul>\n<h2><span id=\"手順\">手順</span></h2><ol>\n<li><p>build.gradle(Project:プロジェクト名)に<code>google()</code>が含まれているかチェック</p>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">allprojects &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        google()     &lt;- これが記述してあればOK</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>build.gradle(Module:app)にライブラリを記述</p>\n<p> <code>&lt;version&gt;</code>の部分は以下のURLを参考にする</p>\n<pre><code> - [https://mvnrepository.com/artifact/com.google.android.material/material](https://mvnrepository.com/artifact/com.google.android.material/material)</code></pre>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\timplementation <span class=\"string\">&#x27;com.google.android.material:material:&lt;version&gt;&#x27;</span></span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>一度ビルドする</p>\n</li>\n<li><p>styles.xmlを書き換えてみる</p>\n<p> 生成したての状態</p>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;resources&gt;</span><br><span class=\"line\">    &lt;!-- Base application theme. --&gt;</span><br><span class=\"line\">    &lt;style name=<span class=\"string\">&quot;AppTheme&quot;</span> parent=<span class=\"string\">&quot;Theme.AppCompat.Light.DarkActionBar&quot;</span>&gt;</span><br><span class=\"line\">        &lt;!-- Customize your theme here. --&gt;</span><br><span class=\"line\">        &lt;item name=<span class=\"string\">&quot;colorPrimary&quot;</span>&gt;@color/colorPrimary&lt;/item&gt;</span><br><span class=\"line\">        &lt;item name=<span class=\"string\">&quot;colorPrimaryDark&quot;</span>&gt;@color/colorPrimaryDark&lt;/item&gt;</span><br><span class=\"line\">        &lt;item name=<span class=\"string\">&quot;colorAccent&quot;</span>&gt;@color/colorAccent&lt;/item&gt;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/resources&gt;</span><br></pre></td></tr></table></figure>\n<p> これの<code>&lt;style&gt;</code>ブロックの<code>parent</code>パラメーターを書き換えることで、テーマを変更できる</p>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style name=<span class=\"string\">&quot;AppTheme&quot;</span> parent=<span class=\"string\">&quot;Theme.MaterialComponents.DayNight.NoActionBar&quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p> このテーマを書き換えることで、<code>&lt;Button&gt;</code> と <code>&lt;AutoCompleteTextView&gt;</code>の XML コンポーネントをそれぞれ <code>&lt;MaterialButton&gt;</code> と <code>&lt;MaterialAutoCompleteTextView&gt;</code> に置き換えます。</p>\n<p> 他のコンポーネントのテーマを変えるには、XMLに直接記述する必要がある</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"参考資料\"><a href=\"#参考資料\" class=\"headerlink\" title=\"参考資料\"></a>参考資料</h2><ul>\n<li><p>参考ドキュメント<br><a href=\"https://material.io/design\">https://material.io/design</a><br><a href=\"https://github.com/material-components/material-components-android\">https://github.com/material-components/material-components-android</a></p>\n</li>\n<li><p>スタートガイド<br><a href=\"https://github.com/material-components/material-components-android/blob/master/docs/getting-started.md\">https://github.com/material-components/material-components-android/blob/master/docs/getting-started.md</a></p>\n</li>\n</ul>\n<h2 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h2><ol>\n<li><p>build.gradle(Project:プロジェクト名)に<code>google()</code>が含まれているかチェック</p>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">allprojects &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        google()     &lt;- これが記述してあればOK</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>build.gradle(Module:app)にライブラリを記述</p>\n<p> <code>&lt;version&gt;</code>の部分は以下のURLを参考にする</p>\n<pre><code> - [https://mvnrepository.com/artifact/com.google.android.material/material](https://mvnrepository.com/artifact/com.google.android.material/material)</code></pre>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\timplementation <span class=\"string\">&#x27;com.google.android.material:material:&lt;version&gt;&#x27;</span></span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>一度ビルドする</p>\n</li>\n<li><p>styles.xmlを書き換えてみる</p>\n<p> 生成したての状態</p>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;resources&gt;</span><br><span class=\"line\">    &lt;!-- Base application theme. --&gt;</span><br><span class=\"line\">    &lt;style name=<span class=\"string\">&quot;AppTheme&quot;</span> parent=<span class=\"string\">&quot;Theme.AppCompat.Light.DarkActionBar&quot;</span>&gt;</span><br><span class=\"line\">        &lt;!-- Customize your theme here. --&gt;</span><br><span class=\"line\">        &lt;item name=<span class=\"string\">&quot;colorPrimary&quot;</span>&gt;@color/colorPrimary&lt;/item&gt;</span><br><span class=\"line\">        &lt;item name=<span class=\"string\">&quot;colorPrimaryDark&quot;</span>&gt;@color/colorPrimaryDark&lt;/item&gt;</span><br><span class=\"line\">        &lt;item name=<span class=\"string\">&quot;colorAccent&quot;</span>&gt;@color/colorAccent&lt;/item&gt;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/resources&gt;</span><br></pre></td></tr></table></figure>\n<p> これの<code>&lt;style&gt;</code>ブロックの<code>parent</code>パラメーターを書き換えることで、テーマを変更できる</p>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style name=<span class=\"string\">&quot;AppTheme&quot;</span> parent=<span class=\"string\">&quot;Theme.MaterialComponents.DayNight.NoActionBar&quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p> このテーマを書き換えることで、<code>&lt;Button&gt;</code> と <code>&lt;AutoCompleteTextView&gt;</code>の XML コンポーネントをそれぞれ <code>&lt;MaterialButton&gt;</code> と <code>&lt;MaterialAutoCompleteTextView&gt;</code> に置き換えます。</p>\n<p> 他のコンポーネントのテーマを変えるには、XMLに直接記述する必要がある</p>\n</li>\n</ol>\n"},{"title":"zshとaliasについて","date":"2021-02-16T00:44:35.000Z","_content":"# zshとは\n- 読み方: ズィーシェル\n- シェルの一種で`bash`の進化版\n\nhttps://ja.wikipedia.org/wiki/Z_Shell\n\n## シェルとは\n- カーネルと対話するためのインターフェイス\n\t- シェルの名前の由来は、カーネルを包み込んでいることに由来する\n- カーネルの中に入力機能を入れない理由\n\t- シェル(ロジック)とカーネル(インターフェイス)を分けることでインターフェイスを他のカーネルでも使いまわすことができるようになる\n\t- インターフェイスのエラーでカーネルをクラッシュする可能性を排除できる\n\nhttps://recruit.cct-inc.co.jp/tecblog/os/shell/\n\n# aliasとは\n- シェル上で、長いコマンドや一連のコマンドをまとめて、ひとまとめにすることのできる機能\n\n# 使い方(zshの場合)\n1. `~/.zshrc`に記述する\n\t```zsh\n\talias 別名='本来のコマンド'\n\t```\n2. 保存して`.zshrcL`の再読み込みをする\n\t```zsh\n\tsource ~/.zshrc\n\t```\n3. `別名`で指定したコマンドを打って期待通り動けばOK\n\n## 使用例\n- 長いパスのフォルダに移動`cd`したい場合\n\t- このコマンド`bc`を打つだけで記述した`cd`コマンドが実行される\n\t```zsh\n\talias bc='cd /Users/daiki/Desktop/Blog/Daiki-Iijima.github.io/source/_posts'\n\t```\n\n# 複数のコマンドを1つのaliasにまとめる\n- 各コマンドを`;`で区切ることで連続したコマンドを記述できる\n\t```zsh\n\talias 別名='コマンド1;コマンド2'\n\t```\n## 使用例\n- デスクトップへ移動して、`test`フォルダを生成する\n\t```zsh\n\talias cdmk='cd /Users/daiki/Desktop;mkdir test'\n\t```\n\n# 引数を渡す\n- `$`+`数字`を本来の引数があるはずの位置に記述することで、引数を渡すことができる\n\t```zsh\t\n\talias 別名='mkdir $1'\n\t```\n\t- 使用する場合\n\t\t```zsh\n\t\t別名 引数\n\t\t```\n- 複数の引数を渡したい場合は、`$`の後の`数字を`繰り上げていく\n\t```zsh\n\talias 別名='mkdir $1;mkdir $2'\n\t```\n\t- 使用する場合\n\t\t```zsh\n\t\t別名 引数 引数\n\t\t```\n\n## 使用例\n- メモをとるためにディレクトリとディレクトリの中にディレクトリと同名の`.md`ファイルをvimで編集する\n```zsh\nalias memo='(){cd /Users/daiki/Desktop/memo;mkdir $1;vim $1.md}'\n```\n# 参照リンク\n- [シェルの設定ファイルを再読み込み](http://norizo333.hatenablog.com/entry/20090921/1253523438)\n- [bashで複数のコマンドエイリアス](https://qiita.com/mikakane/items/ac27582e8e52228adced)\n- [zsh環境で引数を持ったコマンドを作る](https://qiita.com/sayama0402/items/46241c07c30e431fe38f)\n- [【時短】zshでエイリアスを設定する方法](https://qiita.com/terufumi1122/items/1bbb1cf96e376e30e9fc)\n","source":"_posts/zshとaliasについて.md","raw":"---\ntitle: zshとaliasについて\ndate: 2021-02-16 09:44:35\ntags: \n- zsh\n- alias\n---\n# zshとは\n- 読み方: ズィーシェル\n- シェルの一種で`bash`の進化版\n\nhttps://ja.wikipedia.org/wiki/Z_Shell\n\n## シェルとは\n- カーネルと対話するためのインターフェイス\n\t- シェルの名前の由来は、カーネルを包み込んでいることに由来する\n- カーネルの中に入力機能を入れない理由\n\t- シェル(ロジック)とカーネル(インターフェイス)を分けることでインターフェイスを他のカーネルでも使いまわすことができるようになる\n\t- インターフェイスのエラーでカーネルをクラッシュする可能性を排除できる\n\nhttps://recruit.cct-inc.co.jp/tecblog/os/shell/\n\n# aliasとは\n- シェル上で、長いコマンドや一連のコマンドをまとめて、ひとまとめにすることのできる機能\n\n# 使い方(zshの場合)\n1. `~/.zshrc`に記述する\n\t```zsh\n\talias 別名='本来のコマンド'\n\t```\n2. 保存して`.zshrcL`の再読み込みをする\n\t```zsh\n\tsource ~/.zshrc\n\t```\n3. `別名`で指定したコマンドを打って期待通り動けばOK\n\n## 使用例\n- 長いパスのフォルダに移動`cd`したい場合\n\t- このコマンド`bc`を打つだけで記述した`cd`コマンドが実行される\n\t```zsh\n\talias bc='cd /Users/daiki/Desktop/Blog/Daiki-Iijima.github.io/source/_posts'\n\t```\n\n# 複数のコマンドを1つのaliasにまとめる\n- 各コマンドを`;`で区切ることで連続したコマンドを記述できる\n\t```zsh\n\talias 別名='コマンド1;コマンド2'\n\t```\n## 使用例\n- デスクトップへ移動して、`test`フォルダを生成する\n\t```zsh\n\talias cdmk='cd /Users/daiki/Desktop;mkdir test'\n\t```\n\n# 引数を渡す\n- `$`+`数字`を本来の引数があるはずの位置に記述することで、引数を渡すことができる\n\t```zsh\t\n\talias 別名='mkdir $1'\n\t```\n\t- 使用する場合\n\t\t```zsh\n\t\t別名 引数\n\t\t```\n- 複数の引数を渡したい場合は、`$`の後の`数字を`繰り上げていく\n\t```zsh\n\talias 別名='mkdir $1;mkdir $2'\n\t```\n\t- 使用する場合\n\t\t```zsh\n\t\t別名 引数 引数\n\t\t```\n\n## 使用例\n- メモをとるためにディレクトリとディレクトリの中にディレクトリと同名の`.md`ファイルをvimで編集する\n```zsh\nalias memo='(){cd /Users/daiki/Desktop/memo;mkdir $1;vim $1.md}'\n```\n# 参照リンク\n- [シェルの設定ファイルを再読み込み](http://norizo333.hatenablog.com/entry/20090921/1253523438)\n- [bashで複数のコマンドエイリアス](https://qiita.com/mikakane/items/ac27582e8e52228adced)\n- [zsh環境で引数を持ったコマンドを作る](https://qiita.com/sayama0402/items/46241c07c30e431fe38f)\n- [【時短】zshでエイリアスを設定する方法](https://qiita.com/terufumi1122/items/1bbb1cf96e376e30e9fc)\n","slug":"zshとaliasについて","published":1,"updated":"2021-02-21T02:45:11.088Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh386000xmzb6hn0i0801","content":"<h1><span id=\"zshとは\">zshとは</span></h1><ul>\n<li>読み方: ズィーシェル</li>\n<li>シェルの一種で<code>bash</code>の進化版</li>\n</ul>\n<p><a href=\"https://ja.wikipedia.org/wiki/Z_Shell\">https://ja.wikipedia.org/wiki/Z_Shell</a></p>\n<h2><span id=\"シェルとは\">シェルとは</span></h2><ul>\n<li>カーネルと対話するためのインターフェイス<ul>\n<li>シェルの名前の由来は、カーネルを包み込んでいることに由来する</li>\n</ul>\n</li>\n<li>カーネルの中に入力機能を入れない理由<ul>\n<li>シェル(ロジック)とカーネル(インターフェイス)を分けることでインターフェイスを他のカーネルでも使いまわすことができるようになる</li>\n<li>インターフェイスのエラーでカーネルをクラッシュする可能性を排除できる</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://recruit.cct-inc.co.jp/tecblog/os/shell/\">https://recruit.cct-inc.co.jp/tecblog/os/shell/</a></p>\n<h1><span id=\"aliasとは\">aliasとは</span></h1><ul>\n<li>シェル上で、長いコマンドや一連のコマンドをまとめて、ひとまとめにすることのできる機能</li>\n</ul>\n<h1><span id=\"使い方zshの場合\">使い方(zshの場合)</span></h1><ol>\n<li><code>~/.zshrc</code>に記述する <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> 別名=<span class=\"string\">&#x27;本来のコマンド&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>保存して<code>.zshrcL</code>の再読み込みをする <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure></li>\n<li><code>別名</code>で指定したコマンドを打って期待通り動けばOK</li>\n</ol>\n<h2><span id=\"使用例\">使用例</span></h2><ul>\n<li>長いパスのフォルダに移動<code>cd</code>したい場合<ul>\n<li>このコマンド<code>bc</code>を打つだけで記述した<code>cd</code>コマンドが実行される<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> bc=<span class=\"string\">&#x27;cd /Users/daiki/Desktop/Blog/Daiki-Iijima.github.io/source/_posts&#x27;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"複数のコマンドを1つのaliasにまとめる\">複数のコマンドを1つのaliasにまとめる</span></h1></li>\n</ul>\n</li>\n<li>各コマンドを<code>;</code>で区切ることで連続したコマンドを記述できる  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> 別名=<span class=\"string\">&#x27;コマンド1;コマンド2&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"使用例\">使用例</span></h2></li>\n<li>デスクトップへ移動して、<code>test</code>フォルダを生成する  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> cdmk=<span class=\"string\">&#x27;cd /Users/daiki/Desktop;mkdir test&#x27;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"引数を渡す\">引数を渡す</span></h1></li>\n<li><code>$</code>+<code>数字</code>を本来の引数があるはずの位置に記述することで、引数を渡すことができる  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> 別名=<span class=\"string\">&#x27;mkdir $1&#x27;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用する場合  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">別名 引数</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>複数の引数を渡したい場合は、<code>$</code>の後の<code>数字を</code>繰り上げていく  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> 別名=<span class=\"string\">&#x27;mkdir $1;mkdir $2&#x27;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用する場合  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">別名 引数 引数</span><br></pre></td></tr></table></figure>\n<h2><span id=\"使用例\">使用例</span></h2></li>\n</ul>\n</li>\n<li>メモをとるためにディレクトリとディレクトリの中にディレクトリと同名の<code>.md</code>ファイルをvimで編集する<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> memo=<span class=\"string\">&#x27;()&#123;cd /Users/daiki/Desktop/memo;mkdir $1;vim $1.md&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"参照リンク\">参照リンク</span></h1></li>\n<li><a href=\"http://norizo333.hatenablog.com/entry/20090921/1253523438\">シェルの設定ファイルを再読み込み</a></li>\n<li><a href=\"https://qiita.com/mikakane/items/ac27582e8e52228adced\">bashで複数のコマンドエイリアス</a></li>\n<li><a href=\"https://qiita.com/sayama0402/items/46241c07c30e431fe38f\">zsh環境で引数を持ったコマンドを作る</a></li>\n<li><a href=\"https://qiita.com/terufumi1122/items/1bbb1cf96e376e30e9fc\">【時短】zshでエイリアスを設定する方法</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"zshとは\"><a href=\"#zshとは\" class=\"headerlink\" title=\"zshとは\"></a>zshとは</h1><ul>\n<li>読み方: ズィーシェル</li>\n<li>シェルの一種で<code>bash</code>の進化版</li>\n</ul>\n<p><a href=\"https://ja.wikipedia.org/wiki/Z_Shell\">https://ja.wikipedia.org/wiki/Z_Shell</a></p>\n<h2 id=\"シェルとは\"><a href=\"#シェルとは\" class=\"headerlink\" title=\"シェルとは\"></a>シェルとは</h2><ul>\n<li>カーネルと対話するためのインターフェイス<ul>\n<li>シェルの名前の由来は、カーネルを包み込んでいることに由来する</li>\n</ul>\n</li>\n<li>カーネルの中に入力機能を入れない理由<ul>\n<li>シェル(ロジック)とカーネル(インターフェイス)を分けることでインターフェイスを他のカーネルでも使いまわすことができるようになる</li>\n<li>インターフェイスのエラーでカーネルをクラッシュする可能性を排除できる</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://recruit.cct-inc.co.jp/tecblog/os/shell/\">https://recruit.cct-inc.co.jp/tecblog/os/shell/</a></p>\n<h1 id=\"aliasとは\"><a href=\"#aliasとは\" class=\"headerlink\" title=\"aliasとは\"></a>aliasとは</h1><ul>\n<li>シェル上で、長いコマンドや一連のコマンドをまとめて、ひとまとめにすることのできる機能</li>\n</ul>\n<h1 id=\"使い方-zshの場合\"><a href=\"#使い方-zshの場合\" class=\"headerlink\" title=\"使い方(zshの場合)\"></a>使い方(zshの場合)</h1><ol>\n<li><code>~/.zshrc</code>に記述する <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> 別名=<span class=\"string\">&#x27;本来のコマンド&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>保存して<code>.zshrcL</code>の再読み込みをする <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure></li>\n<li><code>別名</code>で指定したコマンドを打って期待通り動けばOK</li>\n</ol>\n<h2 id=\"使用例\"><a href=\"#使用例\" class=\"headerlink\" title=\"使用例\"></a>使用例</h2><ul>\n<li>長いパスのフォルダに移動<code>cd</code>したい場合<ul>\n<li>このコマンド<code>bc</code>を打つだけで記述した<code>cd</code>コマンドが実行される<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> bc=<span class=\"string\">&#x27;cd /Users/daiki/Desktop/Blog/Daiki-Iijima.github.io/source/_posts&#x27;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"複数のコマンドを1つのaliasにまとめる\"><a href=\"#複数のコマンドを1つのaliasにまとめる\" class=\"headerlink\" title=\"複数のコマンドを1つのaliasにまとめる\"></a>複数のコマンドを1つのaliasにまとめる</h1></li>\n</ul>\n</li>\n<li>各コマンドを<code>;</code>で区切ることで連続したコマンドを記述できる  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> 別名=<span class=\"string\">&#x27;コマンド1;コマンド2&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"使用例-1\"><a href=\"#使用例-1\" class=\"headerlink\" title=\"使用例\"></a>使用例</h2></li>\n<li>デスクトップへ移動して、<code>test</code>フォルダを生成する  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> cdmk=<span class=\"string\">&#x27;cd /Users/daiki/Desktop;mkdir test&#x27;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"引数を渡す\"><a href=\"#引数を渡す\" class=\"headerlink\" title=\"引数を渡す\"></a>引数を渡す</h1></li>\n<li><code>$</code>+<code>数字</code>を本来の引数があるはずの位置に記述することで、引数を渡すことができる  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> 別名=<span class=\"string\">&#x27;mkdir $1&#x27;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用する場合  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">別名 引数</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>複数の引数を渡したい場合は、<code>$</code>の後の<code>数字を</code>繰り上げていく  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> 別名=<span class=\"string\">&#x27;mkdir $1;mkdir $2&#x27;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用する場合  <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">別名 引数 引数</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用例-2\"><a href=\"#使用例-2\" class=\"headerlink\" title=\"使用例\"></a>使用例</h2></li>\n</ul>\n</li>\n<li>メモをとるためにディレクトリとディレクトリの中にディレクトリと同名の<code>.md</code>ファイルをvimで編集する<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> memo=<span class=\"string\">&#x27;()&#123;cd /Users/daiki/Desktop/memo;mkdir $1;vim $1.md&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"参照リンク\"><a href=\"#参照リンク\" class=\"headerlink\" title=\"参照リンク\"></a>参照リンク</h1></li>\n<li><a href=\"http://norizo333.hatenablog.com/entry/20090921/1253523438\">シェルの設定ファイルを再読み込み</a></li>\n<li><a href=\"https://qiita.com/mikakane/items/ac27582e8e52228adced\">bashで複数のコマンドエイリアス</a></li>\n<li><a href=\"https://qiita.com/sayama0402/items/46241c07c30e431fe38f\">zsh環境で引数を持ったコマンドを作る</a></li>\n<li><a href=\"https://qiita.com/terufumi1122/items/1bbb1cf96e376e30e9fc\">【時短】zshでエイリアスを設定する方法</a></li>\n</ul>\n"},{"title":"【Android Studio】build.Gradleが２つあるのはなぜなのか","date":"2021-03-14T16:04:43.000Z","_content":"AndroidStudioでプロジェクトを生成すると、「build.Gradle」というファイルが2つ生成される\n\n### ルート直下の「build.gradle」(Project:プロジェクト名)\n\nこのファイルは、すべてのサブプロジェクトとモジュールに共通する設定項目を追加することができる最上位のビルドファイル\n\n【例】 : サブプロジェクトにインストールしたいライブラリが含まれているリポジトリ\n\n### appファイル直下の「build.gradle」(Module : app)\n\nサブプロジェクトごとに必要な依存関係やビルド設定を記述する\n\n【例】 : 使用したいライブラリのURI\n","source":"_posts/【Android-Studio】build-Gradleが２つあるのはなぜなのか.md","raw":"---\ntitle: 【Android Studio】build.Gradleが２つあるのはなぜなのか\ndate: 2021-03-15 01:04:43\ntags:\n- Android Studio\n---\nAndroidStudioでプロジェクトを生成すると、「build.Gradle」というファイルが2つ生成される\n\n### ルート直下の「build.gradle」(Project:プロジェクト名)\n\nこのファイルは、すべてのサブプロジェクトとモジュールに共通する設定項目を追加することができる最上位のビルドファイル\n\n【例】 : サブプロジェクトにインストールしたいライブラリが含まれているリポジトリ\n\n### appファイル直下の「build.gradle」(Module : app)\n\nサブプロジェクトごとに必要な依存関係やビルド設定を記述する\n\n【例】 : 使用したいライブラリのURI\n","slug":"【Android-Studio】build-Gradleが２つあるのはなぜなのか","published":1,"updated":"2021-03-16T20:05:34.047Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh387000zmzb69y14gdfl","content":"<p>AndroidStudioでプロジェクトを生成すると、「build.Gradle」というファイルが2つ生成される</p>\n<h3><span id=\"ルート直下のbuildgradleprojectプロジェクト名\">ルート直下の「build.gradle」(Project:プロジェクト名)</span></h3><p>このファイルは、すべてのサブプロジェクトとモジュールに共通する設定項目を追加することができる最上位のビルドファイル</p>\n<p>【例】 : サブプロジェクトにインストールしたいライブラリが含まれているリポジトリ</p>\n<h3><span id=\"appファイル直下のbuildgradlemodule-app\">appファイル直下の「build.gradle」(Module : app)</span></h3><p>サブプロジェクトごとに必要な依存関係やビルド設定を記述する</p>\n<p>【例】 : 使用したいライブラリのURI</p>\n","site":{"data":{}},"excerpt":"","more":"<p>AndroidStudioでプロジェクトを生成すると、「build.Gradle」というファイルが2つ生成される</p>\n<h3 id=\"ルート直下の「build-gradle」-Project-プロジェクト名\"><a href=\"#ルート直下の「build-gradle」-Project-プロジェクト名\" class=\"headerlink\" title=\"ルート直下の「build.gradle」(Project:プロジェクト名)\"></a>ルート直下の「build.gradle」(Project:プロジェクト名)</h3><p>このファイルは、すべてのサブプロジェクトとモジュールに共通する設定項目を追加することができる最上位のビルドファイル</p>\n<p>【例】 : サブプロジェクトにインストールしたいライブラリが含まれているリポジトリ</p>\n<h3 id=\"appファイル直下の「build-gradle」-Module-app\"><a href=\"#appファイル直下の「build-gradle」-Module-app\" class=\"headerlink\" title=\"appファイル直下の「build.gradle」(Module : app)\"></a>appファイル直下の「build.gradle」(Module : app)</h3><p>サブプロジェクトごとに必要な依存関係やビルド設定を記述する</p>\n<p>【例】 : 使用したいライブラリのURI</p>\n"},{"title":"【CSS】マージン・パディング・ボーダーについて","date":"2021-03-05T17:58:24.000Z","_content":"## マージンについて\n- マージンとは日本語で`余白`\n- 要素の一番外側に位置する領域を意味する\n- `background-color`を設定している場合、色の領域は広がらない\n##  \n## マージンとマージンは相殺する\n`margin-bottom:20px`と`margin-top:30px`が上下に並んでいる場合、2つの要素の距離は２つの値を足した`50px`にはならず、`重なった部分のマージン`は重なったままになるので、結果は`30px`のマージンが取られた状態になる\n\n### 記述する値によって設定できるマージンが変わる\n1. 1つの値を設定する\n\t- `上下左右`のマージンが同じだけ設定される\n\t```html\n\t<!-- 上下左右全て100px分のマージンが設定される -->\n\tmargin: 100px;\n\t```\n2. 2つの値を設定する\n\t- `上下`、`左右`のマージンが別々に設定される\n\t```html\n\t<!-- 上下:100px,左右:50pxのマージンが設定させる -->\n\tmargin: 100px 50px;\n\t```\n3. 3つの値を設定する\n\t- `上`、`左右`、`下`のマージンが別々に設定される\n\t```html\n\t<!-- 上:100px,左右:50px,下200pxのマージンが設定される -->\n\tmargin: 100px 50px 200px;\n\t```\n4. 個別に値を設定する\n\t- 上の３つとは少し記述の仕方が変わっる\n\t```html\n\t<!-- 明示的に設定する -->\n\tmargin-top: 100px;\n\tmargin-right: 100px;\n\tmargin-bottom: 50px;\n\tmargin-left: 100px;\n\t```\n\n## パディングについて\n- マージンの１つ内側の余白を設定する\n- `background-color`を設定している場合、色の領域も広がる\n\n## width属性とpadding\n-`width`属性は`padding`のピクセル数に対する値ではなく、画面に対する値を設定している\n\t- なので、`padding`を広げても文字は広く表示されない\n\n### 記述する値によって設定できるパディングが変わる\n1. 1つの値を設定する\n\t- `上下左右`のパディングが同じだけ設定される\n\t```html\n\t<!-- 上下左右全て100px分のパディングが設定される -->\n\tpadding: 100px;\n\t```\n2. 2つの値を設定する\n\t- `上下`、`左右`のパディングが別々に設定される\n\t```html\n\t<!-- 上下:100px,左右:50pxのパディングが設定させる -->\n\tpadding: 100px 50px;\n\t```\n3. 3つの値を設定する\n\t- `上`、`左右`、`下`のパディングが別々に設定される\n\t```html\n\t<!-- 上:100px,左右:50px,下200pxのパディングが設定される -->\n\tpadding: 100px 50px 200px;\n\t```\n4. 個別に値を設定する\n\t- 上の３つとは少し記述の仕方が変わっる\n\t```html\n\t<!-- 明示的に設定する -->\n\tpadding-top: 100px;\n\tpadding-right: 100px;\n\tpadding-bottom: 50px;\n\tpadding-left: 100px;\n\t```\n\n## ボーダーについて\n- マージンとパディングの境界線の設定ができる\n\n### 記述する値によって設定できるボーダーが変わる\n1. 3つの値を設定する\n\t- `線の太さ`、`線の色`、`線の種類`を設定する\n\t```html\n\t<!-- 線の太さ:1px,線の色:黒,線の種類:実線-->\n\tborder: 1px black solid;\n\t```\n2. 各要素を別々にかつ、上下左右を変えて設定できる\n\t- 設定方法が細かくあるので、参考リンクだけを紹介する\n\n\t[w3schools border-style](https://www.w3schools.com/cssref/pr_border-style.asp)\n## ブラウザのデフォルトのマージンやパディングを無効にする\n```html\n<!-- bodyタグに対して設定する -->\nbodu{\n\tmargin: 0;\n\tpadding: 0;\n}\n```\n\n\n","source":"_posts/【CSS】マージン・パディング・ボーダーについて.md","raw":"---\ntitle: 【CSS】マージン・パディング・ボーダーについて\ndate: 2021-03-06 02:58:24\ntags:\n- CSS\n---\n## マージンについて\n- マージンとは日本語で`余白`\n- 要素の一番外側に位置する領域を意味する\n- `background-color`を設定している場合、色の領域は広がらない\n##  \n## マージンとマージンは相殺する\n`margin-bottom:20px`と`margin-top:30px`が上下に並んでいる場合、2つの要素の距離は２つの値を足した`50px`にはならず、`重なった部分のマージン`は重なったままになるので、結果は`30px`のマージンが取られた状態になる\n\n### 記述する値によって設定できるマージンが変わる\n1. 1つの値を設定する\n\t- `上下左右`のマージンが同じだけ設定される\n\t```html\n\t<!-- 上下左右全て100px分のマージンが設定される -->\n\tmargin: 100px;\n\t```\n2. 2つの値を設定する\n\t- `上下`、`左右`のマージンが別々に設定される\n\t```html\n\t<!-- 上下:100px,左右:50pxのマージンが設定させる -->\n\tmargin: 100px 50px;\n\t```\n3. 3つの値を設定する\n\t- `上`、`左右`、`下`のマージンが別々に設定される\n\t```html\n\t<!-- 上:100px,左右:50px,下200pxのマージンが設定される -->\n\tmargin: 100px 50px 200px;\n\t```\n4. 個別に値を設定する\n\t- 上の３つとは少し記述の仕方が変わっる\n\t```html\n\t<!-- 明示的に設定する -->\n\tmargin-top: 100px;\n\tmargin-right: 100px;\n\tmargin-bottom: 50px;\n\tmargin-left: 100px;\n\t```\n\n## パディングについて\n- マージンの１つ内側の余白を設定する\n- `background-color`を設定している場合、色の領域も広がる\n\n## width属性とpadding\n-`width`属性は`padding`のピクセル数に対する値ではなく、画面に対する値を設定している\n\t- なので、`padding`を広げても文字は広く表示されない\n\n### 記述する値によって設定できるパディングが変わる\n1. 1つの値を設定する\n\t- `上下左右`のパディングが同じだけ設定される\n\t```html\n\t<!-- 上下左右全て100px分のパディングが設定される -->\n\tpadding: 100px;\n\t```\n2. 2つの値を設定する\n\t- `上下`、`左右`のパディングが別々に設定される\n\t```html\n\t<!-- 上下:100px,左右:50pxのパディングが設定させる -->\n\tpadding: 100px 50px;\n\t```\n3. 3つの値を設定する\n\t- `上`、`左右`、`下`のパディングが別々に設定される\n\t```html\n\t<!-- 上:100px,左右:50px,下200pxのパディングが設定される -->\n\tpadding: 100px 50px 200px;\n\t```\n4. 個別に値を設定する\n\t- 上の３つとは少し記述の仕方が変わっる\n\t```html\n\t<!-- 明示的に設定する -->\n\tpadding-top: 100px;\n\tpadding-right: 100px;\n\tpadding-bottom: 50px;\n\tpadding-left: 100px;\n\t```\n\n## ボーダーについて\n- マージンとパディングの境界線の設定ができる\n\n### 記述する値によって設定できるボーダーが変わる\n1. 3つの値を設定する\n\t- `線の太さ`、`線の色`、`線の種類`を設定する\n\t```html\n\t<!-- 線の太さ:1px,線の色:黒,線の種類:実線-->\n\tborder: 1px black solid;\n\t```\n2. 各要素を別々にかつ、上下左右を変えて設定できる\n\t- 設定方法が細かくあるので、参考リンクだけを紹介する\n\n\t[w3schools border-style](https://www.w3schools.com/cssref/pr_border-style.asp)\n## ブラウザのデフォルトのマージンやパディングを無効にする\n```html\n<!-- bodyタグに対して設定する -->\nbodu{\n\tmargin: 0;\n\tpadding: 0;\n}\n```\n\n\n","slug":"【CSS】マージン・パディング・ボーダーについて","published":1,"updated":"2021-03-05T17:58:36.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3880011mzb6hzlxc0g4","content":"<h2><span id=\"マージンについて\">マージンについて</span></h2><ul>\n<li>マージンとは日本語で<code>余白</code></li>\n<li>要素の一番外側に位置する領域を意味する</li>\n<li><code>background-color</code>を設定している場合、色の領域は広がらない<h2><span id></span></h2><h2><span id=\"マージンとマージンは相殺する\">マージンとマージンは相殺する</span></h2><code>margin-bottom:20px</code>と<code>margin-top:30px</code>が上下に並んでいる場合、2つの要素の距離は２つの値を足した<code>50px</code>にはならず、<code>重なった部分のマージン</code>は重なったままになるので、結果は<code>30px</code>のマージンが取られた状態になる</li>\n</ul>\n<h3><span id=\"記述する値によって設定できるマージンが変わる\">記述する値によって設定できるマージンが変わる</span></h3><ol>\n<li>1つの値を設定する<ul>\n<li><code>上下左右</code>のマージンが同じだけ設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上下左右全て100px分のマージンが設定される --&gt;</span></span><br><span class=\"line\">margin: 100px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>2つの値を設定する<ul>\n<li><code>上下</code>、<code>左右</code>のマージンが別々に設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上下:100px,左右:50pxのマージンが設定させる --&gt;</span></span><br><span class=\"line\">margin: 100px 50px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>3つの値を設定する<ul>\n<li><code>上</code>、<code>左右</code>、<code>下</code>のマージンが別々に設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上:100px,左右:50px,下200pxのマージンが設定される --&gt;</span></span><br><span class=\"line\">margin: 100px 50px 200px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>個別に値を設定する<ul>\n<li>上の３つとは少し記述の仕方が変わっる<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 明示的に設定する --&gt;</span></span><br><span class=\"line\">margin-top: 100px;</span><br><span class=\"line\">margin-right: 100px;</span><br><span class=\"line\">margin-bottom: 50px;</span><br><span class=\"line\">margin-left: 100px;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"パディングについて\">パディングについて</span></h2></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>マージンの１つ内側の余白を設定する</li>\n<li><code>background-color</code>を設定している場合、色の領域も広がる</li>\n</ul>\n<h2><span id=\"width属性とpadding\">width属性とpadding</span></h2><p>-<code>width</code>属性は<code>padding</code>のピクセル数に対する値ではなく、画面に対する値を設定している<br>    - なので、<code>padding</code>を広げても文字は広く表示されない</p>\n<h3><span id=\"記述する値によって設定できるパディングが変わる\">記述する値によって設定できるパディングが変わる</span></h3><ol>\n<li>1つの値を設定する<ul>\n<li><code>上下左右</code>のパディングが同じだけ設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上下左右全て100px分のパディングが設定される --&gt;</span></span><br><span class=\"line\">padding: 100px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>2つの値を設定する<ul>\n<li><code>上下</code>、<code>左右</code>のパディングが別々に設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上下:100px,左右:50pxのパディングが設定させる --&gt;</span></span><br><span class=\"line\">padding: 100px 50px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>3つの値を設定する<ul>\n<li><code>上</code>、<code>左右</code>、<code>下</code>のパディングが別々に設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上:100px,左右:50px,下200pxのパディングが設定される --&gt;</span></span><br><span class=\"line\">padding: 100px 50px 200px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>個別に値を設定する<ul>\n<li>上の３つとは少し記述の仕方が変わっる<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 明示的に設定する --&gt;</span></span><br><span class=\"line\">padding-top: 100px;</span><br><span class=\"line\">padding-right: 100px;</span><br><span class=\"line\">padding-bottom: 50px;</span><br><span class=\"line\">padding-left: 100px;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"ボーダーについて\">ボーダーについて</span></h2></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>マージンとパディングの境界線の設定ができる</li>\n</ul>\n<h3><span id=\"記述する値によって設定できるボーダーが変わる\">記述する値によって設定できるボーダーが変わる</span></h3><ol>\n<li><p>3つの値を設定する</p>\n<ul>\n<li><code>線の太さ</code>、<code>線の色</code>、<code>線の種類</code>を設定する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 線の太さ:1px,線の色:黒,線の種類:実線--&gt;</span></span><br><span class=\"line\">border: 1px black solid;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>各要素を別々にかつ、上下左右を変えて設定できる</p>\n<ul>\n<li><p>設定方法が細かくあるので、参考リンクだけを紹介する</p>\n<p><a href=\"https://www.w3schools.com/cssref/pr_border-style.asp\">w3schools border-style</a></p>\n<h2><span id=\"ブラウザのデフォルトのマージンやパディングを無効にする\">ブラウザのデフォルトのマージンやパディングを無効にする</span></h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bodyタグに対して設定する --&gt;</span></span><br><span class=\"line\">bodu&#123;</span><br><span class=\"line\">\tmargin: 0;</span><br><span class=\"line\">\tpadding: 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"マージンについて\"><a href=\"#マージンについて\" class=\"headerlink\" title=\"マージンについて\"></a>マージンについて</h2><ul>\n<li>マージンとは日本語で<code>余白</code></li>\n<li>要素の一番外側に位置する領域を意味する</li>\n<li><code>background-color</code>を設定している場合、色の領域は広がらない<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h2 id=\"マージンとマージンは相殺する\"><a href=\"#マージンとマージンは相殺する\" class=\"headerlink\" title=\"マージンとマージンは相殺する\"></a>マージンとマージンは相殺する</h2><code>margin-bottom:20px</code>と<code>margin-top:30px</code>が上下に並んでいる場合、2つの要素の距離は２つの値を足した<code>50px</code>にはならず、<code>重なった部分のマージン</code>は重なったままになるので、結果は<code>30px</code>のマージンが取られた状態になる</li>\n</ul>\n<h3 id=\"記述する値によって設定できるマージンが変わる\"><a href=\"#記述する値によって設定できるマージンが変わる\" class=\"headerlink\" title=\"記述する値によって設定できるマージンが変わる\"></a>記述する値によって設定できるマージンが変わる</h3><ol>\n<li>1つの値を設定する<ul>\n<li><code>上下左右</code>のマージンが同じだけ設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上下左右全て100px分のマージンが設定される --&gt;</span></span><br><span class=\"line\">margin: 100px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>2つの値を設定する<ul>\n<li><code>上下</code>、<code>左右</code>のマージンが別々に設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上下:100px,左右:50pxのマージンが設定させる --&gt;</span></span><br><span class=\"line\">margin: 100px 50px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>3つの値を設定する<ul>\n<li><code>上</code>、<code>左右</code>、<code>下</code>のマージンが別々に設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上:100px,左右:50px,下200pxのマージンが設定される --&gt;</span></span><br><span class=\"line\">margin: 100px 50px 200px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>個別に値を設定する<ul>\n<li>上の３つとは少し記述の仕方が変わっる<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 明示的に設定する --&gt;</span></span><br><span class=\"line\">margin-top: 100px;</span><br><span class=\"line\">margin-right: 100px;</span><br><span class=\"line\">margin-bottom: 50px;</span><br><span class=\"line\">margin-left: 100px;</span><br></pre></td></tr></table></figure>\n<h2 id=\"パディングについて\"><a href=\"#パディングについて\" class=\"headerlink\" title=\"パディングについて\"></a>パディングについて</h2></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>マージンの１つ内側の余白を設定する</li>\n<li><code>background-color</code>を設定している場合、色の領域も広がる</li>\n</ul>\n<h2 id=\"width属性とpadding\"><a href=\"#width属性とpadding\" class=\"headerlink\" title=\"width属性とpadding\"></a>width属性とpadding</h2><p>-<code>width</code>属性は<code>padding</code>のピクセル数に対する値ではなく、画面に対する値を設定している<br>    - なので、<code>padding</code>を広げても文字は広く表示されない</p>\n<h3 id=\"記述する値によって設定できるパディングが変わる\"><a href=\"#記述する値によって設定できるパディングが変わる\" class=\"headerlink\" title=\"記述する値によって設定できるパディングが変わる\"></a>記述する値によって設定できるパディングが変わる</h3><ol>\n<li>1つの値を設定する<ul>\n<li><code>上下左右</code>のパディングが同じだけ設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上下左右全て100px分のパディングが設定される --&gt;</span></span><br><span class=\"line\">padding: 100px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>2つの値を設定する<ul>\n<li><code>上下</code>、<code>左右</code>のパディングが別々に設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上下:100px,左右:50pxのパディングが設定させる --&gt;</span></span><br><span class=\"line\">padding: 100px 50px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>3つの値を設定する<ul>\n<li><code>上</code>、<code>左右</code>、<code>下</code>のパディングが別々に設定される<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 上:100px,左右:50px,下200pxのパディングが設定される --&gt;</span></span><br><span class=\"line\">padding: 100px 50px 200px;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>個別に値を設定する<ul>\n<li>上の３つとは少し記述の仕方が変わっる<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 明示的に設定する --&gt;</span></span><br><span class=\"line\">padding-top: 100px;</span><br><span class=\"line\">padding-right: 100px;</span><br><span class=\"line\">padding-bottom: 50px;</span><br><span class=\"line\">padding-left: 100px;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ボーダーについて\"><a href=\"#ボーダーについて\" class=\"headerlink\" title=\"ボーダーについて\"></a>ボーダーについて</h2></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>マージンとパディングの境界線の設定ができる</li>\n</ul>\n<h3 id=\"記述する値によって設定できるボーダーが変わる\"><a href=\"#記述する値によって設定できるボーダーが変わる\" class=\"headerlink\" title=\"記述する値によって設定できるボーダーが変わる\"></a>記述する値によって設定できるボーダーが変わる</h3><ol>\n<li><p>3つの値を設定する</p>\n<ul>\n<li><code>線の太さ</code>、<code>線の色</code>、<code>線の種類</code>を設定する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 線の太さ:1px,線の色:黒,線の種類:実線--&gt;</span></span><br><span class=\"line\">border: 1px black solid;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>各要素を別々にかつ、上下左右を変えて設定できる</p>\n<ul>\n<li><p>設定方法が細かくあるので、参考リンクだけを紹介する</p>\n<p><a href=\"https://www.w3schools.com/cssref/pr_border-style.asp\">w3schools border-style</a></p>\n<h2 id=\"ブラウザのデフォルトのマージンやパディングを無効にする\"><a href=\"#ブラウザのデフォルトのマージンやパディングを無効にする\" class=\"headerlink\" title=\"ブラウザのデフォルトのマージンやパディングを無効にする\"></a>ブラウザのデフォルトのマージンやパディングを無効にする</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bodyタグに対して設定する --&gt;</span></span><br><span class=\"line\">bodu&#123;</span><br><span class=\"line\">\tmargin: 0;</span><br><span class=\"line\">\tpadding: 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ol>\n"},{"title":"【Git】HEAD^を指定したときに「no matches found/ HEAD^」が出る時の対処法","date":"2021-03-20T20:44:10.000Z","_content":"## 目次\n<!-- toc -->\n<!-- more -->\n\n## 原因\nzshの設定が問題らしく、設定ファイル(.zshrc)に`setopt extended_glob`を記述している場合に起こる。\n\n### setopt extended_globとはなにか\n除外パターン、大文字小文字同一視などの、拡張表記が可能になる。詳しくは以下リンク先のサイトがわかりやすかった。\n- https://gihyo.jp/dev/serial/01/zsh-book/0004\n\n## 解決策\n### エスケープシーケンスを使用する\n\n```shell-session\ngit checkout HEAD\\^\n```\n","source":"_posts/【Git】HEAD-を指定したときに「no-matches-found-HEAD-」が出る時の対処法.md","raw":"---\ntitle: 【Git】HEAD^を指定したときに「no matches found/ HEAD^」が出る時の対処法\ndate: 2021-03-21 05:44:10\ntags:\n- Git\n---\n## 目次\n<!-- toc -->\n<!-- more -->\n\n## 原因\nzshの設定が問題らしく、設定ファイル(.zshrc)に`setopt extended_glob`を記述している場合に起こる。\n\n### setopt extended_globとはなにか\n除外パターン、大文字小文字同一視などの、拡張表記が可能になる。詳しくは以下リンク先のサイトがわかりやすかった。\n- https://gihyo.jp/dev/serial/01/zsh-book/0004\n\n## 解決策\n### エスケープシーケンスを使用する\n\n```shell-session\ngit checkout HEAD\\^\n```\n","slug":"【Git】HEAD-を指定したときに「no-matches-found-HEAD-」が出る時の対処法","published":1,"updated":"2021-03-25T16:52:08.951Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3880013mzb62xnb7ly8","content":"<h2><span id=\"目次\">目次</span></h2><!-- toc -->\n\n<ul>\n<li><a href=\"#%E5%8E%9F%E5%9B%A0\">原因</a><ul>\n<li><a href=\"#setopt-extended_glob%E3%81%A8%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\">setopt extended_globとはなにか</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96\">解決策</a><ul>\n<li><a href=\"#%E3%82%A8%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%97%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B\">エスケープシーケンスを使用する</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h2><span id=\"原因\">原因</span></h2><p>zshの設定が問題らしく、設定ファイル(.zshrc)に<code>setopt extended_glob</code>を記述している場合に起こる。</p>\n<h3><span id=\"setopt-extended_globとはなにか\">setopt extended_globとはなにか</span></h3><p>除外パターン、大文字小文字同一視などの、拡張表記が可能になる。詳しくは以下リンク先のサイトがわかりやすかった。</p>\n<ul>\n<li><a href=\"https://gihyo.jp/dev/serial/01/zsh-book/0004\">https://gihyo.jp/dev/serial/01/zsh-book/0004</a></li>\n</ul>\n<h2><span id=\"解決策\">解決策</span></h2><h3><span id=\"エスケープシーケンスを使用する\">エスケープシーケンスを使用する</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout HEAD\\^</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><!-- toc -->\n\n<ul>\n<li><a href=\"#%E5%8E%9F%E5%9B%A0\">原因</a><ul>\n<li><a href=\"#setopt-extended_glob%E3%81%A8%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\">setopt extended_globとはなにか</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96\">解決策</a><ul>\n<li><a href=\"#%E3%82%A8%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%97%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B\">エスケープシーケンスを使用する</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>zshの設定が問題らしく、設定ファイル(.zshrc)に<code>setopt extended_glob</code>を記述している場合に起こる。</p>\n<h3 id=\"setopt-extended-globとはなにか\"><a href=\"#setopt-extended-globとはなにか\" class=\"headerlink\" title=\"setopt extended_globとはなにか\"></a>setopt extended_globとはなにか</h3><p>除外パターン、大文字小文字同一視などの、拡張表記が可能になる。詳しくは以下リンク先のサイトがわかりやすかった。</p>\n<ul>\n<li><a href=\"https://gihyo.jp/dev/serial/01/zsh-book/0004\">https://gihyo.jp/dev/serial/01/zsh-book/0004</a></li>\n</ul>\n<h2 id=\"解決策\"><a href=\"#解決策\" class=\"headerlink\" title=\"解決策\"></a>解決策</h2><h3 id=\"エスケープシーケンスを使用する\"><a href=\"#エスケープシーケンスを使用する\" class=\"headerlink\" title=\"エスケープシーケンスを使用する\"></a>エスケープシーケンスを使用する</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout HEAD\\^</span><br></pre></td></tr></table></figure>"},{"title":"【CSS】positionプロパティについて","date":"2021-03-04T15:50:20.000Z","_content":"# postion属性とは\n- 要素の位置を指定するための属性\n\n## 指定する方法の種類\n1. relative : 相対位置への配置\n\t- その要素が本来配置される位置からの相対位置\n2. absolute : 絶対位置への配置\n\t- 画面上の座標\n3. fixed : 絶対位置への配置 + スクロールされても位置が固定\n\n## 指定方法\n1. まずは位置の指定方法を記述する\n```html\nposition: relative;\n```\n2. どちらの方向にどれだけ動かすかを指定する\n```html\ntop: 200px;\n```\n\nまとめると\n```html\n.test{\n\tposition: relative;\n\ttop: 200px;\n}\n```\n\n## relativeとabsoluteの違い\n### イメージ\nコード\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>position</title>\n\t\t\t<style type=\"text/css\">\n\n\t\t\t\t.first-section{\n\t\t\t\t\tbackground: lightgreen;\n\t\t\t\t\twidth: 100px;\n\t\t\t\t\theight: 100px;\n\t\t\t\t\tposition:relative;\n\t\t\t\t\tleft:200px;\n\t\t\t\t\ttop:200px;\n\t\t\t\t}\n\t\t\t\t.second-section{\n\t\t\t\t\tbackground: pink;\n\t\t\t\t\twidth: 100px;\n\t\t\t\t\theight: 100px;\n\t\t\t\t\tposition:absolute;\n\t\t\t\t\tleft:200px;\n\t\t\t\t\ttop:200px;\n\t\t\t\t}\n\t\t\t\t.third-section{\n\t\t\t\t\tbackground: red;\n\t\t\t\t\twidth: 100px;\n\t\t\t\t\theight: 100px;\n\t\t\t\t\tposition:fixed;\n\t\t\t\t\tleft:400px;\n\t\t\t\t\ttop:400px;\n\t\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<p>a</p>\n\t\t<p>a</p>\n\t\t<p>a</p>\n\t\t<p>a</p>\n\t\t<p>a</p>\n\t\t<div class=\"first-section\">\n\t\t\t<p>1</p>\n\t\t</div>\n\t\t<div class=\"second-section\">\n\t\t\t<p>2</p>\n\t\t</div>\n\t\t<div class=\"third-section\">\n\t\t\t<p>3</p>\n\t\t</div>\n\t</body>\n</html>\n```\n\n![参考](/2021/03/05/【CSS】positionプロパティについて/position.png \"参考\")\n\n# 便利な属性\n\n## 奥行きの指定\n`z-index`属性を使って指定する\n\t- 大きい値を設定したスタイルを適応した要素が上に描画される\n```html\n.test{\n\tposition: relative;\n\ttop: 200px;\n\tz-index: 1;\n}\n\n.test2{ <!--こっちが上に表示させる-->\n\tposition: relative;\n\ttop: 200px;\n\tz-index: 2;\n}\n```\n\n## 透明度の指定\n- `opacity`属性を使って`0~1`までの間で指定する\n```html\n.test{\n\tposition: relative;\n\ttop: 200px;\n\topasity: 0.5; <!--透明度を指定-->\n}\n```\n","source":"_posts/【CSS】positionプロパティについて.md","raw":"---\ntitle: 【CSS】positionプロパティについて\ndate: 2021-03-05 00:50:20\ntags:\n- CSS\n---\n# postion属性とは\n- 要素の位置を指定するための属性\n\n## 指定する方法の種類\n1. relative : 相対位置への配置\n\t- その要素が本来配置される位置からの相対位置\n2. absolute : 絶対位置への配置\n\t- 画面上の座標\n3. fixed : 絶対位置への配置 + スクロールされても位置が固定\n\n## 指定方法\n1. まずは位置の指定方法を記述する\n```html\nposition: relative;\n```\n2. どちらの方向にどれだけ動かすかを指定する\n```html\ntop: 200px;\n```\n\nまとめると\n```html\n.test{\n\tposition: relative;\n\ttop: 200px;\n}\n```\n\n## relativeとabsoluteの違い\n### イメージ\nコード\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>position</title>\n\t\t\t<style type=\"text/css\">\n\n\t\t\t\t.first-section{\n\t\t\t\t\tbackground: lightgreen;\n\t\t\t\t\twidth: 100px;\n\t\t\t\t\theight: 100px;\n\t\t\t\t\tposition:relative;\n\t\t\t\t\tleft:200px;\n\t\t\t\t\ttop:200px;\n\t\t\t\t}\n\t\t\t\t.second-section{\n\t\t\t\t\tbackground: pink;\n\t\t\t\t\twidth: 100px;\n\t\t\t\t\theight: 100px;\n\t\t\t\t\tposition:absolute;\n\t\t\t\t\tleft:200px;\n\t\t\t\t\ttop:200px;\n\t\t\t\t}\n\t\t\t\t.third-section{\n\t\t\t\t\tbackground: red;\n\t\t\t\t\twidth: 100px;\n\t\t\t\t\theight: 100px;\n\t\t\t\t\tposition:fixed;\n\t\t\t\t\tleft:400px;\n\t\t\t\t\ttop:400px;\n\t\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<p>a</p>\n\t\t<p>a</p>\n\t\t<p>a</p>\n\t\t<p>a</p>\n\t\t<p>a</p>\n\t\t<div class=\"first-section\">\n\t\t\t<p>1</p>\n\t\t</div>\n\t\t<div class=\"second-section\">\n\t\t\t<p>2</p>\n\t\t</div>\n\t\t<div class=\"third-section\">\n\t\t\t<p>3</p>\n\t\t</div>\n\t</body>\n</html>\n```\n\n![参考](/2021/03/05/【CSS】positionプロパティについて/position.png \"参考\")\n\n# 便利な属性\n\n## 奥行きの指定\n`z-index`属性を使って指定する\n\t- 大きい値を設定したスタイルを適応した要素が上に描画される\n```html\n.test{\n\tposition: relative;\n\ttop: 200px;\n\tz-index: 1;\n}\n\n.test2{ <!--こっちが上に表示させる-->\n\tposition: relative;\n\ttop: 200px;\n\tz-index: 2;\n}\n```\n\n## 透明度の指定\n- `opacity`属性を使って`0~1`までの間で指定する\n```html\n.test{\n\tposition: relative;\n\ttop: 200px;\n\topasity: 0.5; <!--透明度を指定-->\n}\n```\n","slug":"【CSS】positionプロパティについて","published":1,"updated":"2021-03-05T17:55:36.794Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3890015mzb61rjq7ay8","content":"<h1><span id=\"postion属性とは\">postion属性とは</span></h1><ul>\n<li>要素の位置を指定するための属性</li>\n</ul>\n<h2><span id=\"指定する方法の種類\">指定する方法の種類</span></h2><ol>\n<li>relative : 相対位置への配置<ul>\n<li>その要素が本来配置される位置からの相対位置</li>\n</ul>\n</li>\n<li>absolute : 絶対位置への配置<ul>\n<li>画面上の座標</li>\n</ul>\n</li>\n<li>fixed : 絶対位置への配置 + スクロールされても位置が固定</li>\n</ol>\n<h2><span id=\"指定方法\">指定方法</span></h2><ol>\n<li>まずは位置の指定方法を記述する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">position: relative;</span><br></pre></td></tr></table></figure></li>\n<li>どちらの方向にどれだけ動かすかを指定する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top: 200px;</span><br></pre></td></tr></table></figure>\nまとめると<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.test&#123;</span><br><span class=\"line\">\tposition: relative;</span><br><span class=\"line\">\ttop: 200px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"relativeとabsoluteの違い\">relativeとabsoluteの違い</span></h2><h3><span id=\"イメージ\">イメージ</span></h3>コード<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>position<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t<span class=\"selector-class\">.first-section</span>&#123;</span></span><br><span class=\"line\">\t\t\t\t\tbackground: lightgreen;</span><br><span class=\"line\">\t\t\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\t\t\theight: 100px;</span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">position</span><span class=\"selector-pseudo\">:relative</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:200px</span>;</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"><span class=\"css\">\t\t\t\t<span class=\"selector-class\">.second-section</span>&#123;</span></span><br><span class=\"line\">\t\t\t\t\tbackground: pink;</span><br><span class=\"line\">\t\t\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\t\t\theight: 100px;</span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">position</span><span class=\"selector-pseudo\">:absolute</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:200px</span>;</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"><span class=\"css\">\t\t\t\t<span class=\"selector-class\">.third-section</span>&#123;</span></span><br><span class=\"line\">\t\t\t\t\tbackground: red;</span><br><span class=\"line\">\t\t\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\t\t\theight: 100px;</span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">position</span><span class=\"selector-pseudo\">:fixed</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:400px</span>;</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>a<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>a<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>a<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>a<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>a<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;first-section&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;second-section&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;third-section&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<img src=\"/2021/03/05/%E3%80%90CSS%E3%80%91position%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/position.png\" alt=\"参考\" title=\"参考\"></li>\n</ol>\n<h1><span id=\"便利な属性\">便利な属性</span></h1><h2><span id=\"奥行きの指定\">奥行きの指定</span></h2><p><code>z-index</code>属性を使って指定する<br>    - 大きい値を設定したスタイルを適応した要素が上に描画される</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.test&#123;</span><br><span class=\"line\">\tposition: relative;</span><br><span class=\"line\">\ttop: 200px;</span><br><span class=\"line\">\tz-index: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.test2&#123; <span class=\"comment\">&lt;!--こっちが上に表示させる--&gt;</span></span><br><span class=\"line\">\tposition: relative;</span><br><span class=\"line\">\ttop: 200px;</span><br><span class=\"line\">\tz-index: 2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"透明度の指定\">透明度の指定</span></h2><ul>\n<li><code>opacity</code>属性を使って<code>0~1</code>までの間で指定する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.test&#123;</span><br><span class=\"line\">\tposition: relative;</span><br><span class=\"line\">\ttop: 200px;</span><br><span class=\"line\">\topasity: 0.5; <span class=\"comment\">&lt;!--透明度を指定--&gt;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"postion属性とは\"><a href=\"#postion属性とは\" class=\"headerlink\" title=\"postion属性とは\"></a>postion属性とは</h1><ul>\n<li>要素の位置を指定するための属性</li>\n</ul>\n<h2 id=\"指定する方法の種類\"><a href=\"#指定する方法の種類\" class=\"headerlink\" title=\"指定する方法の種類\"></a>指定する方法の種類</h2><ol>\n<li>relative : 相対位置への配置<ul>\n<li>その要素が本来配置される位置からの相対位置</li>\n</ul>\n</li>\n<li>absolute : 絶対位置への配置<ul>\n<li>画面上の座標</li>\n</ul>\n</li>\n<li>fixed : 絶対位置への配置 + スクロールされても位置が固定</li>\n</ol>\n<h2 id=\"指定方法\"><a href=\"#指定方法\" class=\"headerlink\" title=\"指定方法\"></a>指定方法</h2><ol>\n<li>まずは位置の指定方法を記述する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">position: relative;</span><br></pre></td></tr></table></figure></li>\n<li>どちらの方向にどれだけ動かすかを指定する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top: 200px;</span><br></pre></td></tr></table></figure>\nまとめると<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.test&#123;</span><br><span class=\"line\">\tposition: relative;</span><br><span class=\"line\">\ttop: 200px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"relativeとabsoluteの違い\"><a href=\"#relativeとabsoluteの違い\" class=\"headerlink\" title=\"relativeとabsoluteの違い\"></a>relativeとabsoluteの違い</h2><h3 id=\"イメージ\"><a href=\"#イメージ\" class=\"headerlink\" title=\"イメージ\"></a>イメージ</h3>コード<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>position<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t<span class=\"selector-class\">.first-section</span>&#123;</span></span><br><span class=\"line\">\t\t\t\t\tbackground: lightgreen;</span><br><span class=\"line\">\t\t\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\t\t\theight: 100px;</span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">position</span><span class=\"selector-pseudo\">:relative</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:200px</span>;</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"><span class=\"css\">\t\t\t\t<span class=\"selector-class\">.second-section</span>&#123;</span></span><br><span class=\"line\">\t\t\t\t\tbackground: pink;</span><br><span class=\"line\">\t\t\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\t\t\theight: 100px;</span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">position</span><span class=\"selector-pseudo\">:absolute</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:200px</span>;</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"><span class=\"css\">\t\t\t\t<span class=\"selector-class\">.third-section</span>&#123;</span></span><br><span class=\"line\">\t\t\t\t\tbackground: red;</span><br><span class=\"line\">\t\t\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\t\t\theight: 100px;</span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">position</span><span class=\"selector-pseudo\">:fixed</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t<span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:400px</span>;</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>a<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>a<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>a<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>a<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>a<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;first-section&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;second-section&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;third-section&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<img src=\"/2021/03/05/%E3%80%90CSS%E3%80%91position%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/position.png\" alt=\"参考\" title=\"参考\"></li>\n</ol>\n<h1 id=\"便利な属性\"><a href=\"#便利な属性\" class=\"headerlink\" title=\"便利な属性\"></a>便利な属性</h1><h2 id=\"奥行きの指定\"><a href=\"#奥行きの指定\" class=\"headerlink\" title=\"奥行きの指定\"></a>奥行きの指定</h2><p><code>z-index</code>属性を使って指定する<br>    - 大きい値を設定したスタイルを適応した要素が上に描画される</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.test&#123;</span><br><span class=\"line\">\tposition: relative;</span><br><span class=\"line\">\ttop: 200px;</span><br><span class=\"line\">\tz-index: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.test2&#123; <span class=\"comment\">&lt;!--こっちが上に表示させる--&gt;</span></span><br><span class=\"line\">\tposition: relative;</span><br><span class=\"line\">\ttop: 200px;</span><br><span class=\"line\">\tz-index: 2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"透明度の指定\"><a href=\"#透明度の指定\" class=\"headerlink\" title=\"透明度の指定\"></a>透明度の指定</h2><ul>\n<li><code>opacity</code>属性を使って<code>0~1</code>までの間で指定する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.test&#123;</span><br><span class=\"line\">\tposition: relative;</span><br><span class=\"line\">\ttop: 200px;</span><br><span class=\"line\">\topasity: 0.5; <span class=\"comment\">&lt;!--透明度を指定--&gt;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"【Git】Git独自のaliasを設定して長いコマンドを短くする","date":"2021-03-31T14:13:35.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 設定方法\n## 1. コマンドから設定する\nコマンドラインから、`git config`を使用して設定する方法\n\n```\ngit config --global alias.設定したいコマンド名 \"短くしたいコマンド\"\n```\n\n今回は、コミット履歴(log)をグラフ表示(--graph)しながら、一行(--oneline)ですべてのブランチ(--all)のコミットを表示するコマンドを`loga`として登録します。\n```shell-session\n$ git config --global alias.loga \"log --graph --oneline --all\"\n```\n\n## 2. configファイルを編集する\n設定ファイルを開くこまどで`.gitconfig`を開きます。\n\n```shell-session\n$ git config --global --edit \n```\n\n`[alias]`という記述がなければ一緒に追記してください。\n\n```shell-session\n[alias]\n\tloga = log --graph --oneline --all\n```\n","source":"_posts/【Git】Git独自のaliasを設定して長いコマンドを短くする.md","raw":"---\ntitle: 【Git】Git独自のaliasを設定して長いコマンドを短くする\ndate: 2021-03-31 23:13:35\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 設定方法\n## 1. コマンドから設定する\nコマンドラインから、`git config`を使用して設定する方法\n\n```\ngit config --global alias.設定したいコマンド名 \"短くしたいコマンド\"\n```\n\n今回は、コミット履歴(log)をグラフ表示(--graph)しながら、一行(--oneline)ですべてのブランチ(--all)のコミットを表示するコマンドを`loga`として登録します。\n```shell-session\n$ git config --global alias.loga \"log --graph --oneline --all\"\n```\n\n## 2. configファイルを編集する\n設定ファイルを開くこまどで`.gitconfig`を開きます。\n\n```shell-session\n$ git config --global --edit \n```\n\n`[alias]`という記述がなければ一緒に追記してください。\n\n```shell-session\n[alias]\n\tloga = log --graph --oneline --all\n```\n","slug":"【Git】Git独自のaliasを設定して長いコマンドを短くする","published":1,"updated":"2021-03-30T13:14:01.731Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3890017mzb67o9igc3k","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E6%96%B9%E6%B3%95\">設定方法</a><ul>\n<li><a href=\"#1-%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%8B%E3%82%89%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\">1. コマンドから設定する</a></li>\n<li><a href=\"#2-config%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%B7%A8%E9%9B%86%E3%81%99%E3%82%8B\">2. configファイルを編集する</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"設定方法\">設定方法</span></h1><h2><span id=\"1-コマンドから設定する\">1. コマンドから設定する</span></h2><p>コマンドラインから、<code>git config</code>を使用して設定する方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global alias.設定したいコマンド名 &quot;短くしたいコマンド&quot;</span><br></pre></td></tr></table></figure>\n<p>今回は、コミット履歴(log)をグラフ表示(–graph)しながら、一行(–oneline)ですべてのブランチ(–all)のコミットを表示するコマンドを<code>loga</code>として登録します。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global alias.loga &quot;log --graph --oneline --all&quot;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"2-configファイルを編集する\">2. configファイルを編集する</span></h2><p>設定ファイルを開くこまどで<code>.gitconfig</code>を開きます。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global --edit </span><br></pre></td></tr></table></figure>\n<p><code>[alias]</code>という記述がなければ一緒に追記してください。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[alias]</span><br><span class=\"line\">\tloga &#x3D; log --graph --oneline --all</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E6%96%B9%E6%B3%95\">設定方法</a><ul>\n<li><a href=\"#1-%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%8B%E3%82%89%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\">1. コマンドから設定する</a></li>\n<li><a href=\"#2-config%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%B7%A8%E9%9B%86%E3%81%99%E3%82%8B\">2. configファイルを編集する</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"設定方法\"><a href=\"#設定方法\" class=\"headerlink\" title=\"設定方法\"></a>設定方法</h1><h2 id=\"1-コマンドから設定する\"><a href=\"#1-コマンドから設定する\" class=\"headerlink\" title=\"1. コマンドから設定する\"></a>1. コマンドから設定する</h2><p>コマンドラインから、<code>git config</code>を使用して設定する方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global alias.設定したいコマンド名 &quot;短くしたいコマンド&quot;</span><br></pre></td></tr></table></figure>\n<p>今回は、コミット履歴(log)をグラフ表示(–graph)しながら、一行(–oneline)ですべてのブランチ(–all)のコミットを表示するコマンドを<code>loga</code>として登録します。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global alias.loga &quot;log --graph --oneline --all&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-configファイルを編集する\"><a href=\"#2-configファイルを編集する\" class=\"headerlink\" title=\"2. configファイルを編集する\"></a>2. configファイルを編集する</h2><p>設定ファイルを開くこまどで<code>.gitconfig</code>を開きます。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global --edit </span><br></pre></td></tr></table></figure>\n<p><code>[alias]</code>という記述がなければ一緒に追記してください。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[alias]</span><br><span class=\"line\">\tloga &#x3D; log --graph --oneline --all</span><br></pre></td></tr></table></figure>"},{"title":"【Git】add(staging)の必要性について","date":"2021-03-22T12:53:27.000Z","_content":"## 目次\n<!-- toc -->\n<!-- more -->\n\n## 何も意識せずに、Gitを使っているとすごい面倒くさい「git add」\nGitはバージョン管理ができるツールとして知っているが、初めてGitをプロジェクトに導入したとき、ただのちょっと機能が付属されたファイル共有ツールに成り下がってしまうケースがあったので、Gitの使う上で一番何故あるのか理解しづらい、`git add`の重要性について再度考え直すために、色々調べてまとめてみました。\n\n## なぜ、git addはなぜ必要なのか\n\n### Gitの思想\n- 更新したファイルすべてを`git add`して、それをcommit時のコメントで、細かく何を変更したかを書いていましたが、それは本来のgitの思想と乖離しています。 \n\n### バージョン管理の容易さ\n- Gitはバージョン管理ツールなので、バージョンの変更を簡単にできます。\nしかし、変更をまとめてコミットしてしまうと、コミットを探して変更した箇所を更に探す必要が出てきてしまうので、せっかくのバージョン管理の恩恵が薄くなってしまいます。\n\n前述の理由から、git add はファイル変更点を１変更１コミットにできるように、複数変更点があった場合の変更点の一時待機場所として、１つの変更だけをキャッシュするための場所として使用するためにあります。\n\n","source":"_posts/【Git】add-staging-の必要性について.md","raw":"---\ntitle: 【Git】add(staging)の必要性について\ndate: 2021-03-22 21:53:27\ntags:\n- Git\n---\n## 目次\n<!-- toc -->\n<!-- more -->\n\n## 何も意識せずに、Gitを使っているとすごい面倒くさい「git add」\nGitはバージョン管理ができるツールとして知っているが、初めてGitをプロジェクトに導入したとき、ただのちょっと機能が付属されたファイル共有ツールに成り下がってしまうケースがあったので、Gitの使う上で一番何故あるのか理解しづらい、`git add`の重要性について再度考え直すために、色々調べてまとめてみました。\n\n## なぜ、git addはなぜ必要なのか\n\n### Gitの思想\n- 更新したファイルすべてを`git add`して、それをcommit時のコメントで、細かく何を変更したかを書いていましたが、それは本来のgitの思想と乖離しています。 \n\n### バージョン管理の容易さ\n- Gitはバージョン管理ツールなので、バージョンの変更を簡単にできます。\nしかし、変更をまとめてコミットしてしまうと、コミットを探して変更した箇所を更に探す必要が出てきてしまうので、せっかくのバージョン管理の恩恵が薄くなってしまいます。\n\n前述の理由から、git add はファイル変更点を１変更１コミットにできるように、複数変更点があった場合の変更点の一時待機場所として、１つの変更だけをキャッシュするための場所として使用するためにあります。\n\n","slug":"【Git】add-staging-の必要性について","published":1,"updated":"2021-03-25T16:54:11.281Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh38a0019mzb6ecie85nw","content":"<h2><span id=\"目次\">目次</span></h2><!-- toc -->\n\n<ul>\n<li><a href=\"#%E4%BD%95%E3%82%82%E6%84%8F%E8%AD%98%E3%81%9B%E3%81%9A%E3%81%AB-git%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%A8%E3%81%99%E3%81%94%E3%81%84%E9%9D%A2%E5%80%92%E3%81%8F%E3%81%95%E3%81%84git-add\">何も意識せずに、Gitを使っているとすごい面倒くさい「git add」</a></li>\n<li><a href=\"#%E3%81%AA%E3%81%9C-git-add%E3%81%AF%E3%81%AA%E3%81%9C%E5%BF%85%E8%A6%81%E3%81%AA%E3%81%AE%E3%81%8B\">なぜ、git addはなぜ必要なのか</a><ul>\n<li><a href=\"#git%E3%81%AE%E6%80%9D%E6%83%B3\">Gitの思想</a></li>\n<li><a href=\"#%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%AE%A1%E7%90%86%E3%81%AE%E5%AE%B9%E6%98%93%E3%81%95\">バージョン管理の容易さ</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h2><span id=\"何も意識せずに-gitを使っているとすごい面倒くさいgit-add\">何も意識せずに、Gitを使っているとすごい面倒くさい「git add」</span></h2><p>Gitはバージョン管理ができるツールとして知っているが、初めてGitをプロジェクトに導入したとき、ただのちょっと機能が付属されたファイル共有ツールに成り下がってしまうケースがあったので、Gitの使う上で一番何故あるのか理解しづらい、<code>git add</code>の重要性について再度考え直すために、色々調べてまとめてみました。</p>\n<h2><span id=\"なぜ-git-addはなぜ必要なのか\">なぜ、git addはなぜ必要なのか</span></h2><h3><span id=\"gitの思想\">Gitの思想</span></h3><ul>\n<li>更新したファイルすべてを<code>git add</code>して、それをcommit時のコメントで、細かく何を変更したかを書いていましたが、それは本来のgitの思想と乖離しています。 </li>\n</ul>\n<h3><span id=\"バージョン管理の容易さ\">バージョン管理の容易さ</span></h3><ul>\n<li>Gitはバージョン管理ツールなので、バージョンの変更を簡単にできます。<br>しかし、変更をまとめてコミットしてしまうと、コミットを探して変更した箇所を更に探す必要が出てきてしまうので、せっかくのバージョン管理の恩恵が薄くなってしまいます。</li>\n</ul>\n<p>前述の理由から、git add はファイル変更点を１変更１コミットにできるように、複数変更点があった場合の変更点の一時待機場所として、１つの変更だけをキャッシュするための場所として使用するためにあります。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><!-- toc -->\n\n<ul>\n<li><a href=\"#%E4%BD%95%E3%82%82%E6%84%8F%E8%AD%98%E3%81%9B%E3%81%9A%E3%81%AB-git%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%A8%E3%81%99%E3%81%94%E3%81%84%E9%9D%A2%E5%80%92%E3%81%8F%E3%81%95%E3%81%84git-add\">何も意識せずに、Gitを使っているとすごい面倒くさい「git add」</a></li>\n<li><a href=\"#%E3%81%AA%E3%81%9C-git-add%E3%81%AF%E3%81%AA%E3%81%9C%E5%BF%85%E8%A6%81%E3%81%AA%E3%81%AE%E3%81%8B\">なぜ、git addはなぜ必要なのか</a><ul>\n<li><a href=\"#git%E3%81%AE%E6%80%9D%E6%83%B3\">Gitの思想</a></li>\n<li><a href=\"#%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%AE%A1%E7%90%86%E3%81%AE%E5%AE%B9%E6%98%93%E3%81%95\">バージョン管理の容易さ</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h2 id=\"何も意識せずに、Gitを使っているとすごい面倒くさい「git-add」\"><a href=\"#何も意識せずに、Gitを使っているとすごい面倒くさい「git-add」\" class=\"headerlink\" title=\"何も意識せずに、Gitを使っているとすごい面倒くさい「git add」\"></a>何も意識せずに、Gitを使っているとすごい面倒くさい「git add」</h2><p>Gitはバージョン管理ができるツールとして知っているが、初めてGitをプロジェクトに導入したとき、ただのちょっと機能が付属されたファイル共有ツールに成り下がってしまうケースがあったので、Gitの使う上で一番何故あるのか理解しづらい、<code>git add</code>の重要性について再度考え直すために、色々調べてまとめてみました。</p>\n<h2 id=\"なぜ、git-addはなぜ必要なのか\"><a href=\"#なぜ、git-addはなぜ必要なのか\" class=\"headerlink\" title=\"なぜ、git addはなぜ必要なのか\"></a>なぜ、git addはなぜ必要なのか</h2><h3 id=\"Gitの思想\"><a href=\"#Gitの思想\" class=\"headerlink\" title=\"Gitの思想\"></a>Gitの思想</h3><ul>\n<li>更新したファイルすべてを<code>git add</code>して、それをcommit時のコメントで、細かく何を変更したかを書いていましたが、それは本来のgitの思想と乖離しています。 </li>\n</ul>\n<h3 id=\"バージョン管理の容易さ\"><a href=\"#バージョン管理の容易さ\" class=\"headerlink\" title=\"バージョン管理の容易さ\"></a>バージョン管理の容易さ</h3><ul>\n<li>Gitはバージョン管理ツールなので、バージョンの変更を簡単にできます。<br>しかし、変更をまとめてコミットしてしまうと、コミットを探して変更した箇所を更に探す必要が出てきてしまうので、せっかくのバージョン管理の恩恵が薄くなってしまいます。</li>\n</ul>\n<p>前述の理由から、git add はファイル変更点を１変更１コミットにできるように、複数変更点があった場合の変更点の一時待機場所として、１つの変更だけをキャッシュするための場所として使用するためにあります。</p>"},{"title":"【Git】git-flowとGitHub-flowの違いについて","date":"2021-03-22T16:57:31.000Z","_content":"## 目次\n<!-- toc -->\n<!-- more -->\n\n## git-flow\n- `master`と`develop`ブランチは消去されることがない\n- `master`ブランチに含まれるのは、`製品としてリリースした`コード\n- `develop`ブランチに含まれるのは、今後リリースされる予定のコード\n\t- 開発途中ではあるが、単体の機能としてある程度完成されていたり、製品として組み込む予定ので完成している機能が組み込まれたブランチ\n\n## 最初はからのコミットか始める\n- `--allow-empty`スイッチを使用して、ファイルの無いコミットをする。\n\t- git-flowの`master`と`develop`ブランチの始点になるコミットになる\n\n## すべての機能の開発はdevelopブランチからの分岐によって開始する\n- 新機能開発時は新しいブランチを`develop`から分岐させて作成する\n- コードの組み込み準備が完了したら、`develp`にマージする\n\t- マージ時は`fast-forward merge`を行わないように`--no-ff`スイッチをつける\n- `develop`へのマージ後は使用していた`新機能開発ブランチ`を消去する\n\n## developブランチがリリースできる段階のクオリティになったらreleaseブランチにマージする\n- developブランチで`単体テスト`や`簡易的な結合テスト`が完了したら、developブランチを`release`ブランチを作成してそこにマージする\n- releaseブランチでは、最終テストやその他のバグの修正でコミットを追加することができる\n\t- 本格的なテストのバグ修正は`release`ブランチで行うことになる\n- すべてのコードの修正が終わり次第、`master`にマージする\n\t- `master`ブランチで表示されるコミットは、リリースしたコードのみ(修正コミットは入っていない)\n\t- マージ時は`fast-forward merge`を行わないように`--no-ff`スイッチをつける\n- `masterブランチ`のリリースコミットには`タグ`をつけることが規約で決まっている\n\n## リリース後の後始末\n- releaseブランチには、修正コミットが入っている可能性があるので、`developブランチ`へのコミットを`developブランチ`へマージする\n\t- マージ時は`fast-forward merge`を行わないように`--no-ff`スイッチをつける\n- `masterブランチ`,`developブランチ`にマージが完了した、`releaseブランチ`は消去する\n\n## リリース後に見つかったバグの修正はmasterブランチから分岐する\n- リリースしたコードを修正したい場合、masterブランチのリリースコミットから分岐したブランチを作成する\n - この時のブランチの名前は`hotfix-xxx`にするという規約がある\n- 修正後は、`masterブランチ`,`developブランチ`にマージを行い、`hotfix-xxx`ブランチは消去する\n\n","source":"_posts/【Git】git-flowとGitHub-flowの違いについて.md","raw":"---\ntitle: 【Git】git-flowとGitHub-flowの違いについて\ndate: 2021-03-23 01:57:31\ntags:\n- Git\n---\n## 目次\n<!-- toc -->\n<!-- more -->\n\n## git-flow\n- `master`と`develop`ブランチは消去されることがない\n- `master`ブランチに含まれるのは、`製品としてリリースした`コード\n- `develop`ブランチに含まれるのは、今後リリースされる予定のコード\n\t- 開発途中ではあるが、単体の機能としてある程度完成されていたり、製品として組み込む予定ので完成している機能が組み込まれたブランチ\n\n## 最初はからのコミットか始める\n- `--allow-empty`スイッチを使用して、ファイルの無いコミットをする。\n\t- git-flowの`master`と`develop`ブランチの始点になるコミットになる\n\n## すべての機能の開発はdevelopブランチからの分岐によって開始する\n- 新機能開発時は新しいブランチを`develop`から分岐させて作成する\n- コードの組み込み準備が完了したら、`develp`にマージする\n\t- マージ時は`fast-forward merge`を行わないように`--no-ff`スイッチをつける\n- `develop`へのマージ後は使用していた`新機能開発ブランチ`を消去する\n\n## developブランチがリリースできる段階のクオリティになったらreleaseブランチにマージする\n- developブランチで`単体テスト`や`簡易的な結合テスト`が完了したら、developブランチを`release`ブランチを作成してそこにマージする\n- releaseブランチでは、最終テストやその他のバグの修正でコミットを追加することができる\n\t- 本格的なテストのバグ修正は`release`ブランチで行うことになる\n- すべてのコードの修正が終わり次第、`master`にマージする\n\t- `master`ブランチで表示されるコミットは、リリースしたコードのみ(修正コミットは入っていない)\n\t- マージ時は`fast-forward merge`を行わないように`--no-ff`スイッチをつける\n- `masterブランチ`のリリースコミットには`タグ`をつけることが規約で決まっている\n\n## リリース後の後始末\n- releaseブランチには、修正コミットが入っている可能性があるので、`developブランチ`へのコミットを`developブランチ`へマージする\n\t- マージ時は`fast-forward merge`を行わないように`--no-ff`スイッチをつける\n- `masterブランチ`,`developブランチ`にマージが完了した、`releaseブランチ`は消去する\n\n## リリース後に見つかったバグの修正はmasterブランチから分岐する\n- リリースしたコードを修正したい場合、masterブランチのリリースコミットから分岐したブランチを作成する\n - この時のブランチの名前は`hotfix-xxx`にするという規約がある\n- 修正後は、`masterブランチ`,`developブランチ`にマージを行い、`hotfix-xxx`ブランチは消去する\n\n","slug":"【Git】git-flowとGitHub-flowの違いについて","published":1,"updated":"2021-03-25T16:58:21.941Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh38a001bmzb6h5hs2xp7","content":"<h2><span id=\"目次\">目次</span></h2><!-- toc -->\n\n<ul>\n<li><a href=\"#git-flow\">git-flow</a></li>\n<li><a href=\"#%E6%9C%80%E5%88%9D%E3%81%AF%E3%81%8B%E3%82%89%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%8B%E5%A7%8B%E3%82%81%E3%82%8B\">最初はからのコミットか始める</a></li>\n<li><a href=\"#%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AE%E6%A9%9F%E8%83%BD%E3%81%AE%E9%96%8B%E7%99%BA%E3%81%AFdevelop%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8B%E3%82%89%E3%81%AE%E5%88%86%E5%B2%90%E3%81%AB%E3%82%88%E3%81%A3%E3%81%A6%E9%96%8B%E5%A7%8B%E3%81%99%E3%82%8B\">すべての機能の開発はdevelopブランチからの分岐によって開始する</a></li>\n<li><a href=\"#develop%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8C%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E3%81%A7%E3%81%8D%E3%82%8B%E6%AE%B5%E9%9A%8E%E3%81%AE%E3%82%AF%E3%82%AA%E3%83%AA%E3%83%86%E3%82%A3%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%9F%E3%82%89release%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AB%E3%83%9E%E3%83%BC%E3%82%B8%E3%81%99%E3%82%8B\">developブランチがリリースできる段階のクオリティになったらreleaseブランチにマージする</a></li>\n<li><a href=\"#%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E5%BE%8C%E3%81%AE%E5%BE%8C%E5%A7%8B%E6%9C%AB\">リリース後の後始末</a></li>\n<li><a href=\"#%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E5%BE%8C%E3%81%AB%E8%A6%8B%E3%81%A4%E3%81%8B%E3%81%A3%E3%81%9F%E3%83%90%E3%82%B0%E3%81%AE%E4%BF%AE%E6%AD%A3%E3%81%AFmaster%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8B%E3%82%89%E5%88%86%E5%B2%90%E3%81%99%E3%82%8B\">リリース後に見つかったバグの修正はmasterブランチから分岐する</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h2><span id=\"git-flow\">git-flow</span></h2><ul>\n<li><code>master</code>と<code>develop</code>ブランチは消去されることがない</li>\n<li><code>master</code>ブランチに含まれるのは、<code>製品としてリリースした</code>コード</li>\n<li><code>develop</code>ブランチに含まれるのは、今後リリースされる予定のコード<ul>\n<li>開発途中ではあるが、単体の機能としてある程度完成されていたり、製品として組み込む予定ので完成している機能が組み込まれたブランチ</li>\n</ul>\n</li>\n</ul>\n<h2><span id=\"最初はからのコミットか始める\">最初はからのコミットか始める</span></h2><ul>\n<li><code>--allow-empty</code>スイッチを使用して、ファイルの無いコミットをする。<ul>\n<li>git-flowの<code>master</code>と<code>develop</code>ブランチの始点になるコミットになる</li>\n</ul>\n</li>\n</ul>\n<h2><span id=\"すべての機能の開発はdevelopブランチからの分岐によって開始する\">すべての機能の開発はdevelopブランチからの分岐によって開始する</span></h2><ul>\n<li>新機能開発時は新しいブランチを<code>develop</code>から分岐させて作成する</li>\n<li>コードの組み込み準備が完了したら、<code>develp</code>にマージする<ul>\n<li>マージ時は<code>fast-forward merge</code>を行わないように<code>--no-ff</code>スイッチをつける</li>\n</ul>\n</li>\n<li><code>develop</code>へのマージ後は使用していた<code>新機能開発ブランチ</code>を消去する</li>\n</ul>\n<h2><span id=\"developブランチがリリースできる段階のクオリティになったらreleaseブランチにマージする\">developブランチがリリースできる段階のクオリティになったらreleaseブランチにマージする</span></h2><ul>\n<li>developブランチで<code>単体テスト</code>や<code>簡易的な結合テスト</code>が完了したら、developブランチを<code>release</code>ブランチを作成してそこにマージする</li>\n<li>releaseブランチでは、最終テストやその他のバグの修正でコミットを追加することができる<ul>\n<li>本格的なテストのバグ修正は<code>release</code>ブランチで行うことになる</li>\n</ul>\n</li>\n<li>すべてのコードの修正が終わり次第、<code>master</code>にマージする<ul>\n<li><code>master</code>ブランチで表示されるコミットは、リリースしたコードのみ(修正コミットは入っていない)</li>\n<li>マージ時は<code>fast-forward merge</code>を行わないように<code>--no-ff</code>スイッチをつける</li>\n</ul>\n</li>\n<li><code>masterブランチ</code>のリリースコミットには<code>タグ</code>をつけることが規約で決まっている</li>\n</ul>\n<h2><span id=\"リリース後の後始末\">リリース後の後始末</span></h2><ul>\n<li>releaseブランチには、修正コミットが入っている可能性があるので、<code>developブランチ</code>へのコミットを<code>developブランチ</code>へマージする<ul>\n<li>マージ時は<code>fast-forward merge</code>を行わないように<code>--no-ff</code>スイッチをつける</li>\n</ul>\n</li>\n<li><code>masterブランチ</code>,<code>developブランチ</code>にマージが完了した、<code>releaseブランチ</code>は消去する</li>\n</ul>\n<h2><span id=\"リリース後に見つかったバグの修正はmasterブランチから分岐する\">リリース後に見つかったバグの修正はmasterブランチから分岐する</span></h2><ul>\n<li>リリースしたコードを修正したい場合、masterブランチのリリースコミットから分岐したブランチを作成する</li>\n<li>この時のブランチの名前は<code>hotfix-xxx</code>にするという規約がある</li>\n<li>修正後は、<code>masterブランチ</code>,<code>developブランチ</code>にマージを行い、<code>hotfix-xxx</code>ブランチは消去する</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><!-- toc -->\n\n<ul>\n<li><a href=\"#git-flow\">git-flow</a></li>\n<li><a href=\"#%E6%9C%80%E5%88%9D%E3%81%AF%E3%81%8B%E3%82%89%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%8B%E5%A7%8B%E3%82%81%E3%82%8B\">最初はからのコミットか始める</a></li>\n<li><a href=\"#%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AE%E6%A9%9F%E8%83%BD%E3%81%AE%E9%96%8B%E7%99%BA%E3%81%AFdevelop%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8B%E3%82%89%E3%81%AE%E5%88%86%E5%B2%90%E3%81%AB%E3%82%88%E3%81%A3%E3%81%A6%E9%96%8B%E5%A7%8B%E3%81%99%E3%82%8B\">すべての機能の開発はdevelopブランチからの分岐によって開始する</a></li>\n<li><a href=\"#develop%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8C%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E3%81%A7%E3%81%8D%E3%82%8B%E6%AE%B5%E9%9A%8E%E3%81%AE%E3%82%AF%E3%82%AA%E3%83%AA%E3%83%86%E3%82%A3%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%9F%E3%82%89release%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AB%E3%83%9E%E3%83%BC%E3%82%B8%E3%81%99%E3%82%8B\">developブランチがリリースできる段階のクオリティになったらreleaseブランチにマージする</a></li>\n<li><a href=\"#%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E5%BE%8C%E3%81%AE%E5%BE%8C%E5%A7%8B%E6%9C%AB\">リリース後の後始末</a></li>\n<li><a href=\"#%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E5%BE%8C%E3%81%AB%E8%A6%8B%E3%81%A4%E3%81%8B%E3%81%A3%E3%81%9F%E3%83%90%E3%82%B0%E3%81%AE%E4%BF%AE%E6%AD%A3%E3%81%AFmaster%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8B%E3%82%89%E5%88%86%E5%B2%90%E3%81%99%E3%82%8B\">リリース後に見つかったバグの修正はmasterブランチから分岐する</a></li>\n</ul>\n<!-- tocstop -->","more":"<h2 id=\"git-flow\"><a href=\"#git-flow\" class=\"headerlink\" title=\"git-flow\"></a>git-flow</h2><ul>\n<li><code>master</code>と<code>develop</code>ブランチは消去されることがない</li>\n<li><code>master</code>ブランチに含まれるのは、<code>製品としてリリースした</code>コード</li>\n<li><code>develop</code>ブランチに含まれるのは、今後リリースされる予定のコード<ul>\n<li>開発途中ではあるが、単体の機能としてある程度完成されていたり、製品として組み込む予定ので完成している機能が組み込まれたブランチ</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"最初はからのコミットか始める\"><a href=\"#最初はからのコミットか始める\" class=\"headerlink\" title=\"最初はからのコミットか始める\"></a>最初はからのコミットか始める</h2><ul>\n<li><code>--allow-empty</code>スイッチを使用して、ファイルの無いコミットをする。<ul>\n<li>git-flowの<code>master</code>と<code>develop</code>ブランチの始点になるコミットになる</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"すべての機能の開発はdevelopブランチからの分岐によって開始する\"><a href=\"#すべての機能の開発はdevelopブランチからの分岐によって開始する\" class=\"headerlink\" title=\"すべての機能の開発はdevelopブランチからの分岐によって開始する\"></a>すべての機能の開発はdevelopブランチからの分岐によって開始する</h2><ul>\n<li>新機能開発時は新しいブランチを<code>develop</code>から分岐させて作成する</li>\n<li>コードの組み込み準備が完了したら、<code>develp</code>にマージする<ul>\n<li>マージ時は<code>fast-forward merge</code>を行わないように<code>--no-ff</code>スイッチをつける</li>\n</ul>\n</li>\n<li><code>develop</code>へのマージ後は使用していた<code>新機能開発ブランチ</code>を消去する</li>\n</ul>\n<h2 id=\"developブランチがリリースできる段階のクオリティになったらreleaseブランチにマージする\"><a href=\"#developブランチがリリースできる段階のクオリティになったらreleaseブランチにマージする\" class=\"headerlink\" title=\"developブランチがリリースできる段階のクオリティになったらreleaseブランチにマージする\"></a>developブランチがリリースできる段階のクオリティになったらreleaseブランチにマージする</h2><ul>\n<li>developブランチで<code>単体テスト</code>や<code>簡易的な結合テスト</code>が完了したら、developブランチを<code>release</code>ブランチを作成してそこにマージする</li>\n<li>releaseブランチでは、最終テストやその他のバグの修正でコミットを追加することができる<ul>\n<li>本格的なテストのバグ修正は<code>release</code>ブランチで行うことになる</li>\n</ul>\n</li>\n<li>すべてのコードの修正が終わり次第、<code>master</code>にマージする<ul>\n<li><code>master</code>ブランチで表示されるコミットは、リリースしたコードのみ(修正コミットは入っていない)</li>\n<li>マージ時は<code>fast-forward merge</code>を行わないように<code>--no-ff</code>スイッチをつける</li>\n</ul>\n</li>\n<li><code>masterブランチ</code>のリリースコミットには<code>タグ</code>をつけることが規約で決まっている</li>\n</ul>\n<h2 id=\"リリース後の後始末\"><a href=\"#リリース後の後始末\" class=\"headerlink\" title=\"リリース後の後始末\"></a>リリース後の後始末</h2><ul>\n<li>releaseブランチには、修正コミットが入っている可能性があるので、<code>developブランチ</code>へのコミットを<code>developブランチ</code>へマージする<ul>\n<li>マージ時は<code>fast-forward merge</code>を行わないように<code>--no-ff</code>スイッチをつける</li>\n</ul>\n</li>\n<li><code>masterブランチ</code>,<code>developブランチ</code>にマージが完了した、<code>releaseブランチ</code>は消去する</li>\n</ul>\n<h2 id=\"リリース後に見つかったバグの修正はmasterブランチから分岐する\"><a href=\"#リリース後に見つかったバグの修正はmasterブランチから分岐する\" class=\"headerlink\" title=\"リリース後に見つかったバグの修正はmasterブランチから分岐する\"></a>リリース後に見つかったバグの修正はmasterブランチから分岐する</h2><ul>\n<li>リリースしたコードを修正したい場合、masterブランチのリリースコミットから分岐したブランチを作成する</li>\n<li>この時のブランチの名前は<code>hotfix-xxx</code>にするという規約がある</li>\n<li>修正後は、<code>masterブランチ</code>,<code>developブランチ</code>にマージを行い、<code>hotfix-xxx</code>ブランチは消去する</li>\n</ul>"},{"title":"【Git】git logの色々な表示のさせ方","date":"2021-03-25T15:42:00.000Z","_content":"## 目次\n<!-- toc -->\n<!-- more -->\n\n## はじめに\nここで紹介しているスイッチ(--から始まる文節)はすべて組み合わせて使用する事ができるので、適時用途にあった表示のさせ方で組み合わせるといいと思います。\n\n## この記事で紹介するスイッチ\n- `--oneline` : 短く表示する\n- `--stat` : 変更のあったファイル名と、ファイル数を表示する\n- `--graph`\t: 視覚的に表示する\n- `--all` : すべてのブランチを表示する\n\n## 普通に「git log」\n### 表示される内容\n- SHA1\n- ブランチのHEADの場合、ブランチの情報\n- コミットした`ユーザー名``メールアドレス`\n- コミットした日付\n- コミットメッセージ全文\n\n```shell-session\n$ git log \n\ncommit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -> master, beginning/master, beginning/HEAD)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 23:20:18 2021 +0900\n\n    A small update to readme.\n\ncommit 895ded5c28bfa9848f647eff1339dcc763f910d1\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 20:20:18 2021 +0900\n\n    Adding printf.\n\n    This is to make the output a little more human readable.\n\n    printf is part of BASH, and it works just like C's printf()\n    function.\n\ncommit 5ab2e41e28507359a1774e39be287406707d3ec8\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 09:20:18 2021 +0900\n\n    Adding two numbers.\n\ncommit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning/another_fix_branch)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 08:20:18 2021 +0900\n\n    Renaming c and d.\n\ncommit fd3bb1d565b69ca19832f8892030a40d6961076c\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 07:20:18 2021 +0900\n\n    Removed a and b.\n\ncommit 6e0d6f43f601fac104439dd778160aeef0ab9910\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Thu Mar 11 09:20:18 2021 +0900\n\n    Adding readme.txt\n\ncommit a343843ff5496451e855e4064a4c138cc7b3105e (tag: four_files_galore)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 9 09:20:18 2021 +0900\n\n    Adding four empty files.\n\ncommit 834601bc8cfa381dbb3ffc4a30245646194b297b\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 9 08:20:18 2021 +0900\n\n    Adding b variable.\n\ncommit 68d38c6348b0cf53655e01ef9c8238457b709c71\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 9 07:20:18 2021 +0900\n\n    This is the second commit.\n\ncommit d314c772bb58ed3d959bf658265986b7c50bcd61\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 9 05:20:18 2021 +0900\n\n    This is the first commit.\n```\n\n## 短く表示させる「git log --oneline」\n### 表示される内容\n- ７桁に短縮された`SHA1`\n- ブランチのHEADの場合、ブランチの情報\n- コミットコメント(１行目のみ)\n\n```shell-session\n$ git log --oneline\n\nc7cfec9 (HEAD -> master, beginning/master, beginning/HEAD) A small update to readme.\n895ded5 Adding printf.\n5ab2e41 Adding two numbers.\n004e3a3 (beginning/another_fix_branch) Renaming c and d.\nfd3bb1d Removed a and b.\n6e0d6f4 Adding readme.txt\na343843 (tag: four_files_galore) Adding four empty files.\n834601b Adding b variable.\n68d38c6 This is the second commit.\nd314c77 This is the first commit.\n```\n\n## 変更されたファイルを表示する「git log --stat」\n### 表示される内容\n- `git log`を使用したときに表示される情報\n- 変更されたファイル名とカウント\n\n```shell-session\n$ git log --stat\n\ncommit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -> master, beginning/master, beginning/HEAD)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 23:20:18 2021 +0900\n\n    A small update to readme.\n\n readme.txt | 1 +\n 1 file changed, 1 insertion(+)\n\ncommit 895ded5c28bfa9848f647eff1339dcc763f910d1\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 20:20:18 2021 +0900\n\n    Adding printf.\n\n    This is to make the output a little more human readable.\n\n    printf is part of BASH, and it works just like C's printf()\n    function.\n\n math.sh | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5ab2e41e28507359a1774e39be287406707d3ec8\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 09:20:18 2021 +0900\n\n    Adding two numbers.\n\n math.sh | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning/another_fix_branch)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 08:20:18 2021 +0900\n\n    Renaming c and d.\n\n c => another_rename | 0\n d => renamed_file   | 0\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit fd3bb1d565b69ca19832f8892030a40d6961076c\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 07:20:18 2021 +0900\n\n    Removed a and b.\n\n a | 0\n b | 0\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 6e0d6f43f601fac104439dd778160aeef0ab9910\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Thu Mar 11 09:20:18 2021 +0900\n\n    Adding readme.txt\n\n readme.txt | 1 +\n 1 file changed, 1 insertion(+)\n\ncommit a343843ff5496451e855e4064a4c138cc7b3105e (tag: four_files_galore)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 9 09:20:18 2021 +0900\n\n    Adding four empty files.\n\n a | 0\n b | 0\n\n...\n```\n\n## 短く表示させつつ、変更されたファイルを表示する「git log --oneline --stat」\n### 表示される内容\n- `git log --oneline`を使用したときに表示される情報\n- 変更されたファイル名とカウント\n\n```shell-session\n$  git log --oneline --stat\n\nc7cfec9 (HEAD -> master, beginning/master, beginning/HEAD) A small update to readme.\n readme.txt | 1 +\n 1 file changed, 1 insertion(+)\n895ded5 Adding printf.\n math.sh | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n5ab2e41 Adding two numbers.\n math.sh | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n004e3a3 (beginning/another_fix_branch) Renaming c and d.\n c => another_rename | 0\n d => renamed_file   | 0\n 2 files changed, 0 insertions(+), 0 deletions(-)\nfd3bb1d Removed a and b.\n a | 0\n b | 0\n 2 files changed, 0 insertions(+), 0 deletions(-)\n6e0d6f4 Adding readme.txt\n readme.txt | 1 +\n 1 file changed, 1 insertion(+)\na343843 (tag: four_files_galore) Adding four empty files.\n a | 0\n b | 0\n c | 0\n d | 0\n 4 files changed, 0 insertions(+), 0 deletions(-)\n834601b Adding b variable.\n math.sh | 1 +\n 1 file changed, 1 insertion(+)\n68d38c6 This is the second commit.\n math.sh | 1 +\n 1 file changed, 1 insertion(+)\nd314c77 This is the first commit.\n math.sh | 1 +\n 1 file changed, 1 insertion(+)\n```\n\n## 視覚的にわかりやすく表示する「git log --graph」\n### 表示される内容\n- `git log`を使用したときに表示される情報\n- コミットやブランチの流れを`ASCII`文字で表現する\n\n```shell-session\n$ git log --graph\n* commit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -> master, beginning/master, beginning/HEAD)\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Fri Mar 12 23:20:18 2021 +0900\n|\n|     A small update to readme.\n|\n* commit 895ded5c28bfa9848f647eff1339dcc763f910d1\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Fri Mar 12 20:20:18 2021 +0900\n|\n|     Adding printf.\n|\n|     This is to make the output a little more human readable.\n|\n|     printf is part of BASH, and it works just like C's printf()\n|     function.\n|\n* commit 5ab2e41e28507359a1774e39be287406707d3ec8\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Fri Mar 12 09:20:18 2021 +0900\n|\n|     Adding two numbers.\n|\n* commit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning/another_fix_branch)\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Fri Mar 12 08:20:18 2021 +0900\n|\n|     Renaming c and d.\n|\n* commit fd3bb1d565b69ca19832f8892030a40d6961076c\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Fri Mar 12 07:20:18 2021 +0900\n|\n|     Removed a and b.\n|\n* commit 6e0d6f43f601fac104439dd778160aeef0ab9910\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Thu Mar 11 09:20:18 2021 +0900\n|\n|     Adding readme.txt\n|\n...\n```\n\n## 短く視覚的に表示する「git log --oneline --graph」\n### 表示される内容\n- `git log --oneline`を使用したときに表示される情報\n- コミットやブランチの流れを`ASCII`文字で表現する\n\n```shell-session\n$ git log --oneline --graph\n\n* c7cfec9 (HEAD -> master, beginning/master, beginning/HEAD) A small update to readme.\n* 895ded5 Adding printf.\n* 5ab2e41 Adding two numbers.\n* 004e3a3 (beginning/another_fix_branch) Renaming c and d.\n* fd3bb1d Removed a and b.\n* 6e0d6f4 Adding readme.txt\n* a343843 (tag: four_files_galore) Adding four empty files.\n* 834601b Adding b variable.\n* 68d38c6 This is the second commit.\n* d314c77 This is the first commit.\n```\n\n## すべてのブランチを見る「git log --all」\n### 表示される内容\n- `git log`を使用したときに表示される情報\n- カレントブランチ以外のブランチのlogを一緒に表示する\n\n```shell-session\n$ git log --oneline --graph\n\ncommit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -> master, beginning/master, beginning/HEAD)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 23:20:18 2021 +0900\n\n    A small update to readme.\n\ncommit 91d6184f4c6da852bbcddf9d3c4155983a416d35 (beginning/new_feature)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 22:20:18 2021 +0900\n\n    Starting a second new file\n\ncommit af9aa8ef34be4a5f1c36eb06a560638cc730c814\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 21:20:18 2021 +0900\n\n    Adding a new file to a new branch\n\ncommit 895ded5c28bfa9848f647eff1339dcc763f910d1\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 20:20:18 2021 +0900\n\n    Adding printf.\n\n    This is to make the output a little more human readable.\n\n    printf is part of BASH, and it works just like C's printf()\n    function.\n\ncommit 5ab2e41e28507359a1774e39be287406707d3ec8\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 09:20:18 2021 +0900\n\n    Adding two numbers.\n\ncommit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning/another_fix_branch)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 08:20:18 2021 +0900\n\n    Renaming c and d.\n...\n```\n\n## 短く視覚的に表示する「git log --oneline --all」\n### 表示される内容\n- `git log --oneline`を使用したときに表示される情報\n- カレントブランチ以外のブランチのlogを一緒に表示する\n\n```shell-session\n$ git log --oneline --all\n\nc7cfec9 (HEAD -> master, beginning/master, beginning/HEAD) A small update to readme.\n91d6184 (beginning/new_feature) Starting a second new file\naf9aa8e Adding a new file to a new branch\n895ded5 Adding printf.\n5ab2e41 Adding two numbers.\n004e3a3 (beginning/another_fix_branch) Renaming c and d.\nfd3bb1d Removed a and b.\n6e0d6f4 Adding readme.txt\na343843 (tag: four_files_galore) Adding four empty files.\n834601b Adding b variable.\n68d38c6 This is the second commit.\nd314c77 This is the first commit.\n```\n","source":"_posts/【Git】git-logの色々な表示のさせ方.md","raw":"---\ntitle: 【Git】git logの色々な表示のさせ方\ndate: 2021-03-26 00:42:00\ntags:\n- Git\n---\n## 目次\n<!-- toc -->\n<!-- more -->\n\n## はじめに\nここで紹介しているスイッチ(--から始まる文節)はすべて組み合わせて使用する事ができるので、適時用途にあった表示のさせ方で組み合わせるといいと思います。\n\n## この記事で紹介するスイッチ\n- `--oneline` : 短く表示する\n- `--stat` : 変更のあったファイル名と、ファイル数を表示する\n- `--graph`\t: 視覚的に表示する\n- `--all` : すべてのブランチを表示する\n\n## 普通に「git log」\n### 表示される内容\n- SHA1\n- ブランチのHEADの場合、ブランチの情報\n- コミットした`ユーザー名``メールアドレス`\n- コミットした日付\n- コミットメッセージ全文\n\n```shell-session\n$ git log \n\ncommit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -> master, beginning/master, beginning/HEAD)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 23:20:18 2021 +0900\n\n    A small update to readme.\n\ncommit 895ded5c28bfa9848f647eff1339dcc763f910d1\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 20:20:18 2021 +0900\n\n    Adding printf.\n\n    This is to make the output a little more human readable.\n\n    printf is part of BASH, and it works just like C's printf()\n    function.\n\ncommit 5ab2e41e28507359a1774e39be287406707d3ec8\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 09:20:18 2021 +0900\n\n    Adding two numbers.\n\ncommit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning/another_fix_branch)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 08:20:18 2021 +0900\n\n    Renaming c and d.\n\ncommit fd3bb1d565b69ca19832f8892030a40d6961076c\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 07:20:18 2021 +0900\n\n    Removed a and b.\n\ncommit 6e0d6f43f601fac104439dd778160aeef0ab9910\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Thu Mar 11 09:20:18 2021 +0900\n\n    Adding readme.txt\n\ncommit a343843ff5496451e855e4064a4c138cc7b3105e (tag: four_files_galore)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 9 09:20:18 2021 +0900\n\n    Adding four empty files.\n\ncommit 834601bc8cfa381dbb3ffc4a30245646194b297b\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 9 08:20:18 2021 +0900\n\n    Adding b variable.\n\ncommit 68d38c6348b0cf53655e01ef9c8238457b709c71\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 9 07:20:18 2021 +0900\n\n    This is the second commit.\n\ncommit d314c772bb58ed3d959bf658265986b7c50bcd61\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 9 05:20:18 2021 +0900\n\n    This is the first commit.\n```\n\n## 短く表示させる「git log --oneline」\n### 表示される内容\n- ７桁に短縮された`SHA1`\n- ブランチのHEADの場合、ブランチの情報\n- コミットコメント(１行目のみ)\n\n```shell-session\n$ git log --oneline\n\nc7cfec9 (HEAD -> master, beginning/master, beginning/HEAD) A small update to readme.\n895ded5 Adding printf.\n5ab2e41 Adding two numbers.\n004e3a3 (beginning/another_fix_branch) Renaming c and d.\nfd3bb1d Removed a and b.\n6e0d6f4 Adding readme.txt\na343843 (tag: four_files_galore) Adding four empty files.\n834601b Adding b variable.\n68d38c6 This is the second commit.\nd314c77 This is the first commit.\n```\n\n## 変更されたファイルを表示する「git log --stat」\n### 表示される内容\n- `git log`を使用したときに表示される情報\n- 変更されたファイル名とカウント\n\n```shell-session\n$ git log --stat\n\ncommit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -> master, beginning/master, beginning/HEAD)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 23:20:18 2021 +0900\n\n    A small update to readme.\n\n readme.txt | 1 +\n 1 file changed, 1 insertion(+)\n\ncommit 895ded5c28bfa9848f647eff1339dcc763f910d1\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 20:20:18 2021 +0900\n\n    Adding printf.\n\n    This is to make the output a little more human readable.\n\n    printf is part of BASH, and it works just like C's printf()\n    function.\n\n math.sh | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5ab2e41e28507359a1774e39be287406707d3ec8\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 09:20:18 2021 +0900\n\n    Adding two numbers.\n\n math.sh | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning/another_fix_branch)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 08:20:18 2021 +0900\n\n    Renaming c and d.\n\n c => another_rename | 0\n d => renamed_file   | 0\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit fd3bb1d565b69ca19832f8892030a40d6961076c\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 07:20:18 2021 +0900\n\n    Removed a and b.\n\n a | 0\n b | 0\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 6e0d6f43f601fac104439dd778160aeef0ab9910\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Thu Mar 11 09:20:18 2021 +0900\n\n    Adding readme.txt\n\n readme.txt | 1 +\n 1 file changed, 1 insertion(+)\n\ncommit a343843ff5496451e855e4064a4c138cc7b3105e (tag: four_files_galore)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 9 09:20:18 2021 +0900\n\n    Adding four empty files.\n\n a | 0\n b | 0\n\n...\n```\n\n## 短く表示させつつ、変更されたファイルを表示する「git log --oneline --stat」\n### 表示される内容\n- `git log --oneline`を使用したときに表示される情報\n- 変更されたファイル名とカウント\n\n```shell-session\n$  git log --oneline --stat\n\nc7cfec9 (HEAD -> master, beginning/master, beginning/HEAD) A small update to readme.\n readme.txt | 1 +\n 1 file changed, 1 insertion(+)\n895ded5 Adding printf.\n math.sh | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n5ab2e41 Adding two numbers.\n math.sh | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n004e3a3 (beginning/another_fix_branch) Renaming c and d.\n c => another_rename | 0\n d => renamed_file   | 0\n 2 files changed, 0 insertions(+), 0 deletions(-)\nfd3bb1d Removed a and b.\n a | 0\n b | 0\n 2 files changed, 0 insertions(+), 0 deletions(-)\n6e0d6f4 Adding readme.txt\n readme.txt | 1 +\n 1 file changed, 1 insertion(+)\na343843 (tag: four_files_galore) Adding four empty files.\n a | 0\n b | 0\n c | 0\n d | 0\n 4 files changed, 0 insertions(+), 0 deletions(-)\n834601b Adding b variable.\n math.sh | 1 +\n 1 file changed, 1 insertion(+)\n68d38c6 This is the second commit.\n math.sh | 1 +\n 1 file changed, 1 insertion(+)\nd314c77 This is the first commit.\n math.sh | 1 +\n 1 file changed, 1 insertion(+)\n```\n\n## 視覚的にわかりやすく表示する「git log --graph」\n### 表示される内容\n- `git log`を使用したときに表示される情報\n- コミットやブランチの流れを`ASCII`文字で表現する\n\n```shell-session\n$ git log --graph\n* commit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -> master, beginning/master, beginning/HEAD)\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Fri Mar 12 23:20:18 2021 +0900\n|\n|     A small update to readme.\n|\n* commit 895ded5c28bfa9848f647eff1339dcc763f910d1\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Fri Mar 12 20:20:18 2021 +0900\n|\n|     Adding printf.\n|\n|     This is to make the output a little more human readable.\n|\n|     printf is part of BASH, and it works just like C's printf()\n|     function.\n|\n* commit 5ab2e41e28507359a1774e39be287406707d3ec8\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Fri Mar 12 09:20:18 2021 +0900\n|\n|     Adding two numbers.\n|\n* commit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning/another_fix_branch)\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Fri Mar 12 08:20:18 2021 +0900\n|\n|     Renaming c and d.\n|\n* commit fd3bb1d565b69ca19832f8892030a40d6961076c\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Fri Mar 12 07:20:18 2021 +0900\n|\n|     Removed a and b.\n|\n* commit 6e0d6f43f601fac104439dd778160aeef0ab9910\n| Author: Daiki-Iijima <daiki.applecreate@gmail.com>\n| Date:   Thu Mar 11 09:20:18 2021 +0900\n|\n|     Adding readme.txt\n|\n...\n```\n\n## 短く視覚的に表示する「git log --oneline --graph」\n### 表示される内容\n- `git log --oneline`を使用したときに表示される情報\n- コミットやブランチの流れを`ASCII`文字で表現する\n\n```shell-session\n$ git log --oneline --graph\n\n* c7cfec9 (HEAD -> master, beginning/master, beginning/HEAD) A small update to readme.\n* 895ded5 Adding printf.\n* 5ab2e41 Adding two numbers.\n* 004e3a3 (beginning/another_fix_branch) Renaming c and d.\n* fd3bb1d Removed a and b.\n* 6e0d6f4 Adding readme.txt\n* a343843 (tag: four_files_galore) Adding four empty files.\n* 834601b Adding b variable.\n* 68d38c6 This is the second commit.\n* d314c77 This is the first commit.\n```\n\n## すべてのブランチを見る「git log --all」\n### 表示される内容\n- `git log`を使用したときに表示される情報\n- カレントブランチ以外のブランチのlogを一緒に表示する\n\n```shell-session\n$ git log --oneline --graph\n\ncommit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -> master, beginning/master, beginning/HEAD)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 23:20:18 2021 +0900\n\n    A small update to readme.\n\ncommit 91d6184f4c6da852bbcddf9d3c4155983a416d35 (beginning/new_feature)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 22:20:18 2021 +0900\n\n    Starting a second new file\n\ncommit af9aa8ef34be4a5f1c36eb06a560638cc730c814\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 21:20:18 2021 +0900\n\n    Adding a new file to a new branch\n\ncommit 895ded5c28bfa9848f647eff1339dcc763f910d1\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 20:20:18 2021 +0900\n\n    Adding printf.\n\n    This is to make the output a little more human readable.\n\n    printf is part of BASH, and it works just like C's printf()\n    function.\n\ncommit 5ab2e41e28507359a1774e39be287406707d3ec8\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 09:20:18 2021 +0900\n\n    Adding two numbers.\n\ncommit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning/another_fix_branch)\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Fri Mar 12 08:20:18 2021 +0900\n\n    Renaming c and d.\n...\n```\n\n## 短く視覚的に表示する「git log --oneline --all」\n### 表示される内容\n- `git log --oneline`を使用したときに表示される情報\n- カレントブランチ以外のブランチのlogを一緒に表示する\n\n```shell-session\n$ git log --oneline --all\n\nc7cfec9 (HEAD -> master, beginning/master, beginning/HEAD) A small update to readme.\n91d6184 (beginning/new_feature) Starting a second new file\naf9aa8e Adding a new file to a new branch\n895ded5 Adding printf.\n5ab2e41 Adding two numbers.\n004e3a3 (beginning/another_fix_branch) Renaming c and d.\nfd3bb1d Removed a and b.\n6e0d6f4 Adding readme.txt\na343843 (tag: four_files_galore) Adding four empty files.\n834601b Adding b variable.\n68d38c6 This is the second commit.\nd314c77 This is the first commit.\n```\n","slug":"【Git】git-logの色々な表示のさせ方","published":1,"updated":"2021-03-25T16:00:29.468Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh38b001cmzb6a61pfr6a","content":"<h2><span id=\"目次\">目次</span></h2><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></li>\n<li><a href=\"#%E3%81%93%E3%81%AE%E8%A8%98%E4%BA%8B%E3%81%A7%E7%B4%B9%E4%BB%8B%E3%81%99%E3%82%8B%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81\">この記事で紹介するスイッチ</a></li>\n<li><a href=\"#%E6%99%AE%E9%80%9A%E3%81%ABgit-log\">普通に「git log」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%9F%AD%E3%81%8F%E8%A1%A8%E7%A4%BA%E3%81%95%E3%81%9B%E3%82%8Bgit-log-oneline\">短く表示させる「git log –oneline」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-1\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bgit-log-stat\">変更されたファイルを表示する「git log –stat」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-2\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%9F%AD%E3%81%8F%E8%A1%A8%E7%A4%BA%E3%81%95%E3%81%9B%E3%81%A4%E3%81%A4-%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bgit-log-oneline-stat\">短く表示させつつ、変更されたファイルを表示する「git log –oneline –stat」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-3\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%A6%96%E8%A6%9A%E7%9A%84%E3%81%AB%E3%82%8F%E3%81%8B%E3%82%8A%E3%82%84%E3%81%99%E3%81%8F%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bgit-log-graph\">視覚的にわかりやすく表示する「git log –graph」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-4\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%9F%AD%E3%81%8F%E8%A6%96%E8%A6%9A%E7%9A%84%E3%81%AB%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bgit-log-oneline-graph\">短く視覚的に表示する「git log –oneline –graph」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-5\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AE%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E8%A6%8B%E3%82%8Bgit-log-all\">すべてのブランチを見る「git log –all」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-6\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%9F%AD%E3%81%8F%E8%A6%96%E8%A6%9A%E7%9A%84%E3%81%AB%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bgit-log-oneline-all\">短く視覚的に表示する「git log –oneline –all」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-7\">表示される内容</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h2><span id=\"はじめに\">はじめに</span></h2><p>ここで紹介しているスイッチ(–から始まる文節)はすべて組み合わせて使用する事ができるので、適時用途にあった表示のさせ方で組み合わせるといいと思います。</p>\n<h2><span id=\"この記事で紹介するスイッチ\">この記事で紹介するスイッチ</span></h2><ul>\n<li><code>--oneline</code> : 短く表示する</li>\n<li><code>--stat</code> : 変更のあったファイル名と、ファイル数を表示する</li>\n<li><code>--graph</code>    : 視覚的に表示する</li>\n<li><code>--all</code> : すべてのブランチを表示する</li>\n</ul>\n<h2><span id=\"普通にgit-log\">普通に「git log」</span></h2><h3><span id=\"表示される内容\">表示される内容</span></h3><ul>\n<li>SHA1</li>\n<li>ブランチのHEADの場合、ブランチの情報</li>\n<li>コミットした<code>ユーザー名``メールアドレス</code></li>\n<li>コミットした日付</li>\n<li>コミットメッセージ全文</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log </span><br><span class=\"line\"></span><br><span class=\"line\">commit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 23:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    A small update to readme.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 895ded5c28bfa9848f647eff1339dcc763f910d1</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 20:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding printf.</span><br><span class=\"line\"></span><br><span class=\"line\">    This is to make the output a little more human readable.</span><br><span class=\"line\"></span><br><span class=\"line\">    printf is part of BASH, and it works just like C&#39;s printf()</span><br><span class=\"line\">    function.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 5ab2e41e28507359a1774e39be287406707d3ec8</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding two numbers.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning&#x2F;another_fix_branch)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 08:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Renaming c and d.</span><br><span class=\"line\"></span><br><span class=\"line\">commit fd3bb1d565b69ca19832f8892030a40d6961076c</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 07:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Removed a and b.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 6e0d6f43f601fac104439dd778160aeef0ab9910</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Thu Mar 11 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding readme.txt</span><br><span class=\"line\"></span><br><span class=\"line\">commit a343843ff5496451e855e4064a4c138cc7b3105e (tag: four_files_galore)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 9 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding four empty files.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 834601bc8cfa381dbb3ffc4a30245646194b297b</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 9 08:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding b variable.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 68d38c6348b0cf53655e01ef9c8238457b709c71</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 9 07:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    This is the second commit.</span><br><span class=\"line\"></span><br><span class=\"line\">commit d314c772bb58ed3d959bf658265986b7c50bcd61</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 9 05:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    This is the first commit.</span><br></pre></td></tr></table></figure>\n<h2><span id=\"短く表示させるgit-log-oneline\">短く表示させる「git log –oneline」</span></h2><h3><span id=\"表示される内容\">表示される内容</span></h3><ul>\n<li>７桁に短縮された<code>SHA1</code></li>\n<li>ブランチのHEADの場合、ブランチの情報</li>\n<li>コミットコメント(１行目のみ)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --oneline</span><br><span class=\"line\"></span><br><span class=\"line\">c7cfec9 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD) A small update to readme.</span><br><span class=\"line\">895ded5 Adding printf.</span><br><span class=\"line\">5ab2e41 Adding two numbers.</span><br><span class=\"line\">004e3a3 (beginning&#x2F;another_fix_branch) Renaming c and d.</span><br><span class=\"line\">fd3bb1d Removed a and b.</span><br><span class=\"line\">6e0d6f4 Adding readme.txt</span><br><span class=\"line\">a343843 (tag: four_files_galore) Adding four empty files.</span><br><span class=\"line\">834601b Adding b variable.</span><br><span class=\"line\">68d38c6 This is the second commit.</span><br><span class=\"line\">d314c77 This is the first commit.</span><br></pre></td></tr></table></figure>\n<h2><span id=\"変更されたファイルを表示するgit-log-stat\">変更されたファイルを表示する「git log –stat」</span></h2><h3><span id=\"表示される内容\">表示される内容</span></h3><ul>\n<li><code>git log</code>を使用したときに表示される情報</li>\n<li>変更されたファイル名とカウント</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --stat</span><br><span class=\"line\"></span><br><span class=\"line\">commit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 23:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    A small update to readme.</span><br><span class=\"line\"></span><br><span class=\"line\"> readme.txt | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\"></span><br><span class=\"line\">commit 895ded5c28bfa9848f647eff1339dcc763f910d1</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 20:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding printf.</span><br><span class=\"line\"></span><br><span class=\"line\">    This is to make the output a little more human readable.</span><br><span class=\"line\"></span><br><span class=\"line\">    printf is part of BASH, and it works just like C&#39;s printf()</span><br><span class=\"line\">    function.</span><br><span class=\"line\"></span><br><span class=\"line\"> math.sh | 2 +-</span><br><span class=\"line\"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class=\"line\"></span><br><span class=\"line\">commit 5ab2e41e28507359a1774e39be287406707d3ec8</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding two numbers.</span><br><span class=\"line\"></span><br><span class=\"line\"> math.sh | 4 +++-</span><br><span class=\"line\"> 1 file changed, 3 insertions(+), 1 deletion(-)</span><br><span class=\"line\"></span><br><span class=\"line\">commit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning&#x2F;another_fix_branch)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 08:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Renaming c and d.</span><br><span class=\"line\"></span><br><span class=\"line\"> c &#x3D;&gt; another_rename | 0</span><br><span class=\"line\"> d &#x3D;&gt; renamed_file   | 0</span><br><span class=\"line\"> 2 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"></span><br><span class=\"line\">commit fd3bb1d565b69ca19832f8892030a40d6961076c</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 07:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Removed a and b.</span><br><span class=\"line\"></span><br><span class=\"line\"> a | 0</span><br><span class=\"line\"> b | 0</span><br><span class=\"line\"> 2 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"></span><br><span class=\"line\">commit 6e0d6f43f601fac104439dd778160aeef0ab9910</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Thu Mar 11 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding readme.txt</span><br><span class=\"line\"></span><br><span class=\"line\"> readme.txt | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\"></span><br><span class=\"line\">commit a343843ff5496451e855e4064a4c138cc7b3105e (tag: four_files_galore)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 9 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding four empty files.</span><br><span class=\"line\"></span><br><span class=\"line\"> a | 0</span><br><span class=\"line\"> b | 0</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h2><span id=\"短く表示させつつ-変更されたファイルを表示するgit-log-oneline-stat\">短く表示させつつ、変更されたファイルを表示する「git log –oneline –stat」</span></h2><h3><span id=\"表示される内容\">表示される内容</span></h3><ul>\n<li><code>git log --oneline</code>を使用したときに表示される情報</li>\n<li>変更されたファイル名とカウント</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  git log --oneline --stat</span><br><span class=\"line\"></span><br><span class=\"line\">c7cfec9 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD) A small update to readme.</span><br><span class=\"line\"> readme.txt | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">895ded5 Adding printf.</span><br><span class=\"line\"> math.sh | 2 +-</span><br><span class=\"line\"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class=\"line\">5ab2e41 Adding two numbers.</span><br><span class=\"line\"> math.sh | 4 +++-</span><br><span class=\"line\"> 1 file changed, 3 insertions(+), 1 deletion(-)</span><br><span class=\"line\">004e3a3 (beginning&#x2F;another_fix_branch) Renaming c and d.</span><br><span class=\"line\"> c &#x3D;&gt; another_rename | 0</span><br><span class=\"line\"> d &#x3D;&gt; renamed_file   | 0</span><br><span class=\"line\"> 2 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\">fd3bb1d Removed a and b.</span><br><span class=\"line\"> a | 0</span><br><span class=\"line\"> b | 0</span><br><span class=\"line\"> 2 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\">6e0d6f4 Adding readme.txt</span><br><span class=\"line\"> readme.txt | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">a343843 (tag: four_files_galore) Adding four empty files.</span><br><span class=\"line\"> a | 0</span><br><span class=\"line\"> b | 0</span><br><span class=\"line\"> c | 0</span><br><span class=\"line\"> d | 0</span><br><span class=\"line\"> 4 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\">834601b Adding b variable.</span><br><span class=\"line\"> math.sh | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">68d38c6 This is the second commit.</span><br><span class=\"line\"> math.sh | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">d314c77 This is the first commit.</span><br><span class=\"line\"> math.sh | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure>\n<h2><span id=\"視覚的にわかりやすく表示するgit-log-graph\">視覚的にわかりやすく表示する「git log –graph」</span></h2><h3><span id=\"表示される内容\">表示される内容</span></h3><ul>\n<li><code>git log</code>を使用したときに表示される情報</li>\n<li>コミットやブランチの流れを<code>ASCII</code>文字で表現する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --graph</span><br><span class=\"line\">* commit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD)</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Fri Mar 12 23:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     A small update to readme.</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit 895ded5c28bfa9848f647eff1339dcc763f910d1</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Fri Mar 12 20:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     Adding printf.</span><br><span class=\"line\">|</span><br><span class=\"line\">|     This is to make the output a little more human readable.</span><br><span class=\"line\">|</span><br><span class=\"line\">|     printf is part of BASH, and it works just like C&#39;s printf()</span><br><span class=\"line\">|     function.</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit 5ab2e41e28507359a1774e39be287406707d3ec8</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Fri Mar 12 09:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     Adding two numbers.</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning&#x2F;another_fix_branch)</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Fri Mar 12 08:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     Renaming c and d.</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit fd3bb1d565b69ca19832f8892030a40d6961076c</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Fri Mar 12 07:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     Removed a and b.</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit 6e0d6f43f601fac104439dd778160aeef0ab9910</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Thu Mar 11 09:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     Adding readme.txt</span><br><span class=\"line\">|</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h2><span id=\"短く視覚的に表示するgit-log-oneline-graph\">短く視覚的に表示する「git log –oneline –graph」</span></h2><h3><span id=\"表示される内容\">表示される内容</span></h3><ul>\n<li><code>git log --oneline</code>を使用したときに表示される情報</li>\n<li>コミットやブランチの流れを<code>ASCII</code>文字で表現する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --oneline --graph</span><br><span class=\"line\"></span><br><span class=\"line\">* c7cfec9 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD) A small update to readme.</span><br><span class=\"line\">* 895ded5 Adding printf.</span><br><span class=\"line\">* 5ab2e41 Adding two numbers.</span><br><span class=\"line\">* 004e3a3 (beginning&#x2F;another_fix_branch) Renaming c and d.</span><br><span class=\"line\">* fd3bb1d Removed a and b.</span><br><span class=\"line\">* 6e0d6f4 Adding readme.txt</span><br><span class=\"line\">* a343843 (tag: four_files_galore) Adding four empty files.</span><br><span class=\"line\">* 834601b Adding b variable.</span><br><span class=\"line\">* 68d38c6 This is the second commit.</span><br><span class=\"line\">* d314c77 This is the first commit.</span><br></pre></td></tr></table></figure>\n<h2><span id=\"すべてのブランチを見るgit-log-all\">すべてのブランチを見る「git log –all」</span></h2><h3><span id=\"表示される内容\">表示される内容</span></h3><ul>\n<li><code>git log</code>を使用したときに表示される情報</li>\n<li>カレントブランチ以外のブランチのlogを一緒に表示する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --oneline --graph</span><br><span class=\"line\"></span><br><span class=\"line\">commit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 23:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    A small update to readme.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 91d6184f4c6da852bbcddf9d3c4155983a416d35 (beginning&#x2F;new_feature)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 22:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Starting a second new file</span><br><span class=\"line\"></span><br><span class=\"line\">commit af9aa8ef34be4a5f1c36eb06a560638cc730c814</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 21:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding a new file to a new branch</span><br><span class=\"line\"></span><br><span class=\"line\">commit 895ded5c28bfa9848f647eff1339dcc763f910d1</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 20:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding printf.</span><br><span class=\"line\"></span><br><span class=\"line\">    This is to make the output a little more human readable.</span><br><span class=\"line\"></span><br><span class=\"line\">    printf is part of BASH, and it works just like C&#39;s printf()</span><br><span class=\"line\">    function.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 5ab2e41e28507359a1774e39be287406707d3ec8</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding two numbers.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning&#x2F;another_fix_branch)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 08:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Renaming c and d.</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h2><span id=\"短く視覚的に表示するgit-log-oneline-all\">短く視覚的に表示する「git log –oneline –all」</span></h2><h3><span id=\"表示される内容\">表示される内容</span></h3><ul>\n<li><code>git log --oneline</code>を使用したときに表示される情報</li>\n<li>カレントブランチ以外のブランチのlogを一緒に表示する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --oneline --all</span><br><span class=\"line\"></span><br><span class=\"line\">c7cfec9 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD) A small update to readme.</span><br><span class=\"line\">91d6184 (beginning&#x2F;new_feature) Starting a second new file</span><br><span class=\"line\">af9aa8e Adding a new file to a new branch</span><br><span class=\"line\">895ded5 Adding printf.</span><br><span class=\"line\">5ab2e41 Adding two numbers.</span><br><span class=\"line\">004e3a3 (beginning&#x2F;another_fix_branch) Renaming c and d.</span><br><span class=\"line\">fd3bb1d Removed a and b.</span><br><span class=\"line\">6e0d6f4 Adding readme.txt</span><br><span class=\"line\">a343843 (tag: four_files_galore) Adding four empty files.</span><br><span class=\"line\">834601b Adding b variable.</span><br><span class=\"line\">68d38c6 This is the second commit.</span><br><span class=\"line\">d314c77 This is the first commit.</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></li>\n<li><a href=\"#%E3%81%93%E3%81%AE%E8%A8%98%E4%BA%8B%E3%81%A7%E7%B4%B9%E4%BB%8B%E3%81%99%E3%82%8B%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81\">この記事で紹介するスイッチ</a></li>\n<li><a href=\"#%E6%99%AE%E9%80%9A%E3%81%ABgit-log\">普通に「git log」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%9F%AD%E3%81%8F%E8%A1%A8%E7%A4%BA%E3%81%95%E3%81%9B%E3%82%8Bgit-log-oneline\">短く表示させる「git log –oneline」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-1\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bgit-log-stat\">変更されたファイルを表示する「git log –stat」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-2\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%9F%AD%E3%81%8F%E8%A1%A8%E7%A4%BA%E3%81%95%E3%81%9B%E3%81%A4%E3%81%A4-%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bgit-log-oneline-stat\">短く表示させつつ、変更されたファイルを表示する「git log –oneline –stat」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-3\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%A6%96%E8%A6%9A%E7%9A%84%E3%81%AB%E3%82%8F%E3%81%8B%E3%82%8A%E3%82%84%E3%81%99%E3%81%8F%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bgit-log-graph\">視覚的にわかりやすく表示する「git log –graph」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-4\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%9F%AD%E3%81%8F%E8%A6%96%E8%A6%9A%E7%9A%84%E3%81%AB%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bgit-log-oneline-graph\">短く視覚的に表示する「git log –oneline –graph」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-5\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AE%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E8%A6%8B%E3%82%8Bgit-log-all\">すべてのブランチを見る「git log –all」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-6\">表示される内容</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%9F%AD%E3%81%8F%E8%A6%96%E8%A6%9A%E7%9A%84%E3%81%AB%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bgit-log-oneline-all\">短く視覚的に表示する「git log –oneline –all」</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9-7\">表示される内容</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h2 id=\"はじめに\"><a href=\"#はじめに\" class=\"headerlink\" title=\"はじめに\"></a>はじめに</h2><p>ここで紹介しているスイッチ(–から始まる文節)はすべて組み合わせて使用する事ができるので、適時用途にあった表示のさせ方で組み合わせるといいと思います。</p>\n<h2 id=\"この記事で紹介するスイッチ\"><a href=\"#この記事で紹介するスイッチ\" class=\"headerlink\" title=\"この記事で紹介するスイッチ\"></a>この記事で紹介するスイッチ</h2><ul>\n<li><code>--oneline</code> : 短く表示する</li>\n<li><code>--stat</code> : 変更のあったファイル名と、ファイル数を表示する</li>\n<li><code>--graph</code>    : 視覚的に表示する</li>\n<li><code>--all</code> : すべてのブランチを表示する</li>\n</ul>\n<h2 id=\"普通に「git-log」\"><a href=\"#普通に「git-log」\" class=\"headerlink\" title=\"普通に「git log」\"></a>普通に「git log」</h2><h3 id=\"表示される内容\"><a href=\"#表示される内容\" class=\"headerlink\" title=\"表示される内容\"></a>表示される内容</h3><ul>\n<li>SHA1</li>\n<li>ブランチのHEADの場合、ブランチの情報</li>\n<li>コミットした<code>ユーザー名``メールアドレス</code></li>\n<li>コミットした日付</li>\n<li>コミットメッセージ全文</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log </span><br><span class=\"line\"></span><br><span class=\"line\">commit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 23:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    A small update to readme.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 895ded5c28bfa9848f647eff1339dcc763f910d1</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 20:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding printf.</span><br><span class=\"line\"></span><br><span class=\"line\">    This is to make the output a little more human readable.</span><br><span class=\"line\"></span><br><span class=\"line\">    printf is part of BASH, and it works just like C&#39;s printf()</span><br><span class=\"line\">    function.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 5ab2e41e28507359a1774e39be287406707d3ec8</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding two numbers.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning&#x2F;another_fix_branch)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 08:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Renaming c and d.</span><br><span class=\"line\"></span><br><span class=\"line\">commit fd3bb1d565b69ca19832f8892030a40d6961076c</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 07:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Removed a and b.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 6e0d6f43f601fac104439dd778160aeef0ab9910</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Thu Mar 11 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding readme.txt</span><br><span class=\"line\"></span><br><span class=\"line\">commit a343843ff5496451e855e4064a4c138cc7b3105e (tag: four_files_galore)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 9 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding four empty files.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 834601bc8cfa381dbb3ffc4a30245646194b297b</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 9 08:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding b variable.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 68d38c6348b0cf53655e01ef9c8238457b709c71</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 9 07:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    This is the second commit.</span><br><span class=\"line\"></span><br><span class=\"line\">commit d314c772bb58ed3d959bf658265986b7c50bcd61</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 9 05:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    This is the first commit.</span><br></pre></td></tr></table></figure>\n<h2 id=\"短く表示させる「git-log-–oneline」\"><a href=\"#短く表示させる「git-log-–oneline」\" class=\"headerlink\" title=\"短く表示させる「git log –oneline」\"></a>短く表示させる「git log –oneline」</h2><h3 id=\"表示される内容-1\"><a href=\"#表示される内容-1\" class=\"headerlink\" title=\"表示される内容\"></a>表示される内容</h3><ul>\n<li>７桁に短縮された<code>SHA1</code></li>\n<li>ブランチのHEADの場合、ブランチの情報</li>\n<li>コミットコメント(１行目のみ)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --oneline</span><br><span class=\"line\"></span><br><span class=\"line\">c7cfec9 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD) A small update to readme.</span><br><span class=\"line\">895ded5 Adding printf.</span><br><span class=\"line\">5ab2e41 Adding two numbers.</span><br><span class=\"line\">004e3a3 (beginning&#x2F;another_fix_branch) Renaming c and d.</span><br><span class=\"line\">fd3bb1d Removed a and b.</span><br><span class=\"line\">6e0d6f4 Adding readme.txt</span><br><span class=\"line\">a343843 (tag: four_files_galore) Adding four empty files.</span><br><span class=\"line\">834601b Adding b variable.</span><br><span class=\"line\">68d38c6 This is the second commit.</span><br><span class=\"line\">d314c77 This is the first commit.</span><br></pre></td></tr></table></figure>\n<h2 id=\"変更されたファイルを表示する「git-log-–stat」\"><a href=\"#変更されたファイルを表示する「git-log-–stat」\" class=\"headerlink\" title=\"変更されたファイルを表示する「git log –stat」\"></a>変更されたファイルを表示する「git log –stat」</h2><h3 id=\"表示される内容-2\"><a href=\"#表示される内容-2\" class=\"headerlink\" title=\"表示される内容\"></a>表示される内容</h3><ul>\n<li><code>git log</code>を使用したときに表示される情報</li>\n<li>変更されたファイル名とカウント</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --stat</span><br><span class=\"line\"></span><br><span class=\"line\">commit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 23:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    A small update to readme.</span><br><span class=\"line\"></span><br><span class=\"line\"> readme.txt | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\"></span><br><span class=\"line\">commit 895ded5c28bfa9848f647eff1339dcc763f910d1</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 20:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding printf.</span><br><span class=\"line\"></span><br><span class=\"line\">    This is to make the output a little more human readable.</span><br><span class=\"line\"></span><br><span class=\"line\">    printf is part of BASH, and it works just like C&#39;s printf()</span><br><span class=\"line\">    function.</span><br><span class=\"line\"></span><br><span class=\"line\"> math.sh | 2 +-</span><br><span class=\"line\"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class=\"line\"></span><br><span class=\"line\">commit 5ab2e41e28507359a1774e39be287406707d3ec8</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding two numbers.</span><br><span class=\"line\"></span><br><span class=\"line\"> math.sh | 4 +++-</span><br><span class=\"line\"> 1 file changed, 3 insertions(+), 1 deletion(-)</span><br><span class=\"line\"></span><br><span class=\"line\">commit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning&#x2F;another_fix_branch)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 08:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Renaming c and d.</span><br><span class=\"line\"></span><br><span class=\"line\"> c &#x3D;&gt; another_rename | 0</span><br><span class=\"line\"> d &#x3D;&gt; renamed_file   | 0</span><br><span class=\"line\"> 2 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"></span><br><span class=\"line\">commit fd3bb1d565b69ca19832f8892030a40d6961076c</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 07:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Removed a and b.</span><br><span class=\"line\"></span><br><span class=\"line\"> a | 0</span><br><span class=\"line\"> b | 0</span><br><span class=\"line\"> 2 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"></span><br><span class=\"line\">commit 6e0d6f43f601fac104439dd778160aeef0ab9910</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Thu Mar 11 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding readme.txt</span><br><span class=\"line\"></span><br><span class=\"line\"> readme.txt | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\"></span><br><span class=\"line\">commit a343843ff5496451e855e4064a4c138cc7b3105e (tag: four_files_galore)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 9 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding four empty files.</span><br><span class=\"line\"></span><br><span class=\"line\"> a | 0</span><br><span class=\"line\"> b | 0</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h2 id=\"短く表示させつつ、変更されたファイルを表示する「git-log-–oneline-–stat」\"><a href=\"#短く表示させつつ、変更されたファイルを表示する「git-log-–oneline-–stat」\" class=\"headerlink\" title=\"短く表示させつつ、変更されたファイルを表示する「git log –oneline –stat」\"></a>短く表示させつつ、変更されたファイルを表示する「git log –oneline –stat」</h2><h3 id=\"表示される内容-3\"><a href=\"#表示される内容-3\" class=\"headerlink\" title=\"表示される内容\"></a>表示される内容</h3><ul>\n<li><code>git log --oneline</code>を使用したときに表示される情報</li>\n<li>変更されたファイル名とカウント</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  git log --oneline --stat</span><br><span class=\"line\"></span><br><span class=\"line\">c7cfec9 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD) A small update to readme.</span><br><span class=\"line\"> readme.txt | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">895ded5 Adding printf.</span><br><span class=\"line\"> math.sh | 2 +-</span><br><span class=\"line\"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class=\"line\">5ab2e41 Adding two numbers.</span><br><span class=\"line\"> math.sh | 4 +++-</span><br><span class=\"line\"> 1 file changed, 3 insertions(+), 1 deletion(-)</span><br><span class=\"line\">004e3a3 (beginning&#x2F;another_fix_branch) Renaming c and d.</span><br><span class=\"line\"> c &#x3D;&gt; another_rename | 0</span><br><span class=\"line\"> d &#x3D;&gt; renamed_file   | 0</span><br><span class=\"line\"> 2 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\">fd3bb1d Removed a and b.</span><br><span class=\"line\"> a | 0</span><br><span class=\"line\"> b | 0</span><br><span class=\"line\"> 2 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\">6e0d6f4 Adding readme.txt</span><br><span class=\"line\"> readme.txt | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">a343843 (tag: four_files_galore) Adding four empty files.</span><br><span class=\"line\"> a | 0</span><br><span class=\"line\"> b | 0</span><br><span class=\"line\"> c | 0</span><br><span class=\"line\"> d | 0</span><br><span class=\"line\"> 4 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\">834601b Adding b variable.</span><br><span class=\"line\"> math.sh | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">68d38c6 This is the second commit.</span><br><span class=\"line\"> math.sh | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">d314c77 This is the first commit.</span><br><span class=\"line\"> math.sh | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure>\n<h2 id=\"視覚的にわかりやすく表示する「git-log-–graph」\"><a href=\"#視覚的にわかりやすく表示する「git-log-–graph」\" class=\"headerlink\" title=\"視覚的にわかりやすく表示する「git log –graph」\"></a>視覚的にわかりやすく表示する「git log –graph」</h2><h3 id=\"表示される内容-4\"><a href=\"#表示される内容-4\" class=\"headerlink\" title=\"表示される内容\"></a>表示される内容</h3><ul>\n<li><code>git log</code>を使用したときに表示される情報</li>\n<li>コミットやブランチの流れを<code>ASCII</code>文字で表現する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --graph</span><br><span class=\"line\">* commit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD)</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Fri Mar 12 23:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     A small update to readme.</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit 895ded5c28bfa9848f647eff1339dcc763f910d1</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Fri Mar 12 20:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     Adding printf.</span><br><span class=\"line\">|</span><br><span class=\"line\">|     This is to make the output a little more human readable.</span><br><span class=\"line\">|</span><br><span class=\"line\">|     printf is part of BASH, and it works just like C&#39;s printf()</span><br><span class=\"line\">|     function.</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit 5ab2e41e28507359a1774e39be287406707d3ec8</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Fri Mar 12 09:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     Adding two numbers.</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning&#x2F;another_fix_branch)</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Fri Mar 12 08:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     Renaming c and d.</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit fd3bb1d565b69ca19832f8892030a40d6961076c</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Fri Mar 12 07:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     Removed a and b.</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit 6e0d6f43f601fac104439dd778160aeef0ab9910</span><br><span class=\"line\">| Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">| Date:   Thu Mar 11 09:20:18 2021 +0900</span><br><span class=\"line\">|</span><br><span class=\"line\">|     Adding readme.txt</span><br><span class=\"line\">|</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h2 id=\"短く視覚的に表示する「git-log-–oneline-–graph」\"><a href=\"#短く視覚的に表示する「git-log-–oneline-–graph」\" class=\"headerlink\" title=\"短く視覚的に表示する「git log –oneline –graph」\"></a>短く視覚的に表示する「git log –oneline –graph」</h2><h3 id=\"表示される内容-5\"><a href=\"#表示される内容-5\" class=\"headerlink\" title=\"表示される内容\"></a>表示される内容</h3><ul>\n<li><code>git log --oneline</code>を使用したときに表示される情報</li>\n<li>コミットやブランチの流れを<code>ASCII</code>文字で表現する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --oneline --graph</span><br><span class=\"line\"></span><br><span class=\"line\">* c7cfec9 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD) A small update to readme.</span><br><span class=\"line\">* 895ded5 Adding printf.</span><br><span class=\"line\">* 5ab2e41 Adding two numbers.</span><br><span class=\"line\">* 004e3a3 (beginning&#x2F;another_fix_branch) Renaming c and d.</span><br><span class=\"line\">* fd3bb1d Removed a and b.</span><br><span class=\"line\">* 6e0d6f4 Adding readme.txt</span><br><span class=\"line\">* a343843 (tag: four_files_galore) Adding four empty files.</span><br><span class=\"line\">* 834601b Adding b variable.</span><br><span class=\"line\">* 68d38c6 This is the second commit.</span><br><span class=\"line\">* d314c77 This is the first commit.</span><br></pre></td></tr></table></figure>\n<h2 id=\"すべてのブランチを見る「git-log-–all」\"><a href=\"#すべてのブランチを見る「git-log-–all」\" class=\"headerlink\" title=\"すべてのブランチを見る「git log –all」\"></a>すべてのブランチを見る「git log –all」</h2><h3 id=\"表示される内容-6\"><a href=\"#表示される内容-6\" class=\"headerlink\" title=\"表示される内容\"></a>表示される内容</h3><ul>\n<li><code>git log</code>を使用したときに表示される情報</li>\n<li>カレントブランチ以外のブランチのlogを一緒に表示する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --oneline --graph</span><br><span class=\"line\"></span><br><span class=\"line\">commit c7cfec983e47d507b89726b1fcb8550ea71eee95 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 23:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    A small update to readme.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 91d6184f4c6da852bbcddf9d3c4155983a416d35 (beginning&#x2F;new_feature)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 22:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Starting a second new file</span><br><span class=\"line\"></span><br><span class=\"line\">commit af9aa8ef34be4a5f1c36eb06a560638cc730c814</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 21:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding a new file to a new branch</span><br><span class=\"line\"></span><br><span class=\"line\">commit 895ded5c28bfa9848f647eff1339dcc763f910d1</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 20:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding printf.</span><br><span class=\"line\"></span><br><span class=\"line\">    This is to make the output a little more human readable.</span><br><span class=\"line\"></span><br><span class=\"line\">    printf is part of BASH, and it works just like C&#39;s printf()</span><br><span class=\"line\">    function.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 5ab2e41e28507359a1774e39be287406707d3ec8</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 09:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding two numbers.</span><br><span class=\"line\"></span><br><span class=\"line\">commit 004e3a3d1f942361d81ec6599e6bff0f6c0d7be9 (beginning&#x2F;another_fix_branch)</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Mar 12 08:20:18 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Renaming c and d.</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h2 id=\"短く視覚的に表示する「git-log-–oneline-–all」\"><a href=\"#短く視覚的に表示する「git-log-–oneline-–all」\" class=\"headerlink\" title=\"短く視覚的に表示する「git log –oneline –all」\"></a>短く視覚的に表示する「git log –oneline –all」</h2><h3 id=\"表示される内容-7\"><a href=\"#表示される内容-7\" class=\"headerlink\" title=\"表示される内容\"></a>表示される内容</h3><ul>\n<li><code>git log --oneline</code>を使用したときに表示される情報</li>\n<li>カレントブランチ以外のブランチのlogを一緒に表示する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --oneline --all</span><br><span class=\"line\"></span><br><span class=\"line\">c7cfec9 (HEAD -&gt; master, beginning&#x2F;master, beginning&#x2F;HEAD) A small update to readme.</span><br><span class=\"line\">91d6184 (beginning&#x2F;new_feature) Starting a second new file</span><br><span class=\"line\">af9aa8e Adding a new file to a new branch</span><br><span class=\"line\">895ded5 Adding printf.</span><br><span class=\"line\">5ab2e41 Adding two numbers.</span><br><span class=\"line\">004e3a3 (beginning&#x2F;another_fix_branch) Renaming c and d.</span><br><span class=\"line\">fd3bb1d Removed a and b.</span><br><span class=\"line\">6e0d6f4 Adding readme.txt</span><br><span class=\"line\">a343843 (tag: four_files_galore) Adding four empty files.</span><br><span class=\"line\">834601b Adding b variable.</span><br><span class=\"line\">68d38c6 This is the second commit.</span><br><span class=\"line\">d314c77 This is the first commit.</span><br></pre></td></tr></table></figure>"},{"title":"cssにつて","date":"2021-03-02T12:40:42.000Z","_content":"# CSSとは何か\n- 正式名称 : Cascading Syle Sheets(カスケーディングスタイルシート)\n- ページレイアウトを形成するためのスタイルシート\n- HTML = マークアップ,CSS = レイアウト\n\n# 記述方法の種類\n1. インラインCSS : body内の各種タグの中に記述する\n\t- `インラインスタイルシート`と呼ぶ場合もある\n2. 内部CSS : headタグの中に記述\n\t- `内部スタイルシート`と呼ぶ場合もある\n3. 外部ファイル(.css)\n\t- `外部スタイルシート`と呼ぶ場合もある\n\t- コンテンツとデザインの分離ができるので、外部ファイルに記述するのが基本\n\n# 1.インラインCSS : body内の各種タグの中に記述する\n- 一つ一つのタグに設定する必要がある\n- インラインCSSと呼ばれる書き方で、直接タグの中で`style`属性を指定する\n\t```html\n\tstyle=属性:\"属性値\"\n\t```\n- `color属性`で色を変える例\n\t```html\n\t<p style=\"color:blue\">今回は、新しくリリースするプロダクトの紹介をします</p>\n\t```\n\n- `複数の属性指定`したい場合、`;`を入力することで指定できる\n\t```html\n\t<p style=\"color:blue;font-size:300%\">今回は、新しくリリースするプロダクトの紹介をします</p>\n\t```\n# 2.内部CSS : headタグ内に記述する\n- `head`タグの内部に記述するCSS\n- 具体的には`head`ブロック内に`style`ブロックを作成し、そこにスタイルを記述する\n```html\n<html>\n <head>\n  <style>\n   <!--ここにスタイルを記述する-->\n  </style>\t\n </head>\n <body>\n\n </body>\n</html>\n```\n\n## スタイルの記述には２通りの方法がある\n1. タグ全体に適応する\n2. 指定した領域のみに適応する\n\n## 1. タグ全体に適応する\n- `style`ブロック内に`タグ名`のブロックを作り、そこにスタイルを記述する\n- 複数のスタイルを記述する場合、`;`で区切る\n```html\n<style>\n<!--pタグ内の全てのテキストにここに記述したレイアウトが適応される-->\n p{\t\n  color:blue;\n  font-size:150%;\n }\n</style>\n```\n\n## 2. 指定した領域のみに適応する\n1. `class`属性を使用する\n\t- 複数のタグに適応できる\n2. `id`属性を使用する\n\t- １つのタグのみに適応できる\n3. `span`属性を使用する\n\t- 特定の文字列適応する\n\n### 1. `class`属性を使用する\n- `class`属性にクラス名を指定し、`style`ブロックに`.クラス名`でスタイルを記述する\t\n- 同一のクラス名を他のタグにも割り当てることができる\n```html\n<html>\n <head>\n  <style>\n   .A{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1 class=\"A\">クラスでスタイルを指定しています</p>\n  <p class=\"A\">クラスでスタイルを指定しています</p>\n  <p> クラス名を指定していません</p>\n </body>\n</html>\n```\n\n###  2. `id`属性を使用する\n- `id`属性を定義してid名を指定して、`style`ブロックに`#id名`でスタイルを記述する\t\n- 1つのタグにしか適応できない\n```html\n<html>\n <head>\n  <style>\n   #B{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1 id=\"B\">クラスでスタイルを指定しています</p>\n  <p><クラス名を指定していません/p>\n  <p> クラス名を指定していません</p>\n </body>\n</html>\n```\n\n### 3. `span`属性を使用する\n- `span`タグ(\\<span\\>\\</span\\>)を定義して`class`属性にクラス名を指定して、`style`ブロックに`.クラス名`でスタイルを記述する\n- `class` `id`との違いは、タグに対するレイアウトではなく、文字列に対するレイアウトである点\n```html\n<html>\n <head>\n  <style>\n   .C{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1>クラスでスタイルを指定しています</p>\n  <p>クラス名を<span class=\"C\">指定</span>していません</p>\n  <p>クラス名を指定していません</p>\n </body>\n</html>\n```\n\n","source":"_posts/CSSについて.md","raw":"---\ntitle: cssにつて\ndate: 2021-03-02 21:40:42\ntags:\n- CSS\n---\n# CSSとは何か\n- 正式名称 : Cascading Syle Sheets(カスケーディングスタイルシート)\n- ページレイアウトを形成するためのスタイルシート\n- HTML = マークアップ,CSS = レイアウト\n\n# 記述方法の種類\n1. インラインCSS : body内の各種タグの中に記述する\n\t- `インラインスタイルシート`と呼ぶ場合もある\n2. 内部CSS : headタグの中に記述\n\t- `内部スタイルシート`と呼ぶ場合もある\n3. 外部ファイル(.css)\n\t- `外部スタイルシート`と呼ぶ場合もある\n\t- コンテンツとデザインの分離ができるので、外部ファイルに記述するのが基本\n\n# 1.インラインCSS : body内の各種タグの中に記述する\n- 一つ一つのタグに設定する必要がある\n- インラインCSSと呼ばれる書き方で、直接タグの中で`style`属性を指定する\n\t```html\n\tstyle=属性:\"属性値\"\n\t```\n- `color属性`で色を変える例\n\t```html\n\t<p style=\"color:blue\">今回は、新しくリリースするプロダクトの紹介をします</p>\n\t```\n\n- `複数の属性指定`したい場合、`;`を入力することで指定できる\n\t```html\n\t<p style=\"color:blue;font-size:300%\">今回は、新しくリリースするプロダクトの紹介をします</p>\n\t```\n# 2.内部CSS : headタグ内に記述する\n- `head`タグの内部に記述するCSS\n- 具体的には`head`ブロック内に`style`ブロックを作成し、そこにスタイルを記述する\n```html\n<html>\n <head>\n  <style>\n   <!--ここにスタイルを記述する-->\n  </style>\t\n </head>\n <body>\n\n </body>\n</html>\n```\n\n## スタイルの記述には２通りの方法がある\n1. タグ全体に適応する\n2. 指定した領域のみに適応する\n\n## 1. タグ全体に適応する\n- `style`ブロック内に`タグ名`のブロックを作り、そこにスタイルを記述する\n- 複数のスタイルを記述する場合、`;`で区切る\n```html\n<style>\n<!--pタグ内の全てのテキストにここに記述したレイアウトが適応される-->\n p{\t\n  color:blue;\n  font-size:150%;\n }\n</style>\n```\n\n## 2. 指定した領域のみに適応する\n1. `class`属性を使用する\n\t- 複数のタグに適応できる\n2. `id`属性を使用する\n\t- １つのタグのみに適応できる\n3. `span`属性を使用する\n\t- 特定の文字列適応する\n\n### 1. `class`属性を使用する\n- `class`属性にクラス名を指定し、`style`ブロックに`.クラス名`でスタイルを記述する\t\n- 同一のクラス名を他のタグにも割り当てることができる\n```html\n<html>\n <head>\n  <style>\n   .A{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1 class=\"A\">クラスでスタイルを指定しています</p>\n  <p class=\"A\">クラスでスタイルを指定しています</p>\n  <p> クラス名を指定していません</p>\n </body>\n</html>\n```\n\n###  2. `id`属性を使用する\n- `id`属性を定義してid名を指定して、`style`ブロックに`#id名`でスタイルを記述する\t\n- 1つのタグにしか適応できない\n```html\n<html>\n <head>\n  <style>\n   #B{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1 id=\"B\">クラスでスタイルを指定しています</p>\n  <p><クラス名を指定していません/p>\n  <p> クラス名を指定していません</p>\n </body>\n</html>\n```\n\n### 3. `span`属性を使用する\n- `span`タグ(\\<span\\>\\</span\\>)を定義して`class`属性にクラス名を指定して、`style`ブロックに`.クラス名`でスタイルを記述する\n- `class` `id`との違いは、タグに対するレイアウトではなく、文字列に対するレイアウトである点\n```html\n<html>\n <head>\n  <style>\n   .C{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1>クラスでスタイルを指定しています</p>\n  <p>クラス名を<span class=\"C\">指定</span>していません</p>\n  <p>クラス名を指定していません</p>\n </body>\n</html>\n```\n\n","slug":"CSSについて","published":1,"updated":"2021-03-02T12:43:15.343Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh38c001fmzb6ezry9z3j","content":"<h1><span id=\"cssとは何か\">CSSとは何か</span></h1><ul>\n<li>正式名称 : Cascading Syle Sheets(カスケーディングスタイルシート)</li>\n<li>ページレイアウトを形成するためのスタイルシート</li>\n<li>HTML = マークアップ,CSS = レイアウト</li>\n</ul>\n<h1><span id=\"記述方法の種類\">記述方法の種類</span></h1><ol>\n<li>インラインCSS : body内の各種タグの中に記述する<ul>\n<li><code>インラインスタイルシート</code>と呼ぶ場合もある</li>\n</ul>\n</li>\n<li>内部CSS : headタグの中に記述<ul>\n<li><code>内部スタイルシート</code>と呼ぶ場合もある</li>\n</ul>\n</li>\n<li>外部ファイル(.css)<ul>\n<li><code>外部スタイルシート</code>と呼ぶ場合もある</li>\n<li>コンテンツとデザインの分離ができるので、外部ファイルに記述するのが基本</li>\n</ul>\n</li>\n</ol>\n<h1><span id=\"1インラインcss-body内の各種タグの中に記述する\">1.インラインCSS : body内の各種タグの中に記述する</span></h1><ul>\n<li>一つ一つのタグに設定する必要がある</li>\n<li>インラインCSSと呼ばれる書き方で、直接タグの中で<code>style</code>属性を指定する  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">style=属性:&quot;属性値&quot;</span><br></pre></td></tr></table></figure></li>\n<li><code>color属性</code>で色を変える例  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:blue&quot;</span>&gt;</span>今回は、新しくリリースするプロダクトの紹介をします<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><code>複数の属性指定</code>したい場合、<code>;</code>を入力することで指定できる  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:blue;font-size:300%&quot;</span>&gt;</span>今回は、新しくリリースするプロダクトの紹介をします<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"2内部css-headタグ内に記述する\">2.内部CSS : headタグ内に記述する</span></h1></li>\n<li><code>head</code>タグの内部に記述するCSS</li>\n<li>具体的には<code>head</code>ブロック内に<code>style</code>ブロックを作成し、そこにスタイルを記述する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"comment\">&lt;!--ここにスタイルを記述する--&gt;</span></span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"スタイルの記述には2通りの方法がある\">スタイルの記述には２通りの方法がある</span></h2></li>\n</ul>\n<ol>\n<li>タグ全体に適応する</li>\n<li>指定した領域のみに適応する</li>\n</ol>\n<h2><span id=\"1-タグ全体に適応する\">1. タグ全体に適応する</span></h2><ul>\n<li><code>style</code>ブロック内に<code>タグ名</code>のブロックを作り、そこにスタイルを記述する</li>\n<li>複数のスタイルを記述する場合、<code>;</code>で区切る<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--pタグ内の全てのテキストにここに記述したレイアウトが適応される--&gt;</span></span></span><br><span class=\"line\"> p&#123;\t</span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"2-指定した領域のみに適応する\">2. 指定した領域のみに適応する</span></h2></li>\n</ul>\n<ol>\n<li><code>class</code>属性を使用する<ul>\n<li>複数のタグに適応できる</li>\n</ul>\n</li>\n<li><code>id</code>属性を使用する<ul>\n<li>１つのタグのみに適応できる</li>\n</ul>\n</li>\n<li><code>span</code>属性を使用する<ul>\n<li>特定の文字列適応する</li>\n</ul>\n</li>\n</ol>\n<h3><span id=\"1-class属性を使用する\">1. <code>class</code>属性を使用する</span></h3><ul>\n<li><code>class</code>属性にクラス名を指定し、<code>style</code>ブロックに<code>.クラス名</code>でスタイルを記述する    </li>\n<li>同一のクラス名を他のタグにも割り当てることができる<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-class\">.A</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;A&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;A&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"2-id属性を使用する\">2. <code>id</code>属性を使用する</span></h3></li>\n<li><code>id</code>属性を定義してid名を指定して、<code>style</code>ブロックに<code>#id名</code>でスタイルを記述する    </li>\n<li>1つのタグにしか適応できない<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-id\">#B</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;B&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&lt;クラス名を指定していません/p&gt;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"3-span属性を使用する\">3. <code>span</code>属性を使用する</span></h3></li>\n<li><code>span</code>タグ(&lt;span&gt;&lt;/span&gt;)を定義して<code>class</code>属性にクラス名を指定して、<code>style</code>ブロックに<code>.クラス名</code>でスタイルを記述する</li>\n<li><code>class</code> <code>id</code>との違いは、タグに対するレイアウトではなく、文字列に対するレイアウトである点<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-class\">.C</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>クラス名を<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;C&quot;</span>&gt;</span>指定<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"CSSとは何か\"><a href=\"#CSSとは何か\" class=\"headerlink\" title=\"CSSとは何か\"></a>CSSとは何か</h1><ul>\n<li>正式名称 : Cascading Syle Sheets(カスケーディングスタイルシート)</li>\n<li>ページレイアウトを形成するためのスタイルシート</li>\n<li>HTML = マークアップ,CSS = レイアウト</li>\n</ul>\n<h1 id=\"記述方法の種類\"><a href=\"#記述方法の種類\" class=\"headerlink\" title=\"記述方法の種類\"></a>記述方法の種類</h1><ol>\n<li>インラインCSS : body内の各種タグの中に記述する<ul>\n<li><code>インラインスタイルシート</code>と呼ぶ場合もある</li>\n</ul>\n</li>\n<li>内部CSS : headタグの中に記述<ul>\n<li><code>内部スタイルシート</code>と呼ぶ場合もある</li>\n</ul>\n</li>\n<li>外部ファイル(.css)<ul>\n<li><code>外部スタイルシート</code>と呼ぶ場合もある</li>\n<li>コンテンツとデザインの分離ができるので、外部ファイルに記述するのが基本</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"1-インラインCSS-body内の各種タグの中に記述する\"><a href=\"#1-インラインCSS-body内の各種タグの中に記述する\" class=\"headerlink\" title=\"1.インラインCSS : body内の各種タグの中に記述する\"></a>1.インラインCSS : body内の各種タグの中に記述する</h1><ul>\n<li>一つ一つのタグに設定する必要がある</li>\n<li>インラインCSSと呼ばれる書き方で、直接タグの中で<code>style</code>属性を指定する  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">style=属性:&quot;属性値&quot;</span><br></pre></td></tr></table></figure></li>\n<li><code>color属性</code>で色を変える例  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:blue&quot;</span>&gt;</span>今回は、新しくリリースするプロダクトの紹介をします<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><code>複数の属性指定</code>したい場合、<code>;</code>を入力することで指定できる  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:blue;font-size:300%&quot;</span>&gt;</span>今回は、新しくリリースするプロダクトの紹介をします<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"2-内部CSS-headタグ内に記述する\"><a href=\"#2-内部CSS-headタグ内に記述する\" class=\"headerlink\" title=\"2.内部CSS : headタグ内に記述する\"></a>2.内部CSS : headタグ内に記述する</h1></li>\n<li><code>head</code>タグの内部に記述するCSS</li>\n<li>具体的には<code>head</code>ブロック内に<code>style</code>ブロックを作成し、そこにスタイルを記述する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"comment\">&lt;!--ここにスタイルを記述する--&gt;</span></span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"スタイルの記述には２通りの方法がある\"><a href=\"#スタイルの記述には２通りの方法がある\" class=\"headerlink\" title=\"スタイルの記述には２通りの方法がある\"></a>スタイルの記述には２通りの方法がある</h2></li>\n</ul>\n<ol>\n<li>タグ全体に適応する</li>\n<li>指定した領域のみに適応する</li>\n</ol>\n<h2 id=\"1-タグ全体に適応する\"><a href=\"#1-タグ全体に適応する\" class=\"headerlink\" title=\"1. タグ全体に適応する\"></a>1. タグ全体に適応する</h2><ul>\n<li><code>style</code>ブロック内に<code>タグ名</code>のブロックを作り、そこにスタイルを記述する</li>\n<li>複数のスタイルを記述する場合、<code>;</code>で区切る<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--pタグ内の全てのテキストにここに記述したレイアウトが適応される--&gt;</span></span></span><br><span class=\"line\"> p&#123;\t</span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-指定した領域のみに適応する\"><a href=\"#2-指定した領域のみに適応する\" class=\"headerlink\" title=\"2. 指定した領域のみに適応する\"></a>2. 指定した領域のみに適応する</h2></li>\n</ul>\n<ol>\n<li><code>class</code>属性を使用する<ul>\n<li>複数のタグに適応できる</li>\n</ul>\n</li>\n<li><code>id</code>属性を使用する<ul>\n<li>１つのタグのみに適応できる</li>\n</ul>\n</li>\n<li><code>span</code>属性を使用する<ul>\n<li>特定の文字列適応する</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-class属性を使用する\"><a href=\"#1-class属性を使用する\" class=\"headerlink\" title=\"1. class属性を使用する\"></a>1. <code>class</code>属性を使用する</h3><ul>\n<li><code>class</code>属性にクラス名を指定し、<code>style</code>ブロックに<code>.クラス名</code>でスタイルを記述する    </li>\n<li>同一のクラス名を他のタグにも割り当てることができる<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-class\">.A</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;A&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;A&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-id属性を使用する\"><a href=\"#2-id属性を使用する\" class=\"headerlink\" title=\"2. id属性を使用する\"></a>2. <code>id</code>属性を使用する</h3></li>\n<li><code>id</code>属性を定義してid名を指定して、<code>style</code>ブロックに<code>#id名</code>でスタイルを記述する    </li>\n<li>1つのタグにしか適応できない<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-id\">#B</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;B&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&lt;クラス名を指定していません/p&gt;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-span属性を使用する\"><a href=\"#3-span属性を使用する\" class=\"headerlink\" title=\"3. span属性を使用する\"></a>3. <code>span</code>属性を使用する</h3></li>\n<li><code>span</code>タグ(&lt;span&gt;&lt;/span&gt;)を定義して<code>class</code>属性にクラス名を指定して、<code>style</code>ブロックに<code>.クラス名</code>でスタイルを記述する</li>\n<li><code>class</code> <code>id</code>との違いは、タグに対するレイアウトではなく、文字列に対するレイアウトである点<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-class\">.C</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>クラス名を<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;C&quot;</span>&gt;</span>指定<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"【Git】gitが認識しているファイルを自動でステージングしながらコミットする","date":"2021-03-23T23:03:04.000Z","_content":"## 目次\n<!-- toc -->\n<!-- more -->\n\n## git commit 時に-aスイッチを使う\ngit addをするのが面倒くさいときは、commitと同時にステージンをするためのコマンドが用意されている\n\t- `-a`スイッチで、自動ステージングされるのは、すでにGitが認識している(新規追加ではない)ファイルのみを自動でステージングする\n\n```shell-session\n$ git commit -a -m \"自動ステージングコミット\"\n```\n","source":"_posts/【Git】gitが認識しているファイルを自動でステージングしながらコミットする.md","raw":"---\ntitle: 【Git】gitが認識しているファイルを自動でステージングしながらコミットする\ndate: 2021-03-24 08:03:04\ntags:\n- Git\n---\n## 目次\n<!-- toc -->\n<!-- more -->\n\n## git commit 時に-aスイッチを使う\ngit addをするのが面倒くさいときは、commitと同時にステージンをするためのコマンドが用意されている\n\t- `-a`スイッチで、自動ステージングされるのは、すでにGitが認識している(新規追加ではない)ファイルのみを自動でステージングする\n\n```shell-session\n$ git commit -a -m \"自動ステージングコミット\"\n```\n","slug":"【Git】gitが認識しているファイルを自動でステージングしながらコミットする","published":1,"updated":"2021-03-25T17:04:07.429Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh38c001gmzb63f1teq3f","content":"<h2><span id=\"目次\">目次</span></h2><!-- toc -->\n\n<ul>\n<li><a href=\"#git-commit-%E6%99%82%E3%81%AB-a%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81%E3%82%92%E4%BD%BF%E3%81%86\">git commit 時に-aスイッチを使う</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h2><span id=\"git-commit-時に-aスイッチを使う\">git commit 時に-aスイッチを使う</span></h2><p>git addをするのが面倒くさいときは、commitと同時にステージンをするためのコマンドが用意されている<br>    - <code>-a</code>スイッチで、自動ステージングされるのは、すでにGitが認識している(新規追加ではない)ファイルのみを自動でステージングする</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -a -m &quot;自動ステージングコミット&quot;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><!-- toc -->\n\n<ul>\n<li><a href=\"#git-commit-%E6%99%82%E3%81%AB-a%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81%E3%82%92%E4%BD%BF%E3%81%86\">git commit 時に-aスイッチを使う</a></li>\n</ul>\n<!-- tocstop -->","more":"<h2 id=\"git-commit-時に-aスイッチを使う\"><a href=\"#git-commit-時に-aスイッチを使う\" class=\"headerlink\" title=\"git commit 時に-aスイッチを使う\"></a>git commit 時に-aスイッチを使う</h2><p>git addをするのが面倒くさいときは、commitと同時にステージンをするためのコマンドが用意されている<br>    - <code>-a</code>スイッチで、自動ステージングされるのは、すでにGitが認識している(新規追加ではない)ファイルのみを自動でステージングする</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -a -m &quot;自動ステージングコミット&quot;</span><br></pre></td></tr></table></figure>"},{"title":"【Git】コミットを探す","date":"2021-04-02T15:40:37.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# コミットメッセージから探す\n`--grep`スイッチを使用して`=`に指定した文字列と一致するコミットメッセージのコミットを表示することができます。\n\n```bash\n$ git log --grep=test\n```\n\n# コミットした人物から探す\n`shortlog`でそのリポジトリにコミットした人ごとのコミットを表示して、その後`--ather`スイッチで人物を指定して指定した人物のコミットだけを表示させる\n\n- `shortlog`でメールアドレスを表示させるには`-e`スイッチをつける\n\n## 実行例\nユーザーごとにコミットが表示される\n```bash\n$ git shortlog\n\nDaiki Iijima(10)\n\t....\n\t....\n\t....\n\nKojima Yui(21)\n\t...\n\t...\n\t...\n```\n\n個人を指定して表示させる\n```bash\n$ git log --author=\"Daiki Iijima\"\n```\n","source":"_posts/【Git】コミットを探す.md","raw":"---\ntitle: 【Git】コミットを探す\ndate: 2021-04-03 00:40:37\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# コミットメッセージから探す\n`--grep`スイッチを使用して`=`に指定した文字列と一致するコミットメッセージのコミットを表示することができます。\n\n```bash\n$ git log --grep=test\n```\n\n# コミットした人物から探す\n`shortlog`でそのリポジトリにコミットした人ごとのコミットを表示して、その後`--ather`スイッチで人物を指定して指定した人物のコミットだけを表示させる\n\n- `shortlog`でメールアドレスを表示させるには`-e`スイッチをつける\n\n## 実行例\nユーザーごとにコミットが表示される\n```bash\n$ git shortlog\n\nDaiki Iijima(10)\n\t....\n\t....\n\t....\n\nKojima Yui(21)\n\t...\n\t...\n\t...\n```\n\n個人を指定して表示させる\n```bash\n$ git log --author=\"Daiki Iijima\"\n```\n","slug":"【Git】コミットを探す","published":1,"updated":"2021-04-05T15:28:58.206Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh38r001imzb670h1097b","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%8B%E3%82%89%E6%8E%A2%E3%81%99\">コミットメッセージから探す</a></li>\n<li><a href=\"#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%97%E3%81%9F%E4%BA%BA%E7%89%A9%E3%81%8B%E3%82%89%E6%8E%A2%E3%81%99\">コミットした人物から探す</a><ul>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E4%BE%8B\">実行例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"コミットメッセージから探す\">コミットメッセージから探す</span></h1><p><code>--grep</code>スイッチを使用して<code>=</code>に指定した文字列と一致するコミットメッセージのコミットを表示することができます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span> --grep=<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"コミットした人物から探す\">コミットした人物から探す</span></h1><p><code>shortlog</code>でそのリポジトリにコミットした人ごとのコミットを表示して、その後<code>--ather</code>スイッチで人物を指定して指定した人物のコミットだけを表示させる</p>\n<ul>\n<li><code>shortlog</code>でメールアドレスを表示させるには<code>-e</code>スイッチをつける</li>\n</ul>\n<h2><span id=\"実行例\">実行例</span></h2><p>ユーザーごとにコミットが表示される</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git shortlog</span><br><span class=\"line\"></span><br><span class=\"line\">Daiki Iijima(10)</span><br><span class=\"line\">\t....</span><br><span class=\"line\">\t....</span><br><span class=\"line\">\t....</span><br><span class=\"line\"></span><br><span class=\"line\">Kojima Yui(21)</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t...</span><br></pre></td></tr></table></figure>\n<p>個人を指定して表示させる</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span> --author=<span class=\"string\">&quot;Daiki Iijima&quot;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%8B%E3%82%89%E6%8E%A2%E3%81%99\">コミットメッセージから探す</a></li>\n<li><a href=\"#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%97%E3%81%9F%E4%BA%BA%E7%89%A9%E3%81%8B%E3%82%89%E6%8E%A2%E3%81%99\">コミットした人物から探す</a><ul>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E4%BE%8B\">実行例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"コミットメッセージから探す\"><a href=\"#コミットメッセージから探す\" class=\"headerlink\" title=\"コミットメッセージから探す\"></a>コミットメッセージから探す</h1><p><code>--grep</code>スイッチを使用して<code>=</code>に指定した文字列と一致するコミットメッセージのコミットを表示することができます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span> --grep=<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"コミットした人物から探す\"><a href=\"#コミットした人物から探す\" class=\"headerlink\" title=\"コミットした人物から探す\"></a>コミットした人物から探す</h1><p><code>shortlog</code>でそのリポジトリにコミットした人ごとのコミットを表示して、その後<code>--ather</code>スイッチで人物を指定して指定した人物のコミットだけを表示させる</p>\n<ul>\n<li><code>shortlog</code>でメールアドレスを表示させるには<code>-e</code>スイッチをつける</li>\n</ul>\n<h2 id=\"実行例\"><a href=\"#実行例\" class=\"headerlink\" title=\"実行例\"></a>実行例</h2><p>ユーザーごとにコミットが表示される</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git shortlog</span><br><span class=\"line\"></span><br><span class=\"line\">Daiki Iijima(10)</span><br><span class=\"line\">\t....</span><br><span class=\"line\">\t....</span><br><span class=\"line\">\t....</span><br><span class=\"line\"></span><br><span class=\"line\">Kojima Yui(21)</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t...</span><br></pre></td></tr></table></figure>\n<p>個人を指定して表示させる</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span> --author=<span class=\"string\">&quot;Daiki Iijima&quot;</span></span><br></pre></td></tr></table></figure>"},{"title":"【Git】pullは何をしているのか","date":"2021-04-01T15:21:33.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# pullとは\npullとは、ローカルリポジトリとリモートリポジトリを`同期`させる行為です。\n\ngit push とgit pull は対になっているコマンドに感じますが、実際に内部で行っている処理は、git pullのほうが複雑です。\n\ngit pushはクリーン(fast-forward)マージを強制されます。しかし、git pullの場合はクリーンマージができないケースがあります。(内部でコミットしている場合)\n\n## fetchとmerge\n- fetch : リモートリポジトリのリファレンス(ブランチやタグ)をローカルリポジトリのリモート追跡ブランチ(FETCH_HEADの位置)を更新します。\n- merge : 今いるブランチへ他のブランチを取り込みます。\n\n# pullは内部で何をしているのか\n`git pull`では、`git fetch`から`git merge FETCH_HEAD`の順で処理をしています。\n\nなぜ、`merge`が発生するのかというと、gitではリモートの状態をローカル環境で`リモート追跡ブランチとして、管理しています。このリモート管理ブランチの先頭を`FETCH_HEAD`として定義しています。\nつまり、リモート追跡ブランチを今いるブランチへマージすることで、リモートリポジトリの`FETCH_HEAD`の次のコミットを作ることで、ブランチを同期させています。\n","source":"_posts/【Git】pullは何をしているのか.md","raw":"---\ntitle: 【Git】pullは何をしているのか\ndate: 2021-04-02 00:21:33\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# pullとは\npullとは、ローカルリポジトリとリモートリポジトリを`同期`させる行為です。\n\ngit push とgit pull は対になっているコマンドに感じますが、実際に内部で行っている処理は、git pullのほうが複雑です。\n\ngit pushはクリーン(fast-forward)マージを強制されます。しかし、git pullの場合はクリーンマージができないケースがあります。(内部でコミットしている場合)\n\n## fetchとmerge\n- fetch : リモートリポジトリのリファレンス(ブランチやタグ)をローカルリポジトリのリモート追跡ブランチ(FETCH_HEADの位置)を更新します。\n- merge : 今いるブランチへ他のブランチを取り込みます。\n\n# pullは内部で何をしているのか\n`git pull`では、`git fetch`から`git merge FETCH_HEAD`の順で処理をしています。\n\nなぜ、`merge`が発生するのかというと、gitではリモートの状態をローカル環境で`リモート追跡ブランチとして、管理しています。このリモート管理ブランチの先頭を`FETCH_HEAD`として定義しています。\nつまり、リモート追跡ブランチを今いるブランチへマージすることで、リモートリポジトリの`FETCH_HEAD`の次のコミットを作ることで、ブランチを同期させています。\n","slug":"【Git】pullは何をしているのか","published":1,"updated":"2021-04-05T15:23:49.007Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh38u001kmzb6730n16yi","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#pull%E3%81%A8%E3%81%AF\">pullとは</a><ul>\n<li><a href=\"#fetch%E3%81%A8merge\">fetchとmerge</a></li>\n</ul>\n</li>\n<li><a href=\"#pull%E3%81%AF%E5%86%85%E9%83%A8%E3%81%A7%E4%BD%95%E3%82%92%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AE%E3%81%8B\">pullは内部で何をしているのか</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"pullとは\">pullとは</span></h1><p>pullとは、ローカルリポジトリとリモートリポジトリを<code>同期</code>させる行為です。</p>\n<p>git push とgit pull は対になっているコマンドに感じますが、実際に内部で行っている処理は、git pullのほうが複雑です。</p>\n<p>git pushはクリーン(fast-forward)マージを強制されます。しかし、git pullの場合はクリーンマージができないケースがあります。(内部でコミットしている場合)</p>\n<h2><span id=\"fetchとmerge\">fetchとmerge</span></h2><ul>\n<li>fetch : リモートリポジトリのリファレンス(ブランチやタグ)をローカルリポジトリのリモート追跡ブランチ(FETCH_HEADの位置)を更新します。</li>\n<li>merge : 今いるブランチへ他のブランチを取り込みます。</li>\n</ul>\n<h1><span id=\"pullは内部で何をしているのか\">pullは内部で何をしているのか</span></h1><p><code>git pull</code>では、<code>git fetch</code>から<code>git merge FETCH_HEAD</code>の順で処理をしています。</p>\n<p>なぜ、<code>merge</code>が発生するのかというと、gitではリモートの状態をローカル環境で<code>リモート追跡ブランチとして、管理しています。このリモート管理ブランチの先頭を</code>FETCH_HEAD<code>として定義しています。 つまり、リモート追跡ブランチを今いるブランチへマージすることで、リモートリポジトリの</code>FETCH_HEAD`の次のコミットを作ることで、ブランチを同期させています。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#pull%E3%81%A8%E3%81%AF\">pullとは</a><ul>\n<li><a href=\"#fetch%E3%81%A8merge\">fetchとmerge</a></li>\n</ul>\n</li>\n<li><a href=\"#pull%E3%81%AF%E5%86%85%E9%83%A8%E3%81%A7%E4%BD%95%E3%82%92%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AE%E3%81%8B\">pullは内部で何をしているのか</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"pullとは\"><a href=\"#pullとは\" class=\"headerlink\" title=\"pullとは\"></a>pullとは</h1><p>pullとは、ローカルリポジトリとリモートリポジトリを<code>同期</code>させる行為です。</p>\n<p>git push とgit pull は対になっているコマンドに感じますが、実際に内部で行っている処理は、git pullのほうが複雑です。</p>\n<p>git pushはクリーン(fast-forward)マージを強制されます。しかし、git pullの場合はクリーンマージができないケースがあります。(内部でコミットしている場合)</p>\n<h2 id=\"fetchとmerge\"><a href=\"#fetchとmerge\" class=\"headerlink\" title=\"fetchとmerge\"></a>fetchとmerge</h2><ul>\n<li>fetch : リモートリポジトリのリファレンス(ブランチやタグ)をローカルリポジトリのリモート追跡ブランチ(FETCH_HEADの位置)を更新します。</li>\n<li>merge : 今いるブランチへ他のブランチを取り込みます。</li>\n</ul>\n<h1 id=\"pullは内部で何をしているのか\"><a href=\"#pullは内部で何をしているのか\" class=\"headerlink\" title=\"pullは内部で何をしているのか\"></a>pullは内部で何をしているのか</h1><p><code>git pull</code>では、<code>git fetch</code>から<code>git merge FETCH_HEAD</code>の順で処理をしています。</p>\n<p>なぜ、<code>merge</code>が発生するのかというと、gitではリモートの状態をローカル環境で<code>リモート追跡ブランチとして、管理しています。このリモート管理ブランチの先頭を</code>FETCH_HEAD<code>として定義しています。 つまり、リモート追跡ブランチを今いるブランチへマージすることで、リモートリポジトリの</code>FETCH_HEAD`の次のコミットを作ることで、ブランチを同期させています。</p>"},{"title":"【Git】「waring/ LF will be replaced by CRLF in XXX」が出た時の対処法","date":"2021-03-18T16:16:07.000Z","_content":"## 目次\n<!-- toc -->\n<!-- more -->\n\n## この警告はなにか\n- Gitが`LF改行コード`を`CRLF改行コード`に自動変換したことによる警告\n- WindowsでGitを使用している場合、`git add`したときに表示されることがある\n\n### LF改行コードとCRLF改行コードとはなにか\n- LF改行コード\n\t- LF = Line Feed(改行)\n\t- カーソルを新しい行に移動させる\n\t- `Unix`,`Linux`,`macOS(9以降)`などのOSで使用される改行コード\n\n- CRLF改行コード\n\t- CRLF = CR + LF\n\t- カーソルを左端の位置に戻し、新しい行に移動すること\n\t- `Windows`OSで使用されている改行コード\n\n- CR改行コード\n\t- CR = Carriage Return(復帰)\n\t- カーソルを左側に戻す\n\t- macOS(9以前)で使用されている改行コード\n\n## 解決策\nwindows と widnowsのやり取りしかしない場合は、以下のコードで`waring`を出さないような設定にできるが、CRLF改行コードを使っていないOSとのやり取りがある場合、行末で問題が発生する可能性を検知できなくなる\n\n- gitのconfigの`改行コード自動変換プロパティ`をオフにする\n\n```\ngit config --global core.autoCRLF false\n```\n\n## 参考\n- [LFをCRLFに置き換えてもいいのか](https://stackoverflow.com/questions/5834014/lf-will-be-replaced-by-crlf-in-git-what-is-that-and-is-it-important)\n- [改行コードについて](https://vba-create.jp/vba-standard-cr-lf-crlf/)\n- [LF will be reqlacedについて](https://normalblog.net/system/lf_replaced_crlf/)\n","source":"_posts/【Git】「waring-LF-will-be-replaced-by-CRLF-in-XXX」が出た時の対処法.md","raw":"---\ntitle: 【Git】「waring/ LF will be replaced by CRLF in XXX」が出た時の対処法\ndate: 2021-03-19 01:16:07\ntags:\n- Git\n---\n## 目次\n<!-- toc -->\n<!-- more -->\n\n## この警告はなにか\n- Gitが`LF改行コード`を`CRLF改行コード`に自動変換したことによる警告\n- WindowsでGitを使用している場合、`git add`したときに表示されることがある\n\n### LF改行コードとCRLF改行コードとはなにか\n- LF改行コード\n\t- LF = Line Feed(改行)\n\t- カーソルを新しい行に移動させる\n\t- `Unix`,`Linux`,`macOS(9以降)`などのOSで使用される改行コード\n\n- CRLF改行コード\n\t- CRLF = CR + LF\n\t- カーソルを左端の位置に戻し、新しい行に移動すること\n\t- `Windows`OSで使用されている改行コード\n\n- CR改行コード\n\t- CR = Carriage Return(復帰)\n\t- カーソルを左側に戻す\n\t- macOS(9以前)で使用されている改行コード\n\n## 解決策\nwindows と widnowsのやり取りしかしない場合は、以下のコードで`waring`を出さないような設定にできるが、CRLF改行コードを使っていないOSとのやり取りがある場合、行末で問題が発生する可能性を検知できなくなる\n\n- gitのconfigの`改行コード自動変換プロパティ`をオフにする\n\n```\ngit config --global core.autoCRLF false\n```\n\n## 参考\n- [LFをCRLFに置き換えてもいいのか](https://stackoverflow.com/questions/5834014/lf-will-be-replaced-by-crlf-in-git-what-is-that-and-is-it-important)\n- [改行コードについて](https://vba-create.jp/vba-standard-cr-lf-crlf/)\n- [LF will be reqlacedについて](https://normalblog.net/system/lf_replaced_crlf/)\n","slug":"【Git】「waring-LF-will-be-replaced-by-CRLF-in-XXX」が出た時の対処法","published":1,"updated":"2021-03-25T16:27:16.896Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh391001nmzb613m0874m","content":"<h2><span id=\"目次\">目次</span></h2><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%81%93%E3%81%AE%E8%AD%A6%E5%91%8A%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\">この警告はなにか</a><ul>\n<li><a href=\"#lf%E6%94%B9%E8%A1%8C%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A8crlf%E6%94%B9%E8%A1%8C%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A8%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\">LF改行コードとCRLF改行コードとはなにか</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96\">解決策</a></li>\n<li><a href=\"#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h2><span id=\"この警告はなにか\">この警告はなにか</span></h2><ul>\n<li>Gitが<code>LF改行コード</code>を<code>CRLF改行コード</code>に自動変換したことによる警告</li>\n<li>WindowsでGitを使用している場合、<code>git add</code>したときに表示されることがある</li>\n</ul>\n<h3><span id=\"lf改行コードとcrlf改行コードとはなにか\">LF改行コードとCRLF改行コードとはなにか</span></h3><ul>\n<li><p>LF改行コード</p>\n<ul>\n<li>LF = Line Feed(改行)</li>\n<li>カーソルを新しい行に移動させる</li>\n<li><code>Unix</code>,<code>Linux</code>,<code>macOS(9以降)</code>などのOSで使用される改行コード</li>\n</ul>\n</li>\n<li><p>CRLF改行コード</p>\n<ul>\n<li>CRLF = CR + LF</li>\n<li>カーソルを左端の位置に戻し、新しい行に移動すること</li>\n<li><code>Windows</code>OSで使用されている改行コード</li>\n</ul>\n</li>\n<li><p>CR改行コード</p>\n<ul>\n<li>CR = Carriage Return(復帰)</li>\n<li>カーソルを左側に戻す</li>\n<li>macOS(9以前)で使用されている改行コード</li>\n</ul>\n</li>\n</ul>\n<h2><span id=\"解決策\">解決策</span></h2><p>windows と widnowsのやり取りしかしない場合は、以下のコードで<code>waring</code>を出さないような設定にできるが、CRLF改行コードを使っていないOSとのやり取りがある場合、行末で問題が発生する可能性を検知できなくなる</p>\n<ul>\n<li>gitのconfigの<code>改行コード自動変換プロパティ</code>をオフにする</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global core.autoCRLF false</span><br></pre></td></tr></table></figure>\n<h2><span id=\"参考\">参考</span></h2><ul>\n<li><a href=\"https://stackoverflow.com/questions/5834014/lf-will-be-replaced-by-crlf-in-git-what-is-that-and-is-it-important\">LFをCRLFに置き換えてもいいのか</a></li>\n<li><a href=\"https://vba-create.jp/vba-standard-cr-lf-crlf/\">改行コードについて</a></li>\n<li><a href=\"https://normalblog.net/system/lf_replaced_crlf/\">LF will be reqlacedについて</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%81%93%E3%81%AE%E8%AD%A6%E5%91%8A%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\">この警告はなにか</a><ul>\n<li><a href=\"#lf%E6%94%B9%E8%A1%8C%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A8crlf%E6%94%B9%E8%A1%8C%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A8%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\">LF改行コードとCRLF改行コードとはなにか</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96\">解決策</a></li>\n<li><a href=\"#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>\n<!-- tocstop -->","more":"<h2 id=\"この警告はなにか\"><a href=\"#この警告はなにか\" class=\"headerlink\" title=\"この警告はなにか\"></a>この警告はなにか</h2><ul>\n<li>Gitが<code>LF改行コード</code>を<code>CRLF改行コード</code>に自動変換したことによる警告</li>\n<li>WindowsでGitを使用している場合、<code>git add</code>したときに表示されることがある</li>\n</ul>\n<h3 id=\"LF改行コードとCRLF改行コードとはなにか\"><a href=\"#LF改行コードとCRLF改行コードとはなにか\" class=\"headerlink\" title=\"LF改行コードとCRLF改行コードとはなにか\"></a>LF改行コードとCRLF改行コードとはなにか</h3><ul>\n<li><p>LF改行コード</p>\n<ul>\n<li>LF = Line Feed(改行)</li>\n<li>カーソルを新しい行に移動させる</li>\n<li><code>Unix</code>,<code>Linux</code>,<code>macOS(9以降)</code>などのOSで使用される改行コード</li>\n</ul>\n</li>\n<li><p>CRLF改行コード</p>\n<ul>\n<li>CRLF = CR + LF</li>\n<li>カーソルを左端の位置に戻し、新しい行に移動すること</li>\n<li><code>Windows</code>OSで使用されている改行コード</li>\n</ul>\n</li>\n<li><p>CR改行コード</p>\n<ul>\n<li>CR = Carriage Return(復帰)</li>\n<li>カーソルを左側に戻す</li>\n<li>macOS(9以前)で使用されている改行コード</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"解決策\"><a href=\"#解決策\" class=\"headerlink\" title=\"解決策\"></a>解決策</h2><p>windows と widnowsのやり取りしかしない場合は、以下のコードで<code>waring</code>を出さないような設定にできるが、CRLF改行コードを使っていないOSとのやり取りがある場合、行末で問題が発生する可能性を検知できなくなる</p>\n<ul>\n<li>gitのconfigの<code>改行コード自動変換プロパティ</code>をオフにする</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global core.autoCRLF false</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://stackoverflow.com/questions/5834014/lf-will-be-replaced-by-crlf-in-git-what-is-that-and-is-it-important\">LFをCRLFに置き換えてもいいのか</a></li>\n<li><a href=\"https://vba-create.jp/vba-standard-cr-lf-crlf/\">改行コードについて</a></li>\n<li><a href=\"https://normalblog.net/system/lf_replaced_crlf/\">LF will be reqlacedについて</a></li>\n</ul>"},{"title":"【Blog】GoogleSerchConsoleにブログを認識させる","date":"2021-04-01T14:30:12.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# サイトからHTMLファイルをダウンロードする\n[Google Serch Console](https://search.google.com/search-console/about?hl=ja)\n\n![GoogleSerchConsole](/2021/04/01/【Blog】GoogleSerchConsoleにブログを認識させる/1.png \"GoogleSerchConsole\")\n\nURLプレフィックスを選択して、入力欄に自分のブログを入力\n\n![入力画面](/2021/04/01/【blog】googleserchconsoleにブログを認識させる/2.png \"入力画面\")\n\n所有権の確認ウィンドウが表示されるので、htmlファイル内のファイルをダウンロードで表示されているファイルをダウンロードする\n\n![ダウンロード](/2021/04/01/【blog】googleserchconsoleにブログを認識させる/3.png \"ダウンロード\")\n\n# (hexo)ダウンロードしたファイルを配置する\nhexoの場合は、以下ディレクトリに配置する\n\n```bash\nリポジトリ/public/ダウンロードした.html\n```\n\n# ファイルをアップロードする\nブログを更新するのと同じ用に、デプロイする\n\n# google serch consoleで認識する\nもう一度、\n[Google Serch Console](https://search.google.com/search-console/about?hl=ja)に戻り、確認ボタンを押して、確認が取れました画面が出ればOK\n","source":"_posts/【Blog】GoogleSerchConsoleにブログを認識させる.md","raw":"---\ntitle: 【Blog】GoogleSerchConsoleにブログを認識させる\ndate: 2021-04-01 23:30:12\ntags:\n- Hexo\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# サイトからHTMLファイルをダウンロードする\n[Google Serch Console](https://search.google.com/search-console/about?hl=ja)\n\n![GoogleSerchConsole](/2021/04/01/【Blog】GoogleSerchConsoleにブログを認識させる/1.png \"GoogleSerchConsole\")\n\nURLプレフィックスを選択して、入力欄に自分のブログを入力\n\n![入力画面](/2021/04/01/【blog】googleserchconsoleにブログを認識させる/2.png \"入力画面\")\n\n所有権の確認ウィンドウが表示されるので、htmlファイル内のファイルをダウンロードで表示されているファイルをダウンロードする\n\n![ダウンロード](/2021/04/01/【blog】googleserchconsoleにブログを認識させる/3.png \"ダウンロード\")\n\n# (hexo)ダウンロードしたファイルを配置する\nhexoの場合は、以下ディレクトリに配置する\n\n```bash\nリポジトリ/public/ダウンロードした.html\n```\n\n# ファイルをアップロードする\nブログを更新するのと同じ用に、デプロイする\n\n# google serch consoleで認識する\nもう一度、\n[Google Serch Console](https://search.google.com/search-console/about?hl=ja)に戻り、確認ボタンを押して、確認が取れました画面が出ればOK\n","slug":"【Blog】GoogleSerchConsoleにブログを認識させる","published":1,"updated":"2021-04-05T15:23:34.492Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh395001pmzb6at8wdp4g","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%82%B5%E3%82%A4%E3%83%88%E3%81%8B%E3%82%89html%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B\">サイトからHTMLファイルをダウンロードする</a></li>\n<li><a href=\"#hexo%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%97%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E9%85%8D%E7%BD%AE%E3%81%99%E3%82%8B\">(hexo)ダウンロードしたファイルを配置する</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B\">ファイルをアップロードする</a></li>\n<li><a href=\"#google-serch-console%E3%81%A7%E8%AA%8D%E8%AD%98%E3%81%99%E3%82%8B\">google serch consoleで認識する</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"サイトからhtmlファイルをダウンロードする\">サイトからHTMLファイルをダウンロードする</span></h1><p><a href=\"https://search.google.com/search-console/about?hl=ja\">Google Serch Console</a></p>\n<p><img src=\"/2021/04/01/%E3%80%90Blog%E3%80%91GoogleSerchConsole%E3%81%AB%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E8%AA%8D%E8%AD%98%E3%81%95%E3%81%9B%E3%82%8B/1.png\" alt=\"GoogleSerchConsole\" title=\"GoogleSerchConsole\"></p>\n<p>URLプレフィックスを選択して、入力欄に自分のブログを入力</p>\n<p><img src=\"/2021/04/01/%E3%80%90blog%E3%80%91googleserchconsole%E3%81%AB%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E8%AA%8D%E8%AD%98%E3%81%95%E3%81%9B%E3%82%8B/2.png\" alt=\"入力画面\" title=\"入力画面\"></p>\n<p>所有権の確認ウィンドウが表示されるので、htmlファイル内のファイルをダウンロードで表示されているファイルをダウンロードする</p>\n<p><img src=\"/2021/04/01/%E3%80%90blog%E3%80%91googleserchconsole%E3%81%AB%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E8%AA%8D%E8%AD%98%E3%81%95%E3%81%9B%E3%82%8B/3.png\" alt=\"ダウンロード\" title=\"ダウンロード\"></p>\n<h1><span id=\"hexoダウンロードしたファイルを配置する\">(hexo)ダウンロードしたファイルを配置する</span></h1><p>hexoの場合は、以下ディレクトリに配置する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">リポジトリ/public/ダウンロードした.html</span><br></pre></td></tr></table></figure>\n<h1><span id=\"ファイルをアップロードする\">ファイルをアップロードする</span></h1><p>ブログを更新するのと同じ用に、デプロイする</p>\n<h1><span id=\"google-serch-consoleで認識する\">google serch consoleで認識する</span></h1><p>もう一度、<br><a href=\"https://search.google.com/search-console/about?hl=ja\">Google Serch Console</a>に戻り、確認ボタンを押して、確認が取れました画面が出ればOK</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%82%B5%E3%82%A4%E3%83%88%E3%81%8B%E3%82%89html%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B\">サイトからHTMLファイルをダウンロードする</a></li>\n<li><a href=\"#hexo%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%97%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E9%85%8D%E7%BD%AE%E3%81%99%E3%82%8B\">(hexo)ダウンロードしたファイルを配置する</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B\">ファイルをアップロードする</a></li>\n<li><a href=\"#google-serch-console%E3%81%A7%E8%AA%8D%E8%AD%98%E3%81%99%E3%82%8B\">google serch consoleで認識する</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"サイトからHTMLファイルをダウンロードする\"><a href=\"#サイトからHTMLファイルをダウンロードする\" class=\"headerlink\" title=\"サイトからHTMLファイルをダウンロードする\"></a>サイトからHTMLファイルをダウンロードする</h1><p><a href=\"https://search.google.com/search-console/about?hl=ja\">Google Serch Console</a></p>\n<p><img src=\"/2021/04/01/%E3%80%90Blog%E3%80%91GoogleSerchConsole%E3%81%AB%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E8%AA%8D%E8%AD%98%E3%81%95%E3%81%9B%E3%82%8B/1.png\" alt=\"GoogleSerchConsole\" title=\"GoogleSerchConsole\"></p>\n<p>URLプレフィックスを選択して、入力欄に自分のブログを入力</p>\n<p><img src=\"/2021/04/01/%E3%80%90blog%E3%80%91googleserchconsole%E3%81%AB%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E8%AA%8D%E8%AD%98%E3%81%95%E3%81%9B%E3%82%8B/2.png\" alt=\"入力画面\" title=\"入力画面\"></p>\n<p>所有権の確認ウィンドウが表示されるので、htmlファイル内のファイルをダウンロードで表示されているファイルをダウンロードする</p>\n<p><img src=\"/2021/04/01/%E3%80%90blog%E3%80%91googleserchconsole%E3%81%AB%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E8%AA%8D%E8%AD%98%E3%81%95%E3%81%9B%E3%82%8B/3.png\" alt=\"ダウンロード\" title=\"ダウンロード\"></p>\n<h1 id=\"hexo-ダウンロードしたファイルを配置する\"><a href=\"#hexo-ダウンロードしたファイルを配置する\" class=\"headerlink\" title=\"(hexo)ダウンロードしたファイルを配置する\"></a>(hexo)ダウンロードしたファイルを配置する</h1><p>hexoの場合は、以下ディレクトリに配置する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">リポジトリ/public/ダウンロードした.html</span><br></pre></td></tr></table></figure>\n<h1 id=\"ファイルをアップロードする\"><a href=\"#ファイルをアップロードする\" class=\"headerlink\" title=\"ファイルをアップロードする\"></a>ファイルをアップロードする</h1><p>ブログを更新するのと同じ用に、デプロイする</p>\n<h1 id=\"google-serch-consoleで認識する\"><a href=\"#google-serch-consoleで認識する\" class=\"headerlink\" title=\"google serch consoleで認識する\"></a>google serch consoleで認識する</h1><p>もう一度、<br><a href=\"https://search.google.com/search-console/about?hl=ja\">Google Serch Console</a>に戻り、確認ボタンを押して、確認が取れました画面が出ればOK</p>"},{"title":"【Git】コマンドラインの構文","date":"2021-03-07T17:33:53.000Z","_content":"## コマンドラインの構文の概要\n- git : 必須\n- [スイッチ] : オプション\n- <コマンド> : オプション\n- <引数>: オプション\n```\ngit [スイッチ]<コマンド><引数>\n```\n\n## ヘルプにも同じような構文の記述がされている\n```\nusage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n```\n\n| コマンド                                                           | 説明                                                               | 参考                                                        | \n|----------------------------------------------------------------|------------------------------------------------------------------|-----------------------------------------------------------| \n| --version                                                      | バージョン確認                                                          |                                                           | \n| --help                                                         | 概要と最も一般的に使用されるコマンドのリストを出力                                        |                                                           | \n| -C <path>                                                      | カレントディレクトリではなく<path>に指定したディレクトリで`Git`実行する                        |                                                           | \n| -c <name>=<value>                                              | 設定ファイルの<name>に指定した項目の値を<value>で設定した値を上書きする                       |                                                           | \n| --exec-path[=<path>]                                           | Gitのコアファイルのパスを出力する。パスを設定することもできる。                                |                                                           | \n| --html-path                                                    | ドキュメントファイルの補完されているパスを出力する                                        |                                                           | \n| --man-path                                                     | Gitのmanファイルが格納されているパスを出力する                                       |                                                           | \n| --info-path                                                    | Gitのドキュメントを文書かしたファイルがあるパスを出力する(私の環境ではパスは表示されたが、パスが存在しなかった)       |                                                           | \n| -P \\| --paginate                                               | ページャーに出力をパイプする                                                   |                                                           | \n| -p \\| --no-paginate                                            | ページャーに出力をパイプしないようにする                                             |                                                           | \n| --no-replace-objects                                           | Gitオブジェクトを置換しない                                                  | https://git-scm.com/docs/git-replace                      | \n| --bare                                                         | ベアリポジトリとして扱う                                                     | https://qiita.com/devzooiiooz/items/56a02342d9d65d79f6c3<br>https://cpplover.blogspot.com/2015/04/git10linus-torvals.html |                                                                  |                                                           | \n| --git-dir=<path>                                               | リポジトリへのパスを設定する(環境変数 GIT_DIR を設定するのと同じ)                           |                                                           | \n| --work-tree=<path>                                             | 作業ツリーへのパスを設定する(環境変数 GIT_WORK_TREE や設定変数 core.worktree を設定するのと同じ) |                                                           | \n| --namespace=<path>                                             | Gitの名前空間を設定する(環境変数 git_namespace を設定するのと同じ)                      |                                                           | \n\n\n## ダッシュ(-)1個とダッシュ(--)の使い分け\n- 1つ(-) : １文字のスイッチ(省略型)\n- 2つ(--) : 略さずに完全に記述する長いスイッチ\n","source":"_posts/【Git】コマンドラインの構文.md","raw":"---\ntitle: 【Git】コマンドラインの構文\ndate: 2021-03-08 02:33:53\ntags:\n- Git\n---\n## コマンドラインの構文の概要\n- git : 必須\n- [スイッチ] : オプション\n- <コマンド> : オプション\n- <引数>: オプション\n```\ngit [スイッチ]<コマンド><引数>\n```\n\n## ヘルプにも同じような構文の記述がされている\n```\nusage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n```\n\n| コマンド                                                           | 説明                                                               | 参考                                                        | \n|----------------------------------------------------------------|------------------------------------------------------------------|-----------------------------------------------------------| \n| --version                                                      | バージョン確認                                                          |                                                           | \n| --help                                                         | 概要と最も一般的に使用されるコマンドのリストを出力                                        |                                                           | \n| -C <path>                                                      | カレントディレクトリではなく<path>に指定したディレクトリで`Git`実行する                        |                                                           | \n| -c <name>=<value>                                              | 設定ファイルの<name>に指定した項目の値を<value>で設定した値を上書きする                       |                                                           | \n| --exec-path[=<path>]                                           | Gitのコアファイルのパスを出力する。パスを設定することもできる。                                |                                                           | \n| --html-path                                                    | ドキュメントファイルの補完されているパスを出力する                                        |                                                           | \n| --man-path                                                     | Gitのmanファイルが格納されているパスを出力する                                       |                                                           | \n| --info-path                                                    | Gitのドキュメントを文書かしたファイルがあるパスを出力する(私の環境ではパスは表示されたが、パスが存在しなかった)       |                                                           | \n| -P \\| --paginate                                               | ページャーに出力をパイプする                                                   |                                                           | \n| -p \\| --no-paginate                                            | ページャーに出力をパイプしないようにする                                             |                                                           | \n| --no-replace-objects                                           | Gitオブジェクトを置換しない                                                  | https://git-scm.com/docs/git-replace                      | \n| --bare                                                         | ベアリポジトリとして扱う                                                     | https://qiita.com/devzooiiooz/items/56a02342d9d65d79f6c3<br>https://cpplover.blogspot.com/2015/04/git10linus-torvals.html |                                                                  |                                                           | \n| --git-dir=<path>                                               | リポジトリへのパスを設定する(環境変数 GIT_DIR を設定するのと同じ)                           |                                                           | \n| --work-tree=<path>                                             | 作業ツリーへのパスを設定する(環境変数 GIT_WORK_TREE や設定変数 core.worktree を設定するのと同じ) |                                                           | \n| --namespace=<path>                                             | Gitの名前空間を設定する(環境変数 git_namespace を設定するのと同じ)                      |                                                           | \n\n\n## ダッシュ(-)1個とダッシュ(--)の使い分け\n- 1つ(-) : １文字のスイッチ(省略型)\n- 2つ(--) : 略さずに完全に記述する長いスイッチ\n","slug":"【Git】コマンドラインの構文","published":1,"updated":"2021-03-08T08:43:54.470Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh39k001rmzb62daw1am1","content":"<h2><span id=\"コマンドラインの構文の概要\">コマンドラインの構文の概要</span></h2><ul>\n<li>git : 必須</li>\n<li>[スイッチ] : オプション</li>\n<li>&lt;コマンド&gt; : オプション</li>\n<li>&lt;引数&gt;: オプション<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git [スイッチ]&lt;コマンド&gt;&lt;引数&gt;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"ヘルプにも同じような構文の記述がされている\">ヘルプにも同じような構文の記述がされている</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usage: git [--version] [--help] [-C &lt;path&gt;] [-c &lt;name&gt;&#x3D;&lt;value&gt;]</span><br><span class=\"line\">           [--exec-path[&#x3D;&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class=\"line\">           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]</span><br><span class=\"line\">           [--git-dir&#x3D;&lt;path&gt;] [--work-tree&#x3D;&lt;path&gt;] [--namespace&#x3D;&lt;name&gt;]</span><br><span class=\"line\">           &lt;command&gt; [&lt;args&gt;]</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>コマンド</th>\n<th>説明</th>\n<th>参考</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>–version</td>\n<td>バージョン確認</td>\n<td></td>\n</tr>\n<tr>\n<td>–help</td>\n<td>概要と最も一般的に使用されるコマンドのリストを出力</td>\n<td></td>\n</tr>\n<tr>\n<td>-C <path></path></td>\n<td>カレントディレクトリではなく<path></path>に指定したディレクトリで<code>Git</code>実行する</td>\n<td></td>\n</tr>\n<tr>\n<td>-c <name>=<value></value></name></td>\n<td>設定ファイルの<name>に指定した項目の値を<value>で設定した値を上書きする</value></name></td>\n<td></td>\n</tr>\n<tr>\n<td>–exec-path[=<path></path>]</td>\n<td>Gitのコアファイルのパスを出力する。パスを設定することもできる。</td>\n<td></td>\n</tr>\n<tr>\n<td>–html-path</td>\n<td>ドキュメントファイルの補完されているパスを出力する</td>\n<td></td>\n</tr>\n<tr>\n<td>–man-path</td>\n<td>Gitのmanファイルが格納されているパスを出力する</td>\n<td></td>\n</tr>\n<tr>\n<td>–info-path</td>\n<td>Gitのドキュメントを文書かしたファイルがあるパスを出力する(私の環境ではパスは表示されたが、パスが存在しなかった)</td>\n<td></td>\n</tr>\n<tr>\n<td>-P | –paginate</td>\n<td>ページャーに出力をパイプする</td>\n<td></td>\n</tr>\n<tr>\n<td>-p | –no-paginate</td>\n<td>ページャーに出力をパイプしないようにする</td>\n<td></td>\n</tr>\n<tr>\n<td>–no-replace-objects</td>\n<td>Gitオブジェクトを置換しない</td>\n<td><a href=\"https://git-scm.com/docs/git-replace\">https://git-scm.com/docs/git-replace</a></td>\n</tr>\n<tr>\n<td>–bare</td>\n<td>ベアリポジトリとして扱う</td>\n<td><a href=\"https://qiita.com/devzooiiooz/items/56a02342d9d65d79f6c3\">https://qiita.com/devzooiiooz/items/56a02342d9d65d79f6c3</a><br><a href=\"https://cpplover.blogspot.com/2015/04/git10linus-torvals.html\">https://cpplover.blogspot.com/2015/04/git10linus-torvals.html</a></td>\n</tr>\n<tr>\n<td>–git-dir=<path></path></td>\n<td>リポジトリへのパスを設定する(環境変数 GIT_DIR を設定するのと同じ)</td>\n<td></td>\n</tr>\n<tr>\n<td>–work-tree=<path></path></td>\n<td>作業ツリーへのパスを設定する(環境変数 GIT_WORK_TREE や設定変数 core.worktree を設定するのと同じ)</td>\n<td></td>\n</tr>\n<tr>\n<td>–namespace=<path></path></td>\n<td>Gitの名前空間を設定する(環境変数 git_namespace を設定するのと同じ)</td>\n<td></td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h2><span id=\"ダッシュ-1個とダッシュの使い分け\">ダッシュ(-)1個とダッシュ(–)の使い分け</span></h2><ul>\n<li>1つ(-) : １文字のスイッチ(省略型)</li>\n<li>2つ(–) : 略さずに完全に記述する長いスイッチ</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"コマンドラインの構文の概要\"><a href=\"#コマンドラインの構文の概要\" class=\"headerlink\" title=\"コマンドラインの構文の概要\"></a>コマンドラインの構文の概要</h2><ul>\n<li>git : 必須</li>\n<li>[スイッチ] : オプション</li>\n<li>&lt;コマンド&gt; : オプション</li>\n<li>&lt;引数&gt;: オプション<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git [スイッチ]&lt;コマンド&gt;&lt;引数&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ヘルプにも同じような構文の記述がされている\"><a href=\"#ヘルプにも同じような構文の記述がされている\" class=\"headerlink\" title=\"ヘルプにも同じような構文の記述がされている\"></a>ヘルプにも同じような構文の記述がされている</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usage: git [--version] [--help] [-C &lt;path&gt;] [-c &lt;name&gt;&#x3D;&lt;value&gt;]</span><br><span class=\"line\">           [--exec-path[&#x3D;&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class=\"line\">           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]</span><br><span class=\"line\">           [--git-dir&#x3D;&lt;path&gt;] [--work-tree&#x3D;&lt;path&gt;] [--namespace&#x3D;&lt;name&gt;]</span><br><span class=\"line\">           &lt;command&gt; [&lt;args&gt;]</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>コマンド</th>\n<th>説明</th>\n<th>参考</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>–version</td>\n<td>バージョン確認</td>\n<td></td>\n</tr>\n<tr>\n<td>–help</td>\n<td>概要と最も一般的に使用されるコマンドのリストを出力</td>\n<td></td>\n</tr>\n<tr>\n<td>-C <path></td>\n<td>カレントディレクトリではなく<path>に指定したディレクトリで<code>Git</code>実行する</td>\n<td></td>\n</tr>\n<tr>\n<td>-c <name>=<value></td>\n<td>設定ファイルの<name>に指定した項目の値を<value>で設定した値を上書きする</td>\n<td></td>\n</tr>\n<tr>\n<td>–exec-path[=<path>]</td>\n<td>Gitのコアファイルのパスを出力する。パスを設定することもできる。</td>\n<td></td>\n</tr>\n<tr>\n<td>–html-path</td>\n<td>ドキュメントファイルの補完されているパスを出力する</td>\n<td></td>\n</tr>\n<tr>\n<td>–man-path</td>\n<td>Gitのmanファイルが格納されているパスを出力する</td>\n<td></td>\n</tr>\n<tr>\n<td>–info-path</td>\n<td>Gitのドキュメントを文書かしたファイルがあるパスを出力する(私の環境ではパスは表示されたが、パスが存在しなかった)</td>\n<td></td>\n</tr>\n<tr>\n<td>-P | –paginate</td>\n<td>ページャーに出力をパイプする</td>\n<td></td>\n</tr>\n<tr>\n<td>-p | –no-paginate</td>\n<td>ページャーに出力をパイプしないようにする</td>\n<td></td>\n</tr>\n<tr>\n<td>–no-replace-objects</td>\n<td>Gitオブジェクトを置換しない</td>\n<td><a href=\"https://git-scm.com/docs/git-replace\">https://git-scm.com/docs/git-replace</a></td>\n</tr>\n<tr>\n<td>–bare</td>\n<td>ベアリポジトリとして扱う</td>\n<td><a href=\"https://qiita.com/devzooiiooz/items/56a02342d9d65d79f6c3\">https://qiita.com/devzooiiooz/items/56a02342d9d65d79f6c3</a><br><a href=\"https://cpplover.blogspot.com/2015/04/git10linus-torvals.html\">https://cpplover.blogspot.com/2015/04/git10linus-torvals.html</a></td>\n</tr>\n<tr>\n<td>–git-dir=<path></td>\n<td>リポジトリへのパスを設定する(環境変数 GIT_DIR を設定するのと同じ)</td>\n<td></td>\n</tr>\n<tr>\n<td>–work-tree=<path></td>\n<td>作業ツリーへのパスを設定する(環境変数 GIT_WORK_TREE や設定変数 core.worktree を設定するのと同じ)</td>\n<td></td>\n</tr>\n<tr>\n<td>–namespace=<path></td>\n<td>Gitの名前空間を設定する(環境変数 git_namespace を設定するのと同じ)</td>\n<td></td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h2 id=\"ダッシュ-1個とダッシュ-–-の使い分け\"><a href=\"#ダッシュ-1個とダッシュ-–-の使い分け\" class=\"headerlink\" title=\"ダッシュ(-)1個とダッシュ(–)の使い分け\"></a>ダッシュ(-)1個とダッシュ(–)の使い分け</h2><ul>\n<li>1つ(-) : １文字のスイッチ(省略型)</li>\n<li>2つ(–) : 略さずに完全に記述する長いスイッチ</li>\n</ul>\n"},{"title":"【Git】タグの扱い方","date":"2021-03-12T19:03:54.000Z","_content":"## タグはなんのためにあるのか\n\nコミットを指定するために`SHA 1ID`を使用するが、毎回選択するのは面倒くさいし間違える可能性があるので、よく使う可能性のあるコミットに命名することで、いちいち`SHA 1ID`を指定しなくてよくできる\n\n## コミットにタグを追加する\n### タグをつける\n```shell-session\ngit tag タグ名 タグをつけたいSHA1\n```\n\n### タグをつけるときは、`-m`スイッチを使用すればメッセージをつけることもできる\n```shell-session\ngit tag タグ名 -m \"コメント\" タグをつけたいSHA1\n```\n\n## タグを消去する\n```shell-session\ngit tag -d タグ名\n```\n\nこれが表示されれば成功\n```shell-session\nDeleted tag 'タグ名' (was SHA1)\n```\n\n## タグの一覧を表示する\n\n```shell-session\ngit tag\n```\n","source":"_posts/【Git】タグの扱い方.md","raw":"---\ntitle: 【Git】タグの扱い方\ndate: 2021-03-13 04:03:54\ntags:\n- Git\n---\n## タグはなんのためにあるのか\n\nコミットを指定するために`SHA 1ID`を使用するが、毎回選択するのは面倒くさいし間違える可能性があるので、よく使う可能性のあるコミットに命名することで、いちいち`SHA 1ID`を指定しなくてよくできる\n\n## コミットにタグを追加する\n### タグをつける\n```shell-session\ngit tag タグ名 タグをつけたいSHA1\n```\n\n### タグをつけるときは、`-m`スイッチを使用すればメッセージをつけることもできる\n```shell-session\ngit tag タグ名 -m \"コメント\" タグをつけたいSHA1\n```\n\n## タグを消去する\n```shell-session\ngit tag -d タグ名\n```\n\nこれが表示されれば成功\n```shell-session\nDeleted tag 'タグ名' (was SHA1)\n```\n\n## タグの一覧を表示する\n\n```shell-session\ngit tag\n```\n","slug":"【Git】タグの扱い方","published":1,"updated":"2021-03-12T19:05:01.025Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh39l001tmzb6gv641loe","content":"<h2><span id=\"タグはなんのためにあるのか\">タグはなんのためにあるのか</span></h2><p>コミットを指定するために<code>SHA 1ID</code>を使用するが、毎回選択するのは面倒くさいし間違える可能性があるので、よく使う可能性のあるコミットに命名することで、いちいち<code>SHA 1ID</code>を指定しなくてよくできる</p>\n<h2><span id=\"コミットにタグを追加する\">コミットにタグを追加する</span></h2><h3><span id=\"タグをつける\">タグをつける</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag タグ名 タグをつけたいSHA1</span><br></pre></td></tr></table></figure>\n<h3><span id=\"タグをつけるときは-mスイッチを使用すればメッセージをつけることもできる\">タグをつけるときは、<code>-m</code>スイッチを使用すればメッセージをつけることもできる</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag タグ名 -m &quot;コメント&quot; タグをつけたいSHA1</span><br></pre></td></tr></table></figure>\n<h2><span id=\"タグを消去する\">タグを消去する</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d タグ名</span><br></pre></td></tr></table></figure>\n<p>これが表示されれば成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Deleted tag &#39;タグ名&#39; (was SHA1)</span><br></pre></td></tr></table></figure>\n<h2><span id=\"タグの一覧を表示する\">タグの一覧を表示する</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"タグはなんのためにあるのか\"><a href=\"#タグはなんのためにあるのか\" class=\"headerlink\" title=\"タグはなんのためにあるのか\"></a>タグはなんのためにあるのか</h2><p>コミットを指定するために<code>SHA 1ID</code>を使用するが、毎回選択するのは面倒くさいし間違える可能性があるので、よく使う可能性のあるコミットに命名することで、いちいち<code>SHA 1ID</code>を指定しなくてよくできる</p>\n<h2 id=\"コミットにタグを追加する\"><a href=\"#コミットにタグを追加する\" class=\"headerlink\" title=\"コミットにタグを追加する\"></a>コミットにタグを追加する</h2><h3 id=\"タグをつける\"><a href=\"#タグをつける\" class=\"headerlink\" title=\"タグをつける\"></a>タグをつける</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag タグ名 タグをつけたいSHA1</span><br></pre></td></tr></table></figure>\n<h3 id=\"タグをつけるときは、-mスイッチを使用すればメッセージをつけることもできる\"><a href=\"#タグをつけるときは、-mスイッチを使用すればメッセージをつけることもできる\" class=\"headerlink\" title=\"タグをつけるときは、-mスイッチを使用すればメッセージをつけることもできる\"></a>タグをつけるときは、<code>-m</code>スイッチを使用すればメッセージをつけることもできる</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag タグ名 -m &quot;コメント&quot; タグをつけたいSHA1</span><br></pre></td></tr></table></figure>\n<h2 id=\"タグを消去する\"><a href=\"#タグを消去する\" class=\"headerlink\" title=\"タグを消去する\"></a>タグを消去する</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d タグ名</span><br></pre></td></tr></table></figure>\n<p>これが表示されれば成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Deleted tag &#39;タグ名&#39; (was SHA1)</span><br></pre></td></tr></table></figure>\n<h2 id=\"タグの一覧を表示する\"><a href=\"#タグの一覧を表示する\" class=\"headerlink\" title=\"タグの一覧を表示する\"></a>タグの一覧を表示する</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>"},{"title":"【Git】ファイル名が日本語のときに文字化けするのを防ぐ","date":"2021-04-12T02:07:49.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 文字化けの原因\n日本語ファイル名の文字化けは、`diff`や`status`コマンドを使用するときに表示されます。つまり、ファイルパスを表示するときに表示されているということになります。\n\nファイルパスを出力するコマンドは、（-zオプションを付けてない時は）パスの中にある”unusual”な文字をバックスラッシュ付きのダブルクオーテーションで囲みます。\n\n`unusual`とは日本語訳で、`珍しい`という意味になるので、英語圏の方々が見ると日本語は珍しい言葉に当たるということでしょう。\n\n# 対処方法\n`unusual`な文字を特別な加工せずにそのまま出してもらえる用に設定を変更します。\n\n`--global`スイッチを使用しているので、この設定はGitシステム全体に適応されます。今いるディレクトリのgitシステムのみに適応させたい場合は、`--local`スイッチに置き換えて使用してください。\n```bash\ngit config --global core.quotepath false\n```\n","source":"_posts/【Git】ファイル名が日本語のときに文字化けするのを防ぐ.md","raw":"---\ntitle: 【Git】ファイル名が日本語のときに文字化けするのを防ぐ\ndate: 2021-04-12 11:07:49\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 文字化けの原因\n日本語ファイル名の文字化けは、`diff`や`status`コマンドを使用するときに表示されます。つまり、ファイルパスを表示するときに表示されているということになります。\n\nファイルパスを出力するコマンドは、（-zオプションを付けてない時は）パスの中にある”unusual”な文字をバックスラッシュ付きのダブルクオーテーションで囲みます。\n\n`unusual`とは日本語訳で、`珍しい`という意味になるので、英語圏の方々が見ると日本語は珍しい言葉に当たるということでしょう。\n\n# 対処方法\n`unusual`な文字を特別な加工せずにそのまま出してもらえる用に設定を変更します。\n\n`--global`スイッチを使用しているので、この設定はGitシステム全体に適応されます。今いるディレクトリのgitシステムのみに適応させたい場合は、`--local`スイッチに置き換えて使用してください。\n```bash\ngit config --global core.quotepath false\n```\n","slug":"【Git】ファイル名が日本語のときに文字化けするのを防ぐ","published":1,"updated":"2021-04-09T05:02:53.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh39m001wmzb6ba2ngzid","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%AE%E5%8E%9F%E5%9B%A0\">文字化けの原因</a></li>\n<li><a href=\"#%E5%AF%BE%E5%87%A6%E6%96%B9%E6%B3%95\">対処方法</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"文字化けの原因\">文字化けの原因</span></h1><p>日本語ファイル名の文字化けは、<code>diff</code>や<code>status</code>コマンドを使用するときに表示されます。つまり、ファイルパスを表示するときに表示されているということになります。</p>\n<p>ファイルパスを出力するコマンドは、（-zオプションを付けてない時は）パスの中にある”unusual”な文字をバックスラッシュ付きのダブルクオーテーションで囲みます。</p>\n<p><code>unusual</code>とは日本語訳で、<code>珍しい</code>という意味になるので、英語圏の方々が見ると日本語は珍しい言葉に当たるということでしょう。</p>\n<h1><span id=\"対処方法\">対処方法</span></h1><p><code>unusual</code>な文字を特別な加工せずにそのまま出してもらえる用に設定を変更します。</p>\n<p><code>--global</code>スイッチを使用しているので、この設定はGitシステム全体に適応されます。今いるディレクトリのgitシステムのみに適応させたい場合は、<code>--local</code>スイッチに置き換えて使用してください。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global core.quotepath <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%AE%E5%8E%9F%E5%9B%A0\">文字化けの原因</a></li>\n<li><a href=\"#%E5%AF%BE%E5%87%A6%E6%96%B9%E6%B3%95\">対処方法</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"文字化けの原因\"><a href=\"#文字化けの原因\" class=\"headerlink\" title=\"文字化けの原因\"></a>文字化けの原因</h1><p>日本語ファイル名の文字化けは、<code>diff</code>や<code>status</code>コマンドを使用するときに表示されます。つまり、ファイルパスを表示するときに表示されているということになります。</p>\n<p>ファイルパスを出力するコマンドは、（-zオプションを付けてない時は）パスの中にある”unusual”な文字をバックスラッシュ付きのダブルクオーテーションで囲みます。</p>\n<p><code>unusual</code>とは日本語訳で、<code>珍しい</code>という意味になるので、英語圏の方々が見ると日本語は珍しい言葉に当たるということでしょう。</p>\n<h1 id=\"対処方法\"><a href=\"#対処方法\" class=\"headerlink\" title=\"対処方法\"></a>対処方法</h1><p><code>unusual</code>な文字を特別な加工せずにそのまま出してもらえる用に設定を変更します。</p>\n<p><code>--global</code>スイッチを使用しているので、この設定はGitシステム全体に適応されます。今いるディレクトリのgitシステムのみに適応させたい場合は、<code>--local</code>スイッチに置き換えて使用してください。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global core.quotepath <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>"},{"title":"【Git】ファイルの巻き戻し方法","date":"2021-03-30T13:12:24.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# ステージングエリアの変更を取り消す\ngit addの反対のことをする必要があるので、`git reset`を使用する。ステージングの取り消しなので、作業ディレクトリのファイルは変化しない。\n\ngit reset を使ってファイルのステージングを取り消す\n```shell-session\n$ git add test.txt\n$ git reset test.txt\n```\n\n# ファイルを最後に変更(commit)した状態に戻す\ngit commitしたということは、ファイルの状態を保存してあるので、`git checkout`を使えば戻すことができる。\n\ngit checkout を使用して、ファイルの中身を最後に変更した状態に戻す\n```shell-session\n$ git checkout ファイル名\n```\n\n作業エリアすべてのファイルを最後のコミットの状態に戻す\n```shell-session\n$ git checkout .\n```\n","source":"_posts/【Git】ファイルの巻き戻し方法.md","raw":"---\ntitle: 【Git】ファイルの巻き戻し方法\ndate: 2021-03-30 22:12:24\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# ステージングエリアの変更を取り消す\ngit addの反対のことをする必要があるので、`git reset`を使用する。ステージングの取り消しなので、作業ディレクトリのファイルは変化しない。\n\ngit reset を使ってファイルのステージングを取り消す\n```shell-session\n$ git add test.txt\n$ git reset test.txt\n```\n\n# ファイルを最後に変更(commit)した状態に戻す\ngit commitしたということは、ファイルの状態を保存してあるので、`git checkout`を使えば戻すことができる。\n\ngit checkout を使用して、ファイルの中身を最後に変更した状態に戻す\n```shell-session\n$ git checkout ファイル名\n```\n\n作業エリアすべてのファイルを最後のコミットの状態に戻す\n```shell-session\n$ git checkout .\n```\n","slug":"【Git】ファイルの巻き戻し方法","published":1,"updated":"2021-03-30T13:12:58.496Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh39m001ymzb6dvma6y52","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%82%A8%E3%83%AA%E3%82%A2%E3%81%AE%E5%A4%89%E6%9B%B4%E3%82%92%E5%8F%96%E3%82%8A%E6%B6%88%E3%81%99\">ステージングエリアの変更を取り消す</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E6%9C%80%E5%BE%8C%E3%81%AB%E5%A4%89%E6%9B%B4commit%E3%81%97%E3%81%9F%E7%8A%B6%E6%85%8B%E3%81%AB%E6%88%BB%E3%81%99\">ファイルを最後に変更(commit)した状態に戻す</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"ステージングエリアの変更を取り消す\">ステージングエリアの変更を取り消す</span></h1><p>git addの反対のことをする必要があるので、<code>git reset</code>を使用する。ステージングの取り消しなので、作業ディレクトリのファイルは変化しない。</p>\n<p>git reset を使ってファイルのステージングを取り消す</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add test.txt</span><br><span class=\"line\">$ git reset test.txt</span><br></pre></td></tr></table></figure>\n<h1><span id=\"ファイルを最後に変更commitした状態に戻す\">ファイルを最後に変更(commit)した状態に戻す</span></h1><p>git commitしたということは、ファイルの状態を保存してあるので、<code>git checkout</code>を使えば戻すことができる。</p>\n<p>git checkout を使用して、ファイルの中身を最後に変更した状態に戻す</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout ファイル名</span><br></pre></td></tr></table></figure>\n<p>作業エリアすべてのファイルを最後のコミットの状態に戻す</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout .</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%82%A8%E3%83%AA%E3%82%A2%E3%81%AE%E5%A4%89%E6%9B%B4%E3%82%92%E5%8F%96%E3%82%8A%E6%B6%88%E3%81%99\">ステージングエリアの変更を取り消す</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E6%9C%80%E5%BE%8C%E3%81%AB%E5%A4%89%E6%9B%B4commit%E3%81%97%E3%81%9F%E7%8A%B6%E6%85%8B%E3%81%AB%E6%88%BB%E3%81%99\">ファイルを最後に変更(commit)した状態に戻す</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"ステージングエリアの変更を取り消す\"><a href=\"#ステージングエリアの変更を取り消す\" class=\"headerlink\" title=\"ステージングエリアの変更を取り消す\"></a>ステージングエリアの変更を取り消す</h1><p>git addの反対のことをする必要があるので、<code>git reset</code>を使用する。ステージングの取り消しなので、作業ディレクトリのファイルは変化しない。</p>\n<p>git reset を使ってファイルのステージングを取り消す</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add test.txt</span><br><span class=\"line\">$ git reset test.txt</span><br></pre></td></tr></table></figure>\n<h1 id=\"ファイルを最後に変更-commit-した状態に戻す\"><a href=\"#ファイルを最後に変更-commit-した状態に戻す\" class=\"headerlink\" title=\"ファイルを最後に変更(commit)した状態に戻す\"></a>ファイルを最後に変更(commit)した状態に戻す</h1><p>git commitしたということは、ファイルの状態を保存してあるので、<code>git checkout</code>を使えば戻すことができる。</p>\n<p>git checkout を使用して、ファイルの中身を最後に変更した状態に戻す</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout ファイル名</span><br></pre></td></tr></table></figure>\n<p>作業エリアすべてのファイルを最後のコミットの状態に戻す</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout .</span><br></pre></td></tr></table></figure>"},{"title":"【Git】コミットメッセージのテンプレートを設定する","date":"2021-04-13T13:05:47.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# コミットテンプレートとは\ngit のコミット時に自動で生成されるコメントを設定することができる機能です。プロジェクト内でコミットメッセージのフォーマットを統一したい場合に使用することがありました。\n\n# テンプレートファイルの用意\n任意の場所にテンプレートファイルを用意し、git config でそのファイルをセットする\n\n```bash\n$ touch ~/.gitmessage.txt\n$ git config --global commit.template ~/.gitmessage.txt\n```\n\n```bash\n$ touch ~/.gitmessage.txt\n$ git config --global commit.template ~/.gitmessage.txt\n```\n\n```:.gitmessage.txt\n[ticket: #xxxx][Task/Bug] Subject line\n\nwhat happened\nref : ticket link\n```\n\n\n# 使用例\n\n```\n$ git commit\n\n[ticket: #xxxx][Task/Bug] Subject line\n\nwhat happened\nref : ticket link\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n# On branch master\n# Changes to be committed:\n#   (use \"git reset HEAD <file>...\" to unstage)\n#\n# modified:   hoge/test.txt\n#\n```\n","source":"_posts/【Git】コミットメッセージのテンプレートを設定する.md","raw":"---\ntitle: 【Git】コミットメッセージのテンプレートを設定する\ndate: 2021-04-13 22:05:47\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# コミットテンプレートとは\ngit のコミット時に自動で生成されるコメントを設定することができる機能です。プロジェクト内でコミットメッセージのフォーマットを統一したい場合に使用することがありました。\n\n# テンプレートファイルの用意\n任意の場所にテンプレートファイルを用意し、git config でそのファイルをセットする\n\n```bash\n$ touch ~/.gitmessage.txt\n$ git config --global commit.template ~/.gitmessage.txt\n```\n\n```bash\n$ touch ~/.gitmessage.txt\n$ git config --global commit.template ~/.gitmessage.txt\n```\n\n```:.gitmessage.txt\n[ticket: #xxxx][Task/Bug] Subject line\n\nwhat happened\nref : ticket link\n```\n\n\n# 使用例\n\n```\n$ git commit\n\n[ticket: #xxxx][Task/Bug] Subject line\n\nwhat happened\nref : ticket link\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n# On branch master\n# Changes to be committed:\n#   (use \"git reset HEAD <file>...\" to unstage)\n#\n# modified:   hoge/test.txt\n#\n```\n","slug":"【Git】コミットメッセージのテンプレートを設定する","published":1,"updated":"2021-04-09T05:08:14.915Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh39r0020mzb649nb5qid","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%A8%E3%81%AF\">コミットテンプレートとは</a></li>\n<li><a href=\"#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E7%94%A8%E6%84%8F\">テンプレートファイルの用意</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"コミットテンプレートとは\">コミットテンプレートとは</span></h1><p>git のコミット時に自動で生成されるコメントを設定することができる機能です。プロジェクト内でコミットメッセージのフォーマットを統一したい場合に使用することがありました。</p>\n<h1><span id=\"テンプレートファイルの用意\">テンプレートファイルの用意</span></h1><p>任意の場所にテンプレートファイルを用意し、git config でそのファイルをセットする</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ touch ~/.gitmessage.txt</span><br><span class=\"line\">$ git config --global commit.template ~/.gitmessage.txt</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ touch ~/.gitmessage.txt</span><br><span class=\"line\">$ git config --global commit.template ~/.gitmessage.txt</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ticket: #xxxx][Task&#x2F;Bug] Subject line</span><br><span class=\"line\"></span><br><span class=\"line\">what happened</span><br><span class=\"line\">ref : ticket link</span><br></pre></td></tr></table></figure>\n\n<h1><span id=\"使用例\">使用例</span></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit</span><br><span class=\"line\"></span><br><span class=\"line\">[ticket: #xxxx][Task&#x2F;Bug] Subject line</span><br><span class=\"line\"></span><br><span class=\"line\">what happened</span><br><span class=\"line\">ref : ticket link</span><br><span class=\"line\"></span><br><span class=\"line\"># Please enter the commit message for your changes. Lines starting</span><br><span class=\"line\"># with &#39;#&#39; will be ignored, and an empty message aborts the commit.</span><br><span class=\"line\"># On branch master</span><br><span class=\"line\"># Changes to be committed:</span><br><span class=\"line\">#   (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\">#</span><br><span class=\"line\"># modified:   hoge&#x2F;test.txt</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%A8%E3%81%AF\">コミットテンプレートとは</a></li>\n<li><a href=\"#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E7%94%A8%E6%84%8F\">テンプレートファイルの用意</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"コミットテンプレートとは\"><a href=\"#コミットテンプレートとは\" class=\"headerlink\" title=\"コミットテンプレートとは\"></a>コミットテンプレートとは</h1><p>git のコミット時に自動で生成されるコメントを設定することができる機能です。プロジェクト内でコミットメッセージのフォーマットを統一したい場合に使用することがありました。</p>\n<h1 id=\"テンプレートファイルの用意\"><a href=\"#テンプレートファイルの用意\" class=\"headerlink\" title=\"テンプレートファイルの用意\"></a>テンプレートファイルの用意</h1><p>任意の場所にテンプレートファイルを用意し、git config でそのファイルをセットする</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ touch ~/.gitmessage.txt</span><br><span class=\"line\">$ git config --global commit.template ~/.gitmessage.txt</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ touch ~/.gitmessage.txt</span><br><span class=\"line\">$ git config --global commit.template ~/.gitmessage.txt</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ticket: #xxxx][Task&#x2F;Bug] Subject line</span><br><span class=\"line\"></span><br><span class=\"line\">what happened</span><br><span class=\"line\">ref : ticket link</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使用例\"><a href=\"#使用例\" class=\"headerlink\" title=\"使用例\"></a>使用例</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit</span><br><span class=\"line\"></span><br><span class=\"line\">[ticket: #xxxx][Task&#x2F;Bug] Subject line</span><br><span class=\"line\"></span><br><span class=\"line\">what happened</span><br><span class=\"line\">ref : ticket link</span><br><span class=\"line\"></span><br><span class=\"line\"># Please enter the commit message for your changes. Lines starting</span><br><span class=\"line\"># with &#39;#&#39; will be ignored, and an empty message aborts the commit.</span><br><span class=\"line\"># On branch master</span><br><span class=\"line\"># Changes to be committed:</span><br><span class=\"line\">#   (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\">#</span><br><span class=\"line\"># modified:   hoge&#x2F;test.txt</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure>"},{"title":"【Git】ブランチの差分を比較する","date":"2021-04-05T15:41:04.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# ブランチ間の差分をみる\n\n`masterブランチ`と`testブランチ`の差分を比較します。\n- `master`と`test`の間の`.`は2つ\n\n比較したブランチをマージする場合、比較した結果通りの結果のマージが行われます。\n\n```shell-sesshion\n$ git diff master..test\n```\n\nこのときに重要なのは、`..`の両端にあるブランチ名の順序です。この順序を変えることで、どちらを元にした差分を表示させるかを決めることができます。\n\n先(左側)に指定した方のブランチを基準に差分を表示します。\n\n## サンプル\nmasterブランチとtestブランチの比較を基準になるブランチを入れ替えて行います。\n\n以下の手順で差分を発生させた状態を作り比較します。\n1. masterブランチでファイル作成コミット(test.txtを作成して1追記)\n2. testブランチをHEADから作成\n3. testブランチ内でファイルを編集コミット(test.txtに2を記述)\n4. masterブランチでファイルを編集コミット(test.txtに3を記述)\n5. 比較\n\n### master..test\n```shell-sesssion\n$ git diff master..test\n\n\ndiff --git a/test.txt b/test.txt\nindex 2b2f2e1..1191247 100644\n--- a/test.txt\n+++ b/test.txt\n@@ -1,2 +1,2 @@\n 1\n-3\n+2\n```\n\n### test..master\n\n```shell-sesssion\n$ git diff test..master\n\n\ndiff --git a/test.txt b/test.txt\nindex 1191247..2b2f2e1 100644\n--- a/test.txt\n+++ b/test.txt\n@@ -1,2 +1,2 @@\n 1\n-2\n+3\n```\n\n# ファイル単位でブランチ間の違いをみる\n`git diff master...test`を使用するとファイル内のどこがどう違うかを表示できるが、ざっくりとどのファイルに差分があるかだけをみたい場合は、`--name-status`スイッチを使用すれば見ることができる。\n\n```shell-session\n$ git diff --name-status master..test\n\nM       test.txt\n```\n\nこのときにファイル名の右側に表示される文字の意味は以下になる\n\n| 文字 | 意味(英語)   | 意味(日本語) | \n|----|----------|---------| \n| A  | Added    | 追加      | \n| C  | Copied   | コピー     | \n| D  | Deleted  | 消去      | \n| M  | Moudifed | 変更      | \n| R  | Renamed  | リネーム    | \n\n","source":"_posts/【Git】ブランチの差分を比較する.md","raw":"---\ntitle: 【Git】ブランチの差分を比較する\ndate: 2021-04-06 00:41:04\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# ブランチ間の差分をみる\n\n`masterブランチ`と`testブランチ`の差分を比較します。\n- `master`と`test`の間の`.`は2つ\n\n比較したブランチをマージする場合、比較した結果通りの結果のマージが行われます。\n\n```shell-sesshion\n$ git diff master..test\n```\n\nこのときに重要なのは、`..`の両端にあるブランチ名の順序です。この順序を変えることで、どちらを元にした差分を表示させるかを決めることができます。\n\n先(左側)に指定した方のブランチを基準に差分を表示します。\n\n## サンプル\nmasterブランチとtestブランチの比較を基準になるブランチを入れ替えて行います。\n\n以下の手順で差分を発生させた状態を作り比較します。\n1. masterブランチでファイル作成コミット(test.txtを作成して1追記)\n2. testブランチをHEADから作成\n3. testブランチ内でファイルを編集コミット(test.txtに2を記述)\n4. masterブランチでファイルを編集コミット(test.txtに3を記述)\n5. 比較\n\n### master..test\n```shell-sesssion\n$ git diff master..test\n\n\ndiff --git a/test.txt b/test.txt\nindex 2b2f2e1..1191247 100644\n--- a/test.txt\n+++ b/test.txt\n@@ -1,2 +1,2 @@\n 1\n-3\n+2\n```\n\n### test..master\n\n```shell-sesssion\n$ git diff test..master\n\n\ndiff --git a/test.txt b/test.txt\nindex 1191247..2b2f2e1 100644\n--- a/test.txt\n+++ b/test.txt\n@@ -1,2 +1,2 @@\n 1\n-2\n+3\n```\n\n# ファイル単位でブランチ間の違いをみる\n`git diff master...test`を使用するとファイル内のどこがどう違うかを表示できるが、ざっくりとどのファイルに差分があるかだけをみたい場合は、`--name-status`スイッチを使用すれば見ることができる。\n\n```shell-session\n$ git diff --name-status master..test\n\nM       test.txt\n```\n\nこのときにファイル名の右側に表示される文字の意味は以下になる\n\n| 文字 | 意味(英語)   | 意味(日本語) | \n|----|----------|---------| \n| A  | Added    | 追加      | \n| C  | Copied   | コピー     | \n| D  | Deleted  | 消去      | \n| M  | Moudifed | 変更      | \n| R  | Renamed  | リネーム    | \n\n","slug":"【Git】ブランチの差分を比較する","published":1,"updated":"2021-04-05T15:41:25.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3a00021mzb6f6umf6hr","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E9%96%93%E3%81%AE%E5%B7%AE%E5%88%86%E3%82%92%E3%81%BF%E3%82%8B\">ブランチ間の差分をみる</a><ul>\n<li><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\">サンプル</a><ul>\n<li><a href=\"#mastertest\">master..test</a></li>\n<li><a href=\"#testmaster\">test..master</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%8D%98%E4%BD%8D%E3%81%A7%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E9%96%93%E3%81%AE%E9%81%95%E3%81%84%E3%82%92%E3%81%BF%E3%82%8B\">ファイル単位でブランチ間の違いをみる</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"ブランチ間の差分をみる\">ブランチ間の差分をみる</span></h1><p><code>masterブランチ</code>と<code>testブランチ</code>の差分を比較します。</p>\n<ul>\n<li><code>master</code>と<code>test</code>の間の<code>.</code>は2つ</li>\n</ul>\n<p>比較したブランチをマージする場合、比較した結果通りの結果のマージが行われます。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff master..test</span><br></pre></td></tr></table></figure>\n<p>このときに重要なのは、<code>..</code>の両端にあるブランチ名の順序です。この順序を変えることで、どちらを元にした差分を表示させるかを決めることができます。</p>\n<p>先(左側)に指定した方のブランチを基準に差分を表示します。</p>\n<h2><span id=\"サンプル\">サンプル</span></h2><p>masterブランチとtestブランチの比較を基準になるブランチを入れ替えて行います。</p>\n<p>以下の手順で差分を発生させた状態を作り比較します。</p>\n<ol>\n<li>masterブランチでファイル作成コミット(test.txtを作成して1追記)</li>\n<li>testブランチをHEADから作成</li>\n<li>testブランチ内でファイルを編集コミット(test.txtに2を記述)</li>\n<li>masterブランチでファイルを編集コミット(test.txtに3を記述)</li>\n<li>比較</li>\n</ol>\n<h3><span id=\"mastertest\">master..test</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff master..test</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">diff --git a&#x2F;test.txt b&#x2F;test.txt</span><br><span class=\"line\">index 2b2f2e1..1191247 100644</span><br><span class=\"line\">--- a&#x2F;test.txt</span><br><span class=\"line\">+++ b&#x2F;test.txt</span><br><span class=\"line\">@@ -1,2 +1,2 @@</span><br><span class=\"line\"> 1</span><br><span class=\"line\">-3</span><br><span class=\"line\">+2</span><br></pre></td></tr></table></figure>\n<h3><span id=\"testmaster\">test..master</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff test..master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">diff --git a&#x2F;test.txt b&#x2F;test.txt</span><br><span class=\"line\">index 1191247..2b2f2e1 100644</span><br><span class=\"line\">--- a&#x2F;test.txt</span><br><span class=\"line\">+++ b&#x2F;test.txt</span><br><span class=\"line\">@@ -1,2 +1,2 @@</span><br><span class=\"line\"> 1</span><br><span class=\"line\">-2</span><br><span class=\"line\">+3</span><br></pre></td></tr></table></figure>\n<h1><span id=\"ファイル単位でブランチ間の違いをみる\">ファイル単位でブランチ間の違いをみる</span></h1><p><code>git diff master...test</code>を使用するとファイル内のどこがどう違うかを表示できるが、ざっくりとどのファイルに差分があるかだけをみたい場合は、<code>--name-status</code>スイッチを使用すれば見ることができる。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff --name-status master..test</span><br><span class=\"line\"></span><br><span class=\"line\">M       test.txt</span><br></pre></td></tr></table></figure>\n<p>このときにファイル名の右側に表示される文字の意味は以下になる</p>\n<table>\n<thead>\n<tr>\n<th>文字</th>\n<th>意味(英語)</th>\n<th>意味(日本語)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>A</td>\n<td>Added</td>\n<td>追加</td>\n</tr>\n<tr>\n<td>C</td>\n<td>Copied</td>\n<td>コピー</td>\n</tr>\n<tr>\n<td>D</td>\n<td>Deleted</td>\n<td>消去</td>\n</tr>\n<tr>\n<td>M</td>\n<td>Moudifed</td>\n<td>変更</td>\n</tr>\n<tr>\n<td>R</td>\n<td>Renamed</td>\n<td>リネーム</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E9%96%93%E3%81%AE%E5%B7%AE%E5%88%86%E3%82%92%E3%81%BF%E3%82%8B\">ブランチ間の差分をみる</a><ul>\n<li><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\">サンプル</a><ul>\n<li><a href=\"#mastertest\">master..test</a></li>\n<li><a href=\"#testmaster\">test..master</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%8D%98%E4%BD%8D%E3%81%A7%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E9%96%93%E3%81%AE%E9%81%95%E3%81%84%E3%82%92%E3%81%BF%E3%82%8B\">ファイル単位でブランチ間の違いをみる</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"ブランチ間の差分をみる\"><a href=\"#ブランチ間の差分をみる\" class=\"headerlink\" title=\"ブランチ間の差分をみる\"></a>ブランチ間の差分をみる</h1><p><code>masterブランチ</code>と<code>testブランチ</code>の差分を比較します。</p>\n<ul>\n<li><code>master</code>と<code>test</code>の間の<code>.</code>は2つ</li>\n</ul>\n<p>比較したブランチをマージする場合、比較した結果通りの結果のマージが行われます。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff master..test</span><br></pre></td></tr></table></figure>\n<p>このときに重要なのは、<code>..</code>の両端にあるブランチ名の順序です。この順序を変えることで、どちらを元にした差分を表示させるかを決めることができます。</p>\n<p>先(左側)に指定した方のブランチを基準に差分を表示します。</p>\n<h2 id=\"サンプル\"><a href=\"#サンプル\" class=\"headerlink\" title=\"サンプル\"></a>サンプル</h2><p>masterブランチとtestブランチの比較を基準になるブランチを入れ替えて行います。</p>\n<p>以下の手順で差分を発生させた状態を作り比較します。</p>\n<ol>\n<li>masterブランチでファイル作成コミット(test.txtを作成して1追記)</li>\n<li>testブランチをHEADから作成</li>\n<li>testブランチ内でファイルを編集コミット(test.txtに2を記述)</li>\n<li>masterブランチでファイルを編集コミット(test.txtに3を記述)</li>\n<li>比較</li>\n</ol>\n<h3 id=\"master-test\"><a href=\"#master-test\" class=\"headerlink\" title=\"master..test\"></a>master..test</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff master..test</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">diff --git a&#x2F;test.txt b&#x2F;test.txt</span><br><span class=\"line\">index 2b2f2e1..1191247 100644</span><br><span class=\"line\">--- a&#x2F;test.txt</span><br><span class=\"line\">+++ b&#x2F;test.txt</span><br><span class=\"line\">@@ -1,2 +1,2 @@</span><br><span class=\"line\"> 1</span><br><span class=\"line\">-3</span><br><span class=\"line\">+2</span><br></pre></td></tr></table></figure>\n<h3 id=\"test-master\"><a href=\"#test-master\" class=\"headerlink\" title=\"test..master\"></a>test..master</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff test..master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">diff --git a&#x2F;test.txt b&#x2F;test.txt</span><br><span class=\"line\">index 1191247..2b2f2e1 100644</span><br><span class=\"line\">--- a&#x2F;test.txt</span><br><span class=\"line\">+++ b&#x2F;test.txt</span><br><span class=\"line\">@@ -1,2 +1,2 @@</span><br><span class=\"line\"> 1</span><br><span class=\"line\">-2</span><br><span class=\"line\">+3</span><br></pre></td></tr></table></figure>\n<h1 id=\"ファイル単位でブランチ間の違いをみる\"><a href=\"#ファイル単位でブランチ間の違いをみる\" class=\"headerlink\" title=\"ファイル単位でブランチ間の違いをみる\"></a>ファイル単位でブランチ間の違いをみる</h1><p><code>git diff master...test</code>を使用するとファイル内のどこがどう違うかを表示できるが、ざっくりとどのファイルに差分があるかだけをみたい場合は、<code>--name-status</code>スイッチを使用すれば見ることができる。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff --name-status master..test</span><br><span class=\"line\"></span><br><span class=\"line\">M       test.txt</span><br></pre></td></tr></table></figure>\n<p>このときにファイル名の右側に表示される文字の意味は以下になる</p>\n<table>\n<thead>\n<tr>\n<th>文字</th>\n<th>意味(英語)</th>\n<th>意味(日本語)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>A</td>\n<td>Added</td>\n<td>追加</td>\n</tr>\n<tr>\n<td>C</td>\n<td>Copied</td>\n<td>コピー</td>\n</tr>\n<tr>\n<td>D</td>\n<td>Deleted</td>\n<td>消去</td>\n</tr>\n<tr>\n<td>M</td>\n<td>Moudifed</td>\n<td>変更</td>\n</tr>\n<tr>\n<td>R</td>\n<td>Renamed</td>\n<td>リネーム</td>\n</tr>\n</tbody></table>"},{"title":"【Git】マージの中止の仕方","date":"2021-04-03T17:30:38.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 他のブランチを今いるブランチに取り込む(マージを実行する)\n`merge`コマンドを使用して、`今いるブランチ`に他のブランチを取り込みます\n\nこの実行結果は一例です。\n```shell-session\n$ git merge test\n\nUpdating ace754e..e187324\nFast-forward\n test4 | 0\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 test4\n```\n\n# マージ時のFast-forwardを行わないようにする\n`merge`コマンドを使用して、特定の条件を満たすと、gitはデフォルトで`Fast-foward`というマージを行う\n- Fast-forwardとは端的に説明すると、コミットをマージ履歴を残さずに、マージを行うこと\n\n\n`--no-ff`スイッチを使用することで、`Fast-foward`を行わないように指定することができる\n```shell-session\n$ git merge --no-ff test\n\nMerge made by the 'recursive' strategy.\n ttt | 0\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 ttt\n```\n\n# マージを中断する\n`--abort`スイッチを使うことでマージを中断できる\n\n```shell-session\n$ git merge --abort\n```\n\n# 現在のマージ状態を確認する\n`--abort`スイッチで中断する前に、`diff`コマンドで現状をチェックすることをおすすめする\n\n```shell-session\n$ git diff\n\ndiff --cc test.txt\nindex 5584d95,928dd0d..0000000\n--- a/test.txt\n+++ b/test.txt\n@@@ -1,1 -1,1 +1,5 @@@\n++<<<<<<< HEAD\n +テスト次郎\n++=======\n+ 侍ミーテスト太郎\n++>>>>>>> test\n```\n\n# マージするブランチとの共通の親を表示させる\nブランチはどこかで共通祖先(the common ancestor)になるコミットがある\n\nブランチの共通祖先を見つけるには`merge-base`コマンドを使用する\n\n```shell-session\n$ git merge-base\n\nebfae41584feeb6055f2257e9eb409d97e76b9b9\n```\n","source":"_posts/【Git】マージの中止の仕方.md","raw":"---\ntitle: 【Git】マージの中止の仕方\ndate: 2021-04-04 02:30:38\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 他のブランチを今いるブランチに取り込む(マージを実行する)\n`merge`コマンドを使用して、`今いるブランチ`に他のブランチを取り込みます\n\nこの実行結果は一例です。\n```shell-session\n$ git merge test\n\nUpdating ace754e..e187324\nFast-forward\n test4 | 0\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 test4\n```\n\n# マージ時のFast-forwardを行わないようにする\n`merge`コマンドを使用して、特定の条件を満たすと、gitはデフォルトで`Fast-foward`というマージを行う\n- Fast-forwardとは端的に説明すると、コミットをマージ履歴を残さずに、マージを行うこと\n\n\n`--no-ff`スイッチを使用することで、`Fast-foward`を行わないように指定することができる\n```shell-session\n$ git merge --no-ff test\n\nMerge made by the 'recursive' strategy.\n ttt | 0\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 ttt\n```\n\n# マージを中断する\n`--abort`スイッチを使うことでマージを中断できる\n\n```shell-session\n$ git merge --abort\n```\n\n# 現在のマージ状態を確認する\n`--abort`スイッチで中断する前に、`diff`コマンドで現状をチェックすることをおすすめする\n\n```shell-session\n$ git diff\n\ndiff --cc test.txt\nindex 5584d95,928dd0d..0000000\n--- a/test.txt\n+++ b/test.txt\n@@@ -1,1 -1,1 +1,5 @@@\n++<<<<<<< HEAD\n +テスト次郎\n++=======\n+ 侍ミーテスト太郎\n++>>>>>>> test\n```\n\n# マージするブランチとの共通の親を表示させる\nブランチはどこかで共通祖先(the common ancestor)になるコミットがある\n\nブランチの共通祖先を見つけるには`merge-base`コマンドを使用する\n\n```shell-session\n$ git merge-base\n\nebfae41584feeb6055f2257e9eb409d97e76b9b9\n```\n","slug":"【Git】マージの中止の仕方","published":1,"updated":"2021-04-05T15:31:01.906Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3ac0023mzb6bmaa0z0l","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E4%BB%96%E3%81%AE%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E4%BB%8A%E3%81%84%E3%82%8B%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AB%E5%8F%96%E3%82%8A%E8%BE%BC%E3%82%80%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B\">他のブランチを今いるブランチに取り込む(マージを実行する)</a></li>\n<li><a href=\"#%E3%83%9E%E3%83%BC%E3%82%B8%E6%99%82%E3%81%AEfast-forward%E3%82%92%E8%A1%8C%E3%82%8F%E3%81%AA%E3%81%84%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B\">マージ時のFast-forwardを行わないようにする</a></li>\n<li><a href=\"#%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%92%E4%B8%AD%E6%96%AD%E3%81%99%E3%82%8B\">マージを中断する</a></li>\n<li><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E3%83%9E%E3%83%BC%E3%82%B8%E7%8A%B6%E6%85%8B%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\">現在のマージ状態を確認する</a></li>\n<li><a href=\"#%E3%83%9E%E3%83%BC%E3%82%B8%E3%81%99%E3%82%8B%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%A8%E3%81%AE%E5%85%B1%E9%80%9A%E3%81%AE%E8%A6%AA%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%95%E3%81%9B%E3%82%8B\">マージするブランチとの共通の親を表示させる</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"他のブランチを今いるブランチに取り込むマージを実行する\">他のブランチを今いるブランチに取り込む(マージを実行する)</span></h1><p><code>merge</code>コマンドを使用して、<code>今いるブランチ</code>に他のブランチを取り込みます</p>\n<p>この実行結果は一例です。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge test</span><br><span class=\"line\"></span><br><span class=\"line\">Updating ace754e..e187324</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> test4 | 0</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 test4</span><br></pre></td></tr></table></figure>\n<h1><span id=\"マージ時のfast-forwardを行わないようにする\">マージ時のFast-forwardを行わないようにする</span></h1><p><code>merge</code>コマンドを使用して、特定の条件を満たすと、gitはデフォルトで<code>Fast-foward</code>というマージを行う</p>\n<ul>\n<li>Fast-forwardとは端的に説明すると、コミットをマージ履歴を残さずに、マージを行うこと</li>\n</ul>\n<p><code>--no-ff</code>スイッチを使用することで、<code>Fast-foward</code>を行わないように指定することができる</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge --no-ff test</span><br><span class=\"line\"></span><br><span class=\"line\">Merge made by the &#39;recursive&#39; strategy.</span><br><span class=\"line\"> ttt | 0</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 ttt</span><br></pre></td></tr></table></figure>\n<h1><span id=\"マージを中断する\">マージを中断する</span></h1><p><code>--abort</code>スイッチを使うことでマージを中断できる</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge --abort</span><br></pre></td></tr></table></figure>\n<h1><span id=\"現在のマージ状態を確認する\">現在のマージ状態を確認する</span></h1><p><code>--abort</code>スイッチで中断する前に、<code>diff</code>コマンドで現状をチェックすることをおすすめする</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff</span><br><span class=\"line\"></span><br><span class=\"line\">diff --cc test.txt</span><br><span class=\"line\">index 5584d95,928dd0d..0000000</span><br><span class=\"line\">--- a&#x2F;test.txt</span><br><span class=\"line\">+++ b&#x2F;test.txt</span><br><span class=\"line\">@@@ -1,1 -1,1 +1,5 @@@</span><br><span class=\"line\">++&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\"> +テスト次郎</span><br><span class=\"line\">++&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\">+ 侍ミーテスト太郎</span><br><span class=\"line\">++&gt;&gt;&gt;&gt;&gt;&gt;&gt; test</span><br></pre></td></tr></table></figure>\n<h1><span id=\"マージするブランチとの共通の親を表示させる\">マージするブランチとの共通の親を表示させる</span></h1><p>ブランチはどこかで共通祖先(the common ancestor)になるコミットがある</p>\n<p>ブランチの共通祖先を見つけるには<code>merge-base</code>コマンドを使用する</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge-base</span><br><span class=\"line\"></span><br><span class=\"line\">ebfae41584feeb6055f2257e9eb409d97e76b9b9</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E4%BB%96%E3%81%AE%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E4%BB%8A%E3%81%84%E3%82%8B%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AB%E5%8F%96%E3%82%8A%E8%BE%BC%E3%82%80%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B\">他のブランチを今いるブランチに取り込む(マージを実行する)</a></li>\n<li><a href=\"#%E3%83%9E%E3%83%BC%E3%82%B8%E6%99%82%E3%81%AEfast-forward%E3%82%92%E8%A1%8C%E3%82%8F%E3%81%AA%E3%81%84%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B\">マージ時のFast-forwardを行わないようにする</a></li>\n<li><a href=\"#%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%92%E4%B8%AD%E6%96%AD%E3%81%99%E3%82%8B\">マージを中断する</a></li>\n<li><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E3%83%9E%E3%83%BC%E3%82%B8%E7%8A%B6%E6%85%8B%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\">現在のマージ状態を確認する</a></li>\n<li><a href=\"#%E3%83%9E%E3%83%BC%E3%82%B8%E3%81%99%E3%82%8B%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%A8%E3%81%AE%E5%85%B1%E9%80%9A%E3%81%AE%E8%A6%AA%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%95%E3%81%9B%E3%82%8B\">マージするブランチとの共通の親を表示させる</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"他のブランチを今いるブランチに取り込む-マージを実行する\"><a href=\"#他のブランチを今いるブランチに取り込む-マージを実行する\" class=\"headerlink\" title=\"他のブランチを今いるブランチに取り込む(マージを実行する)\"></a>他のブランチを今いるブランチに取り込む(マージを実行する)</h1><p><code>merge</code>コマンドを使用して、<code>今いるブランチ</code>に他のブランチを取り込みます</p>\n<p>この実行結果は一例です。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge test</span><br><span class=\"line\"></span><br><span class=\"line\">Updating ace754e..e187324</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> test4 | 0</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 test4</span><br></pre></td></tr></table></figure>\n<h1 id=\"マージ時のFast-forwardを行わないようにする\"><a href=\"#マージ時のFast-forwardを行わないようにする\" class=\"headerlink\" title=\"マージ時のFast-forwardを行わないようにする\"></a>マージ時のFast-forwardを行わないようにする</h1><p><code>merge</code>コマンドを使用して、特定の条件を満たすと、gitはデフォルトで<code>Fast-foward</code>というマージを行う</p>\n<ul>\n<li>Fast-forwardとは端的に説明すると、コミットをマージ履歴を残さずに、マージを行うこと</li>\n</ul>\n<p><code>--no-ff</code>スイッチを使用することで、<code>Fast-foward</code>を行わないように指定することができる</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge --no-ff test</span><br><span class=\"line\"></span><br><span class=\"line\">Merge made by the &#39;recursive&#39; strategy.</span><br><span class=\"line\"> ttt | 0</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 ttt</span><br></pre></td></tr></table></figure>\n<h1 id=\"マージを中断する\"><a href=\"#マージを中断する\" class=\"headerlink\" title=\"マージを中断する\"></a>マージを中断する</h1><p><code>--abort</code>スイッチを使うことでマージを中断できる</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge --abort</span><br></pre></td></tr></table></figure>\n<h1 id=\"現在のマージ状態を確認する\"><a href=\"#現在のマージ状態を確認する\" class=\"headerlink\" title=\"現在のマージ状態を確認する\"></a>現在のマージ状態を確認する</h1><p><code>--abort</code>スイッチで中断する前に、<code>diff</code>コマンドで現状をチェックすることをおすすめする</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff</span><br><span class=\"line\"></span><br><span class=\"line\">diff --cc test.txt</span><br><span class=\"line\">index 5584d95,928dd0d..0000000</span><br><span class=\"line\">--- a&#x2F;test.txt</span><br><span class=\"line\">+++ b&#x2F;test.txt</span><br><span class=\"line\">@@@ -1,1 -1,1 +1,5 @@@</span><br><span class=\"line\">++&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\"> +テスト次郎</span><br><span class=\"line\">++&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\">+ 侍ミーテスト太郎</span><br><span class=\"line\">++&gt;&gt;&gt;&gt;&gt;&gt;&gt; test</span><br></pre></td></tr></table></figure>\n<h1 id=\"マージするブランチとの共通の親を表示させる\"><a href=\"#マージするブランチとの共通の親を表示させる\" class=\"headerlink\" title=\"マージするブランチとの共通の親を表示させる\"></a>マージするブランチとの共通の親を表示させる</h1><p>ブランチはどこかで共通祖先(the common ancestor)になるコミットがある</p>\n<p>ブランチの共通祖先を見つけるには<code>merge-base</code>コマンドを使用する</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge-base</span><br><span class=\"line\"></span><br><span class=\"line\">ebfae41584feeb6055f2257e9eb409d97e76b9b9</span><br></pre></td></tr></table></figure>"},{"title":"【Git】ベアリポジトリとはなにか","date":"2021-03-18T14:13:21.000Z","_content":"# 目次\n<!-- toc -->\n\n# ベアリポジトリとは\n## ベア(bare)とは\n露出した、本来あるべき物が無いという意味がある。\n\n## つまり\nこれをGitのシステムとして解釈すると、「本来あるべき物が無い」＝「ワーキングディレクトリがない」という意味になる。\n更新履歴のみを持っているリポジトリということになる\n\nリモートサーバー上に「ベアリポジトリ」を作成して、ローカルで編集したリポジトリを管理するために使う(GitHubと同じ動作をする)\n\n## 作成時の注意点\n- ベアリポジトリを作る場合のファイル名は末尾に`.git`をつける必要がある\n","source":"_posts/【Git】ベアリポジトリとはなにか.md","raw":"---\ntitle: 【Git】ベアリポジトリとはなにか\ndate: 2021-03-18 23:13:21\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n\n# ベアリポジトリとは\n## ベア(bare)とは\n露出した、本来あるべき物が無いという意味がある。\n\n## つまり\nこれをGitのシステムとして解釈すると、「本来あるべき物が無い」＝「ワーキングディレクトリがない」という意味になる。\n更新履歴のみを持っているリポジトリということになる\n\nリモートサーバー上に「ベアリポジトリ」を作成して、ローカルで編集したリポジトリを管理するために使う(GitHubと同じ動作をする)\n\n## 作成時の注意点\n- ベアリポジトリを作る場合のファイル名は末尾に`.git`をつける必要がある\n","slug":"【Git】ベアリポジトリとはなにか","published":1,"updated":"2021-03-25T15:37:07.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3af0025mzb6e9lh7grg","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%99%E3%82%A2%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%A8%E3%81%AF\">ベアリポジトリとは</a><ul>\n<li><a href=\"#%E3%83%99%E3%82%A2bare%E3%81%A8%E3%81%AF\">ベア(bare)とは</a></li>\n<li><a href=\"#%E3%81%A4%E3%81%BE%E3%82%8A\">つまり</a></li>\n<li><a href=\"#%E4%BD%9C%E6%88%90%E6%99%82%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9\">作成時の注意点</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<h1><span id=\"ベアリポジトリとは\">ベアリポジトリとは</span></h1><h2><span id=\"ベアbareとは\">ベア(bare)とは</span></h2><p>露出した、本来あるべき物が無いという意味がある。</p>\n<h2><span id=\"つまり\">つまり</span></h2><p>これをGitのシステムとして解釈すると、「本来あるべき物が無い」＝「ワーキングディレクトリがない」という意味になる。<br>更新履歴のみを持っているリポジトリということになる</p>\n<p>リモートサーバー上に「ベアリポジトリ」を作成して、ローカルで編集したリポジトリを管理するために使う(GitHubと同じ動作をする)</p>\n<h2><span id=\"作成時の注意点\">作成時の注意点</span></h2><ul>\n<li>ベアリポジトリを作る場合のファイル名は末尾に<code>.git</code>をつける必要がある</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%99%E3%82%A2%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%A8%E3%81%AF\">ベアリポジトリとは</a><ul>\n<li><a href=\"#%E3%83%99%E3%82%A2bare%E3%81%A8%E3%81%AF\">ベア(bare)とは</a></li>\n<li><a href=\"#%E3%81%A4%E3%81%BE%E3%82%8A\">つまり</a></li>\n<li><a href=\"#%E4%BD%9C%E6%88%90%E6%99%82%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9\">作成時の注意点</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<h1 id=\"ベアリポジトリとは\"><a href=\"#ベアリポジトリとは\" class=\"headerlink\" title=\"ベアリポジトリとは\"></a>ベアリポジトリとは</h1><h2 id=\"ベア-bare-とは\"><a href=\"#ベア-bare-とは\" class=\"headerlink\" title=\"ベア(bare)とは\"></a>ベア(bare)とは</h2><p>露出した、本来あるべき物が無いという意味がある。</p>\n<h2 id=\"つまり\"><a href=\"#つまり\" class=\"headerlink\" title=\"つまり\"></a>つまり</h2><p>これをGitのシステムとして解釈すると、「本来あるべき物が無い」＝「ワーキングディレクトリがない」という意味になる。<br>更新履歴のみを持っているリポジトリということになる</p>\n<p>リモートサーバー上に「ベアリポジトリ」を作成して、ローカルで編集したリポジトリを管理するために使う(GitHubと同じ動作をする)</p>\n<h2 id=\"作成時の注意点\"><a href=\"#作成時の注意点\" class=\"headerlink\" title=\"作成時の注意点\"></a>作成時の注意点</h2><ul>\n<li>ベアリポジトリを作る場合のファイル名は末尾に<code>.git</code>をつける必要がある</li>\n</ul>\n"},{"title":"【Git】リポジトリ内で管理対象になっているファイルを確認する","date":"2021-04-09T05:10:09.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# リポジトリ内で管理されているファイルを確認する\n`ls-tree`を使用することでコミットに含まれる`ツリー(ファイル一覧)`を確認できます\n\n## 基本構文\n- ブランチ名を指定すると、そのブランチのHEADのコミットに含まれるファイル群が表示されます\n- SHA1を指定すると、指定したSHA1のコミット内の含まれるファイル群が表示される\n\n```shell-session\n$ git ls-tree ブランチ名\n$ git ls-tree SHA1\n```\n\n## 使用例\n実行結果\n```shell-session\n$ git ls-tree master\n\n100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    3\n100644 blob 9f4d9b6328248146d622d475135476dd39543f36    \"3.6\\350\\252\\262\\351\\241\\214.md\"\n100644 blob 3a6f51dce8200cbb4b00e8512cecf78de0d4c1b9    \"7.5\\350\\252\\262\\351\\241\\214.md\"\n100644 blob 5f3cf6dbab2950c0b8fe5b6588e905047c06de1b    \"8.5\\350\\252\\262\\351\\241\\214.md\"\n100644 blob 87b9d68a3644de01b90a511f5d680dc85d155433    \"9.5\\350\\252\\262\\351\\241\\214.md\"\n100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    another_rename\n100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    e\n100644 blob 233721e585933377d91bdbb18556a991dcca8c47    math.sh\n100644 blob 36de8a228bebca6e1d2d43e3fe7f2a260299a6d6    out.txt\n100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    test\n```\n\n表示される文字列の意味\n```\n100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    3\n```\n- 100644 : 型(100644=通常ファイル,100755=実行可能ファイル)\n- blob(ブロブ) : ファイルを表現するデータ構造名\n- e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 : ファイルのSHA1\n- 3 : ファイル名\n\n\n","source":"_posts/【Git】リポジトリ内で管理対象になっているファイルを確認する.md","raw":"---\ntitle: 【Git】リポジトリ内で管理対象になっているファイルを確認する\ndate: 2021-04-09 14:10:09\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# リポジトリ内で管理されているファイルを確認する\n`ls-tree`を使用することでコミットに含まれる`ツリー(ファイル一覧)`を確認できます\n\n## 基本構文\n- ブランチ名を指定すると、そのブランチのHEADのコミットに含まれるファイル群が表示されます\n- SHA1を指定すると、指定したSHA1のコミット内の含まれるファイル群が表示される\n\n```shell-session\n$ git ls-tree ブランチ名\n$ git ls-tree SHA1\n```\n\n## 使用例\n実行結果\n```shell-session\n$ git ls-tree master\n\n100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    3\n100644 blob 9f4d9b6328248146d622d475135476dd39543f36    \"3.6\\350\\252\\262\\351\\241\\214.md\"\n100644 blob 3a6f51dce8200cbb4b00e8512cecf78de0d4c1b9    \"7.5\\350\\252\\262\\351\\241\\214.md\"\n100644 blob 5f3cf6dbab2950c0b8fe5b6588e905047c06de1b    \"8.5\\350\\252\\262\\351\\241\\214.md\"\n100644 blob 87b9d68a3644de01b90a511f5d680dc85d155433    \"9.5\\350\\252\\262\\351\\241\\214.md\"\n100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    another_rename\n100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    e\n100644 blob 233721e585933377d91bdbb18556a991dcca8c47    math.sh\n100644 blob 36de8a228bebca6e1d2d43e3fe7f2a260299a6d6    out.txt\n100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    test\n```\n\n表示される文字列の意味\n```\n100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    3\n```\n- 100644 : 型(100644=通常ファイル,100755=実行可能ファイル)\n- blob(ブロブ) : ファイルを表現するデータ構造名\n- e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 : ファイルのSHA1\n- 3 : ファイル名\n\n\n","slug":"【Git】リポジトリ内で管理対象になっているファイルを確認する","published":1,"updated":"2021-04-13T05:43:53.684Z","_id":"cknezh3ag0028mzb66wul0vd3","comments":1,"layout":"post","photos":[],"link":"","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E5%86%85%E3%81%A7%E7%AE%A1%E7%90%86%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\">リポジトリ内で管理されているファイルを確認する</a><ul>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC%E6%A7%8B%E6%96%87\">基本構文</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"リポジトリ内で管理されているファイルを確認する\">リポジトリ内で管理されているファイルを確認する</span></h1><p><code>ls-tree</code>を使用することでコミットに含まれる<code>ツリー(ファイル一覧)</code>を確認できます</p>\n<h2><span id=\"基本構文\">基本構文</span></h2><ul>\n<li>ブランチ名を指定すると、そのブランチのHEADのコミットに含まれるファイル群が表示されます</li>\n<li>SHA1を指定すると、指定したSHA1のコミット内の含まれるファイル群が表示される</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git ls-tree ブランチ名</span><br><span class=\"line\">$ git ls-tree SHA1</span><br></pre></td></tr></table></figure>\n<h2><span id=\"使用例\">使用例</span></h2><p>実行結果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git ls-tree master</span><br><span class=\"line\"></span><br><span class=\"line\">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    3</span><br><span class=\"line\">100644 blob 9f4d9b6328248146d622d475135476dd39543f36    &quot;3.6\\350\\252\\262\\351\\241\\214.md&quot;</span><br><span class=\"line\">100644 blob 3a6f51dce8200cbb4b00e8512cecf78de0d4c1b9    &quot;7.5\\350\\252\\262\\351\\241\\214.md&quot;</span><br><span class=\"line\">100644 blob 5f3cf6dbab2950c0b8fe5b6588e905047c06de1b    &quot;8.5\\350\\252\\262\\351\\241\\214.md&quot;</span><br><span class=\"line\">100644 blob 87b9d68a3644de01b90a511f5d680dc85d155433    &quot;9.5\\350\\252\\262\\351\\241\\214.md&quot;</span><br><span class=\"line\">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    another_rename</span><br><span class=\"line\">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    e</span><br><span class=\"line\">100644 blob 233721e585933377d91bdbb18556a991dcca8c47    math.sh</span><br><span class=\"line\">100644 blob 36de8a228bebca6e1d2d43e3fe7f2a260299a6d6    out.txt</span><br><span class=\"line\">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    test</span><br></pre></td></tr></table></figure>\n<p>表示される文字列の意味</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>100644 : 型(100644=通常ファイル,100755=実行可能ファイル)</li>\n<li>blob(ブロブ) : ファイルを表現するデータ構造名</li>\n<li>e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 : ファイルのSHA1</li>\n<li>3 : ファイル名</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E5%86%85%E3%81%A7%E7%AE%A1%E7%90%86%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\">リポジトリ内で管理されているファイルを確認する</a><ul>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC%E6%A7%8B%E6%96%87\">基本構文</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"リポジトリ内で管理されているファイルを確認する\"><a href=\"#リポジトリ内で管理されているファイルを確認する\" class=\"headerlink\" title=\"リポジトリ内で管理されているファイルを確認する\"></a>リポジトリ内で管理されているファイルを確認する</h1><p><code>ls-tree</code>を使用することでコミットに含まれる<code>ツリー(ファイル一覧)</code>を確認できます</p>\n<h2 id=\"基本構文\"><a href=\"#基本構文\" class=\"headerlink\" title=\"基本構文\"></a>基本構文</h2><ul>\n<li>ブランチ名を指定すると、そのブランチのHEADのコミットに含まれるファイル群が表示されます</li>\n<li>SHA1を指定すると、指定したSHA1のコミット内の含まれるファイル群が表示される</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git ls-tree ブランチ名</span><br><span class=\"line\">$ git ls-tree SHA1</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用例\"><a href=\"#使用例\" class=\"headerlink\" title=\"使用例\"></a>使用例</h2><p>実行結果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git ls-tree master</span><br><span class=\"line\"></span><br><span class=\"line\">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    3</span><br><span class=\"line\">100644 blob 9f4d9b6328248146d622d475135476dd39543f36    &quot;3.6\\350\\252\\262\\351\\241\\214.md&quot;</span><br><span class=\"line\">100644 blob 3a6f51dce8200cbb4b00e8512cecf78de0d4c1b9    &quot;7.5\\350\\252\\262\\351\\241\\214.md&quot;</span><br><span class=\"line\">100644 blob 5f3cf6dbab2950c0b8fe5b6588e905047c06de1b    &quot;8.5\\350\\252\\262\\351\\241\\214.md&quot;</span><br><span class=\"line\">100644 blob 87b9d68a3644de01b90a511f5d680dc85d155433    &quot;9.5\\350\\252\\262\\351\\241\\214.md&quot;</span><br><span class=\"line\">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    another_rename</span><br><span class=\"line\">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    e</span><br><span class=\"line\">100644 blob 233721e585933377d91bdbb18556a991dcca8c47    math.sh</span><br><span class=\"line\">100644 blob 36de8a228bebca6e1d2d43e3fe7f2a260299a6d6    out.txt</span><br><span class=\"line\">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    test</span><br></pre></td></tr></table></figure>\n<p>表示される文字列の意味</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>100644 : 型(100644=通常ファイル,100755=実行可能ファイル)</li>\n<li>blob(ブロブ) : ファイルを表現するデータ構造名</li>\n<li>e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 : ファイルのSHA1</li>\n<li>3 : ファイル名</li>\n</ul>"},{"title":"【Git】各エリアを比較(diff)する","date":"2021-04-09T02:00:48.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n## diffをそのまま使用した場合\ngit diffは、ファイルの差分を比較する事のできるコマンドです。\n\n`git diff`だけを使用すると、`作業エリア`(実際のディレクトリ内のファイル)と`ステージングエリア`(git addした変更)の比較を行います。\n\n- git diff\n\t```\n\t作業エリアのファイル  <-比較->  ステージングエリアのファイル\n\t```\n\n## ステージング済みファイルとコミット履歴ファイルとの差分を見たい場合\nステージング済みのファイル(git addしてあるファイル)と、コミット履歴(commit済み)のファイルの差分を比較したいときは`git diff`コマンドに`--staged`スイッチをつけることで比較を行えます。\n\n- git diff --staged\n\t```\n\t作業エリアのファイル <- 比較 -> ステージング済みのファイル\n\t```\n","source":"_posts/【Git】各エリアを比較-diff-する.md","raw":"---\ntitle: 【Git】各エリアを比較(diff)する\ndate: 2021-04-09 11:00:48\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n## diffをそのまま使用した場合\ngit diffは、ファイルの差分を比較する事のできるコマンドです。\n\n`git diff`だけを使用すると、`作業エリア`(実際のディレクトリ内のファイル)と`ステージングエリア`(git addした変更)の比較を行います。\n\n- git diff\n\t```\n\t作業エリアのファイル  <-比較->  ステージングエリアのファイル\n\t```\n\n## ステージング済みファイルとコミット履歴ファイルとの差分を見たい場合\nステージング済みのファイル(git addしてあるファイル)と、コミット履歴(commit済み)のファイルの差分を比較したいときは`git diff`コマンドに`--staged`スイッチをつけることで比較を行えます。\n\n- git diff --staged\n\t```\n\t作業エリアのファイル <- 比較 -> ステージング済みのファイル\n\t```\n","slug":"【Git】各エリアを比較-diff-する","published":1,"updated":"2021-04-09T02:05:39.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3ah002amzb68ncydk1q","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#diff%E3%82%92%E3%81%9D%E3%81%AE%E3%81%BE%E3%81%BE%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\">diffをそのまま使用した場合</a></li>\n<li><a href=\"#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E6%B8%88%E3%81%BF%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A8%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E5%B1%A5%E6%AD%B4%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A8%E3%81%AE%E5%B7%AE%E5%88%86%E3%82%92%E8%A6%8B%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88\">ステージング済みファイルとコミット履歴ファイルとの差分を見たい場合</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h2><span id=\"diffをそのまま使用した場合\">diffをそのまま使用した場合</span></h2><p>git diffは、ファイルの差分を比較する事のできるコマンドです。</p>\n<p><code>git diff</code>だけを使用すると、<code>作業エリア</code>(実際のディレクトリ内のファイル)と<code>ステージングエリア</code>(git addした変更)の比較を行います。</p>\n<ul>\n<li><p>git diff</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">作業エリアのファイル  &lt;-比較-&gt;  ステージングエリアのファイル</span><br></pre></td></tr></table></figure>\n<h2><span id=\"ステージング済みファイルとコミット履歴ファイルとの差分を見たい場合\">ステージング済みファイルとコミット履歴ファイルとの差分を見たい場合</span></h2><p>ステージング済みのファイル(git addしてあるファイル)と、コミット履歴(commit済み)のファイルの差分を比較したいときは<code>git diff</code>コマンドに<code>--staged</code>スイッチをつけることで比較を行えます。</p>\n</li>\n<li><p>git diff –staged</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">作業エリアのファイル &lt;- 比較 -&gt; ステージング済みのファイル</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#diff%E3%82%92%E3%81%9D%E3%81%AE%E3%81%BE%E3%81%BE%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\">diffをそのまま使用した場合</a></li>\n<li><a href=\"#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E6%B8%88%E3%81%BF%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A8%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E5%B1%A5%E6%AD%B4%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A8%E3%81%AE%E5%B7%AE%E5%88%86%E3%82%92%E8%A6%8B%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88\">ステージング済みファイルとコミット履歴ファイルとの差分を見たい場合</a></li>\n</ul>\n<!-- tocstop -->","more":"<h2 id=\"diffをそのまま使用した場合\"><a href=\"#diffをそのまま使用した場合\" class=\"headerlink\" title=\"diffをそのまま使用した場合\"></a>diffをそのまま使用した場合</h2><p>git diffは、ファイルの差分を比較する事のできるコマンドです。</p>\n<p><code>git diff</code>だけを使用すると、<code>作業エリア</code>(実際のディレクトリ内のファイル)と<code>ステージングエリア</code>(git addした変更)の比較を行います。</p>\n<ul>\n<li><p>git diff</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">作業エリアのファイル  &lt;-比較-&gt;  ステージングエリアのファイル</span><br></pre></td></tr></table></figure>\n<h2 id=\"ステージング済みファイルとコミット履歴ファイルとの差分を見たい場合\"><a href=\"#ステージング済みファイルとコミット履歴ファイルとの差分を見たい場合\" class=\"headerlink\" title=\"ステージング済みファイルとコミット履歴ファイルとの差分を見たい場合\"></a>ステージング済みファイルとコミット履歴ファイルとの差分を見たい場合</h2><p>ステージング済みのファイル(git addしてあるファイル)と、コミット履歴(commit済み)のファイルの差分を比較したいときは<code>git diff</code>コマンドに<code>--staged</code>スイッチをつけることで比較を行えます。</p>\n</li>\n<li><p>git diff –staged</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">作業エリアのファイル &lt;- 比較 -&gt; ステージング済みのファイル</span><br></pre></td></tr></table></figure></li>\n</ul>"},{"title":"【Git】小分けにcommitするために使えるコマンド","date":"2021-04-07T14:58:29.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 「git add .」したらどのファイルがステージングされるかをチェックする\n- `git add --dray-run .`\n\t- 実際には、コミットされず`git add .`をしたらどうなるのかを表示してくれる\n\n```shell-session\n$ git add --dray-run .\n```\n\n# ハンクを活用する\n## ハンクとは\nハンクとはハンドピック(handpick)の略語で、同じファイル内で１つの修正のみの場合は、ファイルをそのまま`add->commit`すればいいが、実際は１つのファイル内で１つ以上の修正を行うケースが多い。それをステージング時に選択してコミットできるようにする機能。\n\n## 実際に使ってみる\nサンプルのために以下の内容が記述されている`hunkテスト`ファイルを作成した。\nこのファイルは事前にコミットしておく。\n\n```\nこれは元からあった文章1\nこれは元からあった文章2\nこれは元からあった文章3\nこれは元からあった文章4\nこれは元からあった文章5\nこれは元からあった文章6\nこれは元からあった文章7\n```\n\n### 1. ファイルの編集\n以下の内容に`hunkテスト`を編集する\n```\nこれは元からあった文章1\nこれは元からあった文章22\nこれは元からあった文章3\nこれは元からあった文章4\nこれは元からあった文章5\nこれは元からあった文章66\nこれは元からあった文章7\n```\n\n### 2. 1箇所の変更だけをコミットする\n今回は`これは元からあった文章です22`の変更だけをコミットしてみる\n```\n$ git add -p\n\ndiff --git \"a/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\" \"b/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\nindex 5c85024..af74fd5 100644\n--- \"a/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\n+++ \"b/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\n@@ -1,7 +1,7 @@\n これは元からあった文章1\n-これは元からあった文章2\n+これは元からあった文章22\n これは元からあった文章3\n これは元からあった文章4\n これは元からあった文章5\n-これは元からあった文章6\n+これは元からあった文章66\n これは元からあった文章7\n(1/1) Stage this hunk [y,n,q,a,d,s,e,?]?\n```\n\n一番下の行の、`(1/1) Stage this hunk [y,n,q,a,d,s,e,?]?`の小文字たちの意味を以下にまとめています。\n| 文字 | 解説                            | \n|----|-------------------------------| \n| y  | このハンクはステージングする                | \n| n  | このハンクはステージングしない               | \n| q  | 終了する                          | \n| a  | このファイルのハンクを含むすべてのハンクをステージングする | \n| d  | このファイルのハンクを含む全てのハンクをステージングしない | \n| s  | 現在のハンクをもっと小さなハンクに分割する         | \n| e  | 現在のハンクを手動で編集する                | \n| ?  | ヘルプを表示する                | \n\n今回は手動で細かく選択するので、`e`を選択する。選択すると次のような編集画面が現れる\n```\n# Manual hunk edit mode -- see bottom for a quick guide.\n@@ -1,7 +1,7 @@\n これは元からあった文章1\n-これは元からあった文章2\n+これは元からあった文章22\n これは元からあった文章3\n これは元からあった文章4\n これは元からあった文章5\n-これは元からあった文章6\n+これは元からあった文章66\n これは元からあった文章7\n# ---\n# To remove '-' lines, make them ' ' lines (context).\n# To remove '+' lines, delete them.\n# Lines starting with # will be removed.\n# \n# If the patch applies cleanly, the edited hunk will immediately be\n# marked for staging.\n# If it does not apply cleanly, you will be given an opportunity to\n# edit again.  If all lines of the hunk are removed, then the edit is\n# aborted and the hunk is left unchanged.\n```\n\n一番左の列が１文字分空間が空いていて。そこの変更があった行に文字が書かれている。今回は、`2`を`22`に書き換えた履歴だけを残したいので、以下のような内容に書き換える\n- 下の方に書いてある操作方法の日本語訳\n\t- `-`の行を消すには、その行を` `(スペース)に変える\n\t- `+`の行を消すには、その行を消去する\n\t- #で始まる行は、消される。(#から始まる行は気にしなくていい)\n\n```\n# Manual hunk edit mode -- see bottom for a quick guide.\n@@ -1,7 +1,7 @@\n これは元からあった文章1\n-これは元からあった文章2\n+これは元からあった文章22\n これは元からあった文章3\n これは元からあった文章4\n これは元からあった文章5\n これは元からあった文章6\n これは元からあった文章7\n# ---\n# To remove '-' lines, make them ' ' lines (context).\n# To remove '+' lines, delete them.\n# Lines starting with # will be removed.\n# \n# If the patch applies cleanly, the edited hunk will immediately be\n# marked for staging.\n# If it does not apply cleanly, you will be given an opportunity to\n# edit again.  If all lines of the hunk are removed, then the edit is\n# aborted and the hunk is left unchanged.\n```\n\n変更内容を保存して、編集ツールを抜けると、自動で残しておいた部分がステージングされる\n\n### 3. git diff --stagedでステージングされている変更を見てみる\n```shell-session\n$ git diff --staged\n\ndiff --git \"a/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\" \"b/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\nindex 5c85024..cc9784e 100644\n--- \"a/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\n+++ \"b/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\n@@ -1,5 +1,5 @@\n これは元からあった文章1\n-これは元からあった文章2\n+これは元からあった文章22\n これは元からあった文章3\n これは元からあった文章4\n これは元からあった文章5\n```\n\n","source":"_posts/【Git】小分けにcommitするために使えるコマンド.md","raw":"---\ntitle: 【Git】小分けにcommitするために使えるコマンド\ndate: 2021-04-07 23:58:29\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 「git add .」したらどのファイルがステージングされるかをチェックする\n- `git add --dray-run .`\n\t- 実際には、コミットされず`git add .`をしたらどうなるのかを表示してくれる\n\n```shell-session\n$ git add --dray-run .\n```\n\n# ハンクを活用する\n## ハンクとは\nハンクとはハンドピック(handpick)の略語で、同じファイル内で１つの修正のみの場合は、ファイルをそのまま`add->commit`すればいいが、実際は１つのファイル内で１つ以上の修正を行うケースが多い。それをステージング時に選択してコミットできるようにする機能。\n\n## 実際に使ってみる\nサンプルのために以下の内容が記述されている`hunkテスト`ファイルを作成した。\nこのファイルは事前にコミットしておく。\n\n```\nこれは元からあった文章1\nこれは元からあった文章2\nこれは元からあった文章3\nこれは元からあった文章4\nこれは元からあった文章5\nこれは元からあった文章6\nこれは元からあった文章7\n```\n\n### 1. ファイルの編集\n以下の内容に`hunkテスト`を編集する\n```\nこれは元からあった文章1\nこれは元からあった文章22\nこれは元からあった文章3\nこれは元からあった文章4\nこれは元からあった文章5\nこれは元からあった文章66\nこれは元からあった文章7\n```\n\n### 2. 1箇所の変更だけをコミットする\n今回は`これは元からあった文章です22`の変更だけをコミットしてみる\n```\n$ git add -p\n\ndiff --git \"a/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\" \"b/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\nindex 5c85024..af74fd5 100644\n--- \"a/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\n+++ \"b/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\n@@ -1,7 +1,7 @@\n これは元からあった文章1\n-これは元からあった文章2\n+これは元からあった文章22\n これは元からあった文章3\n これは元からあった文章4\n これは元からあった文章5\n-これは元からあった文章6\n+これは元からあった文章66\n これは元からあった文章7\n(1/1) Stage this hunk [y,n,q,a,d,s,e,?]?\n```\n\n一番下の行の、`(1/1) Stage this hunk [y,n,q,a,d,s,e,?]?`の小文字たちの意味を以下にまとめています。\n| 文字 | 解説                            | \n|----|-------------------------------| \n| y  | このハンクはステージングする                | \n| n  | このハンクはステージングしない               | \n| q  | 終了する                          | \n| a  | このファイルのハンクを含むすべてのハンクをステージングする | \n| d  | このファイルのハンクを含む全てのハンクをステージングしない | \n| s  | 現在のハンクをもっと小さなハンクに分割する         | \n| e  | 現在のハンクを手動で編集する                | \n| ?  | ヘルプを表示する                | \n\n今回は手動で細かく選択するので、`e`を選択する。選択すると次のような編集画面が現れる\n```\n# Manual hunk edit mode -- see bottom for a quick guide.\n@@ -1,7 +1,7 @@\n これは元からあった文章1\n-これは元からあった文章2\n+これは元からあった文章22\n これは元からあった文章3\n これは元からあった文章4\n これは元からあった文章5\n-これは元からあった文章6\n+これは元からあった文章66\n これは元からあった文章7\n# ---\n# To remove '-' lines, make them ' ' lines (context).\n# To remove '+' lines, delete them.\n# Lines starting with # will be removed.\n# \n# If the patch applies cleanly, the edited hunk will immediately be\n# marked for staging.\n# If it does not apply cleanly, you will be given an opportunity to\n# edit again.  If all lines of the hunk are removed, then the edit is\n# aborted and the hunk is left unchanged.\n```\n\n一番左の列が１文字分空間が空いていて。そこの変更があった行に文字が書かれている。今回は、`2`を`22`に書き換えた履歴だけを残したいので、以下のような内容に書き換える\n- 下の方に書いてある操作方法の日本語訳\n\t- `-`の行を消すには、その行を` `(スペース)に変える\n\t- `+`の行を消すには、その行を消去する\n\t- #で始まる行は、消される。(#から始まる行は気にしなくていい)\n\n```\n# Manual hunk edit mode -- see bottom for a quick guide.\n@@ -1,7 +1,7 @@\n これは元からあった文章1\n-これは元からあった文章2\n+これは元からあった文章22\n これは元からあった文章3\n これは元からあった文章4\n これは元からあった文章5\n これは元からあった文章6\n これは元からあった文章7\n# ---\n# To remove '-' lines, make them ' ' lines (context).\n# To remove '+' lines, delete them.\n# Lines starting with # will be removed.\n# \n# If the patch applies cleanly, the edited hunk will immediately be\n# marked for staging.\n# If it does not apply cleanly, you will be given an opportunity to\n# edit again.  If all lines of the hunk are removed, then the edit is\n# aborted and the hunk is left unchanged.\n```\n\n変更内容を保存して、編集ツールを抜けると、自動で残しておいた部分がステージングされる\n\n### 3. git diff --stagedでステージングされている変更を見てみる\n```shell-session\n$ git diff --staged\n\ndiff --git \"a/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\" \"b/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\nindex 5c85024..cc9784e 100644\n--- \"a/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\n+++ \"b/hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210\"\n@@ -1,5 +1,5 @@\n これは元からあった文章1\n-これは元からあった文章2\n+これは元からあった文章22\n これは元からあった文章3\n これは元からあった文章4\n これは元からあった文章5\n```\n\n","slug":"【Git】小分けにcommitするために使えるコマンド","published":1,"updated":"2021-04-09T02:04:58.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3an002cmzb65syhhu19","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#git-add-%E3%81%97%E3%81%9F%E3%82%89%E3%81%A9%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8C%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%81%95%E3%82%8C%E3%82%8B%E3%81%8B%E3%82%92%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%81%99%E3%82%8B\">「git add .」したらどのファイルがステージングされるかをチェックする</a></li>\n<li><a href=\"#%E3%83%8F%E3%83%B3%E3%82%AF%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%99%E3%82%8B\">ハンクを活用する</a><ul>\n<li><a href=\"#%E3%83%8F%E3%83%B3%E3%82%AF%E3%81%A8%E3%81%AF\">ハンクとは</a></li>\n<li><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AB%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\">実際に使ってみる</a><ul>\n<li><a href=\"#1-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E7%B7%A8%E9%9B%86\">1. ファイルの編集</a></li>\n<li><a href=\"#2-1%E7%AE%87%E6%89%80%E3%81%AE%E5%A4%89%E6%9B%B4%E3%81%A0%E3%81%91%E3%82%92%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%99%E3%82%8B\">2. 1箇所の変更だけをコミットする</a></li>\n<li><a href=\"#3-git-diff-staged%E3%81%A7%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E5%A4%89%E6%9B%B4%E3%82%92%E8%A6%8B%E3%81%A6%E3%81%BF%E3%82%8B\">3. git diff –stagedでステージングされている変更を見てみる</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"git-add-したらどのファイルがステージングされるかをチェックする\">「git add .」したらどのファイルがステージングされるかをチェックする</span></h1><ul>\n<li><code>git add --dray-run .</code><ul>\n<li>実際には、コミットされず<code>git add .</code>をしたらどうなるのかを表示してくれる</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add --dray-run .</span><br></pre></td></tr></table></figure>\n<h1><span id=\"ハンクを活用する\">ハンクを活用する</span></h1><h2><span id=\"ハンクとは\">ハンクとは</span></h2><p>ハンクとはハンドピック(handpick)の略語で、同じファイル内で１つの修正のみの場合は、ファイルをそのまま<code>add-&gt;commit</code>すればいいが、実際は１つのファイル内で１つ以上の修正を行うケースが多い。それをステージング時に選択してコミットできるようにする機能。</p>\n<h2><span id=\"実際に使ってみる\">実際に使ってみる</span></h2><p>サンプルのために以下の内容が記述されている<code>hunkテスト</code>ファイルを作成した。<br>このファイルは事前にコミットしておく。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これは元からあった文章1</span><br><span class=\"line\">これは元からあった文章2</span><br><span class=\"line\">これは元からあった文章3</span><br><span class=\"line\">これは元からあった文章4</span><br><span class=\"line\">これは元からあった文章5</span><br><span class=\"line\">これは元からあった文章6</span><br><span class=\"line\">これは元からあった文章7</span><br></pre></td></tr></table></figure>\n<h3><span id=\"1-ファイルの編集\">1. ファイルの編集</span></h3><p>以下の内容に<code>hunkテスト</code>を編集する</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これは元からあった文章1</span><br><span class=\"line\">これは元からあった文章22</span><br><span class=\"line\">これは元からあった文章3</span><br><span class=\"line\">これは元からあった文章4</span><br><span class=\"line\">これは元からあった文章5</span><br><span class=\"line\">これは元からあった文章66</span><br><span class=\"line\">これは元からあった文章7</span><br></pre></td></tr></table></figure>\n<h3><span id=\"2-1箇所の変更だけをコミットする\">2. 1箇所の変更だけをコミットする</span></h3><p>今回は<code>これは元からあった文章です22</code>の変更だけをコミットしてみる</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add -p</span><br><span class=\"line\"></span><br><span class=\"line\">diff --git &quot;a&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot; &quot;b&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">index 5c85024..af74fd5 100644</span><br><span class=\"line\">--- &quot;a&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">+++ &quot;b&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">@@ -1,7 +1,7 @@</span><br><span class=\"line\"> これは元からあった文章1</span><br><span class=\"line\">-これは元からあった文章2</span><br><span class=\"line\">+これは元からあった文章22</span><br><span class=\"line\"> これは元からあった文章3</span><br><span class=\"line\"> これは元からあった文章4</span><br><span class=\"line\"> これは元からあった文章5</span><br><span class=\"line\">-これは元からあった文章6</span><br><span class=\"line\">+これは元からあった文章66</span><br><span class=\"line\"> これは元からあった文章7</span><br><span class=\"line\">(1&#x2F;1) Stage this hunk [y,n,q,a,d,s,e,?]?</span><br></pre></td></tr></table></figure>\n<p>一番下の行の、<code>(1/1) Stage this hunk [y,n,q,a,d,s,e,?]?</code>の小文字たちの意味を以下にまとめています。<br>| 文字 | 解説                            |<br>|—-|——————————-|<br>| y  | このハンクはステージングする                |<br>| n  | このハンクはステージングしない               |<br>| q  | 終了する                          |<br>| a  | このファイルのハンクを含むすべてのハンクをステージングする |<br>| d  | このファイルのハンクを含む全てのハンクをステージングしない |<br>| s  | 現在のハンクをもっと小さなハンクに分割する         |<br>| e  | 現在のハンクを手動で編集する                |<br>| ?  | ヘルプを表示する                | </p>\n<p>今回は手動で細かく選択するので、<code>e</code>を選択する。選択すると次のような編集画面が現れる</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Manual hunk edit mode -- see bottom for a quick guide.</span><br><span class=\"line\">@@ -1,7 +1,7 @@</span><br><span class=\"line\"> これは元からあった文章1</span><br><span class=\"line\">-これは元からあった文章2</span><br><span class=\"line\">+これは元からあった文章22</span><br><span class=\"line\"> これは元からあった文章3</span><br><span class=\"line\"> これは元からあった文章4</span><br><span class=\"line\"> これは元からあった文章5</span><br><span class=\"line\">-これは元からあった文章6</span><br><span class=\"line\">+これは元からあった文章66</span><br><span class=\"line\"> これは元からあった文章7</span><br><span class=\"line\"># ---</span><br><span class=\"line\"># To remove &#39;-&#39; lines, make them &#39; &#39; lines (context).</span><br><span class=\"line\"># To remove &#39;+&#39; lines, delete them.</span><br><span class=\"line\"># Lines starting with # will be removed.</span><br><span class=\"line\"># </span><br><span class=\"line\"># If the patch applies cleanly, the edited hunk will immediately be</span><br><span class=\"line\"># marked for staging.</span><br><span class=\"line\"># If it does not apply cleanly, you will be given an opportunity to</span><br><span class=\"line\"># edit again.  If all lines of the hunk are removed, then the edit is</span><br><span class=\"line\"># aborted and the hunk is left unchanged.</span><br></pre></td></tr></table></figure>\n<p>一番左の列が１文字分空間が空いていて。そこの変更があった行に文字が書かれている。今回は、<code>2</code>を<code>22</code>に書き換えた履歴だけを残したいので、以下のような内容に書き換える</p>\n<ul>\n<li>下の方に書いてある操作方法の日本語訳<ul>\n<li><code>-</code>の行を消すには、その行を<code> </code>(スペース)に変える</li>\n<li><code>+</code>の行を消すには、その行を消去する</li>\n<li>#で始まる行は、消される。(#から始まる行は気にしなくていい)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Manual hunk edit mode -- see bottom for a quick guide.</span><br><span class=\"line\">@@ -1,7 +1,7 @@</span><br><span class=\"line\"> これは元からあった文章1</span><br><span class=\"line\">-これは元からあった文章2</span><br><span class=\"line\">+これは元からあった文章22</span><br><span class=\"line\"> これは元からあった文章3</span><br><span class=\"line\"> これは元からあった文章4</span><br><span class=\"line\"> これは元からあった文章5</span><br><span class=\"line\"> これは元からあった文章6</span><br><span class=\"line\"> これは元からあった文章7</span><br><span class=\"line\"># ---</span><br><span class=\"line\"># To remove &#39;-&#39; lines, make them &#39; &#39; lines (context).</span><br><span class=\"line\"># To remove &#39;+&#39; lines, delete them.</span><br><span class=\"line\"># Lines starting with # will be removed.</span><br><span class=\"line\"># </span><br><span class=\"line\"># If the patch applies cleanly, the edited hunk will immediately be</span><br><span class=\"line\"># marked for staging.</span><br><span class=\"line\"># If it does not apply cleanly, you will be given an opportunity to</span><br><span class=\"line\"># edit again.  If all lines of the hunk are removed, then the edit is</span><br><span class=\"line\"># aborted and the hunk is left unchanged.</span><br></pre></td></tr></table></figure>\n<p>変更内容を保存して、編集ツールを抜けると、自動で残しておいた部分がステージングされる</p>\n<h3><span id=\"3-git-diff-stagedでステージングされている変更を見てみる\">3. git diff –stagedでステージングされている変更を見てみる</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff --staged</span><br><span class=\"line\"></span><br><span class=\"line\">diff --git &quot;a&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot; &quot;b&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">index 5c85024..cc9784e 100644</span><br><span class=\"line\">--- &quot;a&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">+++ &quot;b&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">@@ -1,5 +1,5 @@</span><br><span class=\"line\"> これは元からあった文章1</span><br><span class=\"line\">-これは元からあった文章2</span><br><span class=\"line\">+これは元からあった文章22</span><br><span class=\"line\"> これは元からあった文章3</span><br><span class=\"line\"> これは元からあった文章4</span><br><span class=\"line\"> これは元からあった文章5</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#git-add-%E3%81%97%E3%81%9F%E3%82%89%E3%81%A9%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8C%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%81%95%E3%82%8C%E3%82%8B%E3%81%8B%E3%82%92%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%81%99%E3%82%8B\">「git add .」したらどのファイルがステージングされるかをチェックする</a></li>\n<li><a href=\"#%E3%83%8F%E3%83%B3%E3%82%AF%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%99%E3%82%8B\">ハンクを活用する</a><ul>\n<li><a href=\"#%E3%83%8F%E3%83%B3%E3%82%AF%E3%81%A8%E3%81%AF\">ハンクとは</a></li>\n<li><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AB%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\">実際に使ってみる</a><ul>\n<li><a href=\"#1-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E7%B7%A8%E9%9B%86\">1. ファイルの編集</a></li>\n<li><a href=\"#2-1%E7%AE%87%E6%89%80%E3%81%AE%E5%A4%89%E6%9B%B4%E3%81%A0%E3%81%91%E3%82%92%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%99%E3%82%8B\">2. 1箇所の変更だけをコミットする</a></li>\n<li><a href=\"#3-git-diff-staged%E3%81%A7%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E5%A4%89%E6%9B%B4%E3%82%92%E8%A6%8B%E3%81%A6%E3%81%BF%E3%82%8B\">3. git diff –stagedでステージングされている変更を見てみる</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"「git-add-」したらどのファイルがステージングされるかをチェックする\"><a href=\"#「git-add-」したらどのファイルがステージングされるかをチェックする\" class=\"headerlink\" title=\"「git add .」したらどのファイルがステージングされるかをチェックする\"></a>「git add .」したらどのファイルがステージングされるかをチェックする</h1><ul>\n<li><code>git add --dray-run .</code><ul>\n<li>実際には、コミットされず<code>git add .</code>をしたらどうなるのかを表示してくれる</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add --dray-run .</span><br></pre></td></tr></table></figure>\n<h1 id=\"ハンクを活用する\"><a href=\"#ハンクを活用する\" class=\"headerlink\" title=\"ハンクを活用する\"></a>ハンクを活用する</h1><h2 id=\"ハンクとは\"><a href=\"#ハンクとは\" class=\"headerlink\" title=\"ハンクとは\"></a>ハンクとは</h2><p>ハンクとはハンドピック(handpick)の略語で、同じファイル内で１つの修正のみの場合は、ファイルをそのまま<code>add-&gt;commit</code>すればいいが、実際は１つのファイル内で１つ以上の修正を行うケースが多い。それをステージング時に選択してコミットできるようにする機能。</p>\n<h2 id=\"実際に使ってみる\"><a href=\"#実際に使ってみる\" class=\"headerlink\" title=\"実際に使ってみる\"></a>実際に使ってみる</h2><p>サンプルのために以下の内容が記述されている<code>hunkテスト</code>ファイルを作成した。<br>このファイルは事前にコミットしておく。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これは元からあった文章1</span><br><span class=\"line\">これは元からあった文章2</span><br><span class=\"line\">これは元からあった文章3</span><br><span class=\"line\">これは元からあった文章4</span><br><span class=\"line\">これは元からあった文章5</span><br><span class=\"line\">これは元からあった文章6</span><br><span class=\"line\">これは元からあった文章7</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-ファイルの編集\"><a href=\"#1-ファイルの編集\" class=\"headerlink\" title=\"1. ファイルの編集\"></a>1. ファイルの編集</h3><p>以下の内容に<code>hunkテスト</code>を編集する</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これは元からあった文章1</span><br><span class=\"line\">これは元からあった文章22</span><br><span class=\"line\">これは元からあった文章3</span><br><span class=\"line\">これは元からあった文章4</span><br><span class=\"line\">これは元からあった文章5</span><br><span class=\"line\">これは元からあった文章66</span><br><span class=\"line\">これは元からあった文章7</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-1箇所の変更だけをコミットする\"><a href=\"#2-1箇所の変更だけをコミットする\" class=\"headerlink\" title=\"2. 1箇所の変更だけをコミットする\"></a>2. 1箇所の変更だけをコミットする</h3><p>今回は<code>これは元からあった文章です22</code>の変更だけをコミットしてみる</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add -p</span><br><span class=\"line\"></span><br><span class=\"line\">diff --git &quot;a&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot; &quot;b&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">index 5c85024..af74fd5 100644</span><br><span class=\"line\">--- &quot;a&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">+++ &quot;b&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">@@ -1,7 +1,7 @@</span><br><span class=\"line\"> これは元からあった文章1</span><br><span class=\"line\">-これは元からあった文章2</span><br><span class=\"line\">+これは元からあった文章22</span><br><span class=\"line\"> これは元からあった文章3</span><br><span class=\"line\"> これは元からあった文章4</span><br><span class=\"line\"> これは元からあった文章5</span><br><span class=\"line\">-これは元からあった文章6</span><br><span class=\"line\">+これは元からあった文章66</span><br><span class=\"line\"> これは元からあった文章7</span><br><span class=\"line\">(1&#x2F;1) Stage this hunk [y,n,q,a,d,s,e,?]?</span><br></pre></td></tr></table></figure>\n<p>一番下の行の、<code>(1/1) Stage this hunk [y,n,q,a,d,s,e,?]?</code>の小文字たちの意味を以下にまとめています。<br>| 文字 | 解説                            |<br>|—-|——————————-|<br>| y  | このハンクはステージングする                |<br>| n  | このハンクはステージングしない               |<br>| q  | 終了する                          |<br>| a  | このファイルのハンクを含むすべてのハンクをステージングする |<br>| d  | このファイルのハンクを含む全てのハンクをステージングしない |<br>| s  | 現在のハンクをもっと小さなハンクに分割する         |<br>| e  | 現在のハンクを手動で編集する                |<br>| ?  | ヘルプを表示する                | </p>\n<p>今回は手動で細かく選択するので、<code>e</code>を選択する。選択すると次のような編集画面が現れる</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Manual hunk edit mode -- see bottom for a quick guide.</span><br><span class=\"line\">@@ -1,7 +1,7 @@</span><br><span class=\"line\"> これは元からあった文章1</span><br><span class=\"line\">-これは元からあった文章2</span><br><span class=\"line\">+これは元からあった文章22</span><br><span class=\"line\"> これは元からあった文章3</span><br><span class=\"line\"> これは元からあった文章4</span><br><span class=\"line\"> これは元からあった文章5</span><br><span class=\"line\">-これは元からあった文章6</span><br><span class=\"line\">+これは元からあった文章66</span><br><span class=\"line\"> これは元からあった文章7</span><br><span class=\"line\"># ---</span><br><span class=\"line\"># To remove &#39;-&#39; lines, make them &#39; &#39; lines (context).</span><br><span class=\"line\"># To remove &#39;+&#39; lines, delete them.</span><br><span class=\"line\"># Lines starting with # will be removed.</span><br><span class=\"line\"># </span><br><span class=\"line\"># If the patch applies cleanly, the edited hunk will immediately be</span><br><span class=\"line\"># marked for staging.</span><br><span class=\"line\"># If it does not apply cleanly, you will be given an opportunity to</span><br><span class=\"line\"># edit again.  If all lines of the hunk are removed, then the edit is</span><br><span class=\"line\"># aborted and the hunk is left unchanged.</span><br></pre></td></tr></table></figure>\n<p>一番左の列が１文字分空間が空いていて。そこの変更があった行に文字が書かれている。今回は、<code>2</code>を<code>22</code>に書き換えた履歴だけを残したいので、以下のような内容に書き換える</p>\n<ul>\n<li>下の方に書いてある操作方法の日本語訳<ul>\n<li><code>-</code>の行を消すには、その行を<code> </code>(スペース)に変える</li>\n<li><code>+</code>の行を消すには、その行を消去する</li>\n<li>#で始まる行は、消される。(#から始まる行は気にしなくていい)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Manual hunk edit mode -- see bottom for a quick guide.</span><br><span class=\"line\">@@ -1,7 +1,7 @@</span><br><span class=\"line\"> これは元からあった文章1</span><br><span class=\"line\">-これは元からあった文章2</span><br><span class=\"line\">+これは元からあった文章22</span><br><span class=\"line\"> これは元からあった文章3</span><br><span class=\"line\"> これは元からあった文章4</span><br><span class=\"line\"> これは元からあった文章5</span><br><span class=\"line\"> これは元からあった文章6</span><br><span class=\"line\"> これは元からあった文章7</span><br><span class=\"line\"># ---</span><br><span class=\"line\"># To remove &#39;-&#39; lines, make them &#39; &#39; lines (context).</span><br><span class=\"line\"># To remove &#39;+&#39; lines, delete them.</span><br><span class=\"line\"># Lines starting with # will be removed.</span><br><span class=\"line\"># </span><br><span class=\"line\"># If the patch applies cleanly, the edited hunk will immediately be</span><br><span class=\"line\"># marked for staging.</span><br><span class=\"line\"># If it does not apply cleanly, you will be given an opportunity to</span><br><span class=\"line\"># edit again.  If all lines of the hunk are removed, then the edit is</span><br><span class=\"line\"># aborted and the hunk is left unchanged.</span><br></pre></td></tr></table></figure>\n<p>変更内容を保存して、編集ツールを抜けると、自動で残しておいた部分がステージングされる</p>\n<h3 id=\"3-git-diff-–stagedでステージングされている変更を見てみる\"><a href=\"#3-git-diff-–stagedでステージングされている変更を見てみる\" class=\"headerlink\" title=\"3. git diff –stagedでステージングされている変更を見てみる\"></a>3. git diff –stagedでステージングされている変更を見てみる</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff --staged</span><br><span class=\"line\"></span><br><span class=\"line\">diff --git &quot;a&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot; &quot;b&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">index 5c85024..cc9784e 100644</span><br><span class=\"line\">--- &quot;a&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">+++ &quot;b&#x2F;hunk\\343\\203\\206\\343\\202\\271\\343\\203\\210&quot;</span><br><span class=\"line\">@@ -1,5 +1,5 @@</span><br><span class=\"line\"> これは元からあった文章1</span><br><span class=\"line\">-これは元からあった文章2</span><br><span class=\"line\">+これは元からあった文章22</span><br><span class=\"line\"> これは元からあった文章3</span><br><span class=\"line\"> これは元からあった文章4</span><br><span class=\"line\"> これは元からあった文章5</span><br></pre></td></tr></table></figure>"},{"title":"【Git】リモートとタグの操作","date":"2021-04-04T15:35:53.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# リモートにタグをプッシュする\n`git push origin タグ名`コマンドを使用します。\n\n## 実行例\n`test`タグをプッシュします。\n\n```bash\n$ git push origin test\n```\n\n# リモートのタグを消去する\n`git push origin :タグ名`コマンドを使用します。\n\nブランチの消去の仕方と同じ用に、リファレンスを指定しないことでタグを消去しています。\n\n## 実行例\n`test`タグを消去します。\n\n```bash\n$ git push origin :test\n```\n","source":"_posts/【Git】リモートとタグの操作.md","raw":"---\ntitle: 【Git】リモートとタグの操作\ndate: 2021-04-05 00:35:53\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# リモートにタグをプッシュする\n`git push origin タグ名`コマンドを使用します。\n\n## 実行例\n`test`タグをプッシュします。\n\n```bash\n$ git push origin test\n```\n\n# リモートのタグを消去する\n`git push origin :タグ名`コマンドを使用します。\n\nブランチの消去の仕方と同じ用に、リファレンスを指定しないことでタグを消去しています。\n\n## 実行例\n`test`タグを消去します。\n\n```bash\n$ git push origin :test\n```\n","slug":"【Git】リモートとタグの操作","published":1,"updated":"2021-04-05T15:42:28.879Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3ar002dmzb66js029lj","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%81%AB%E3%82%BF%E3%82%B0%E3%82%92%E3%83%97%E3%83%83%E3%82%B7%E3%83%A5%E3%81%99%E3%82%8B\">リモートにタグをプッシュする</a><ul>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E4%BE%8B\">実行例</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%81%AE%E3%82%BF%E3%82%B0%E3%82%92%E6%B6%88%E5%8E%BB%E3%81%99%E3%82%8B\">リモートのタグを消去する</a><ul>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E4%BE%8B-1\">実行例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"リモートにタグをプッシュする\">リモートにタグをプッシュする</span></h1><p><code>git push origin タグ名</code>コマンドを使用します。</p>\n<h2><span id=\"実行例\">実行例</span></h2><p><code>test</code>タグをプッシュします。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"リモートのタグを消去する\">リモートのタグを消去する</span></h1><p><code>git push origin :タグ名</code>コマンドを使用します。</p>\n<p>ブランチの消去の仕方と同じ用に、リファレンスを指定しないことでタグを消去しています。</p>\n<h2><span id=\"実行例\">実行例</span></h2><p><code>test</code>タグを消去します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin :<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%81%AB%E3%82%BF%E3%82%B0%E3%82%92%E3%83%97%E3%83%83%E3%82%B7%E3%83%A5%E3%81%99%E3%82%8B\">リモートにタグをプッシュする</a><ul>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E4%BE%8B\">実行例</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%81%AE%E3%82%BF%E3%82%B0%E3%82%92%E6%B6%88%E5%8E%BB%E3%81%99%E3%82%8B\">リモートのタグを消去する</a><ul>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E4%BE%8B-1\">実行例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"リモートにタグをプッシュする\"><a href=\"#リモートにタグをプッシュする\" class=\"headerlink\" title=\"リモートにタグをプッシュする\"></a>リモートにタグをプッシュする</h1><p><code>git push origin タグ名</code>コマンドを使用します。</p>\n<h2 id=\"実行例\"><a href=\"#実行例\" class=\"headerlink\" title=\"実行例\"></a>実行例</h2><p><code>test</code>タグをプッシュします。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"リモートのタグを消去する\"><a href=\"#リモートのタグを消去する\" class=\"headerlink\" title=\"リモートのタグを消去する\"></a>リモートのタグを消去する</h1><p><code>git push origin :タグ名</code>コマンドを使用します。</p>\n<p>ブランチの消去の仕方と同じ用に、リファレンスを指定しないことでタグを消去しています。</p>\n<h2 id=\"実行例-1\"><a href=\"#実行例-1\" class=\"headerlink\" title=\"実行例\"></a>実行例</h2><p><code>test</code>タグを消去します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin :<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>"},{"title":"【Git】リモート関係のブランチの操作","date":"2021-04-10T02:03:07.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# ブランチをプッシュする\nブランチをプッシュするには、pushコマンドに`--set-upstream`スイッチをつけます。\n\n## set-upstreamをつけない場合エラー表示\nリモートブランチにクローンしたリポジトリで作成した`test`をpushします。\n\nすでにエラー文に解決方法が書いてあるのでそれ通りのコマンドを実行します。\n```bash\n$ git push\n\nfatal: The current branch test has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin test\n\n```\n\n## 実行結果\n\n```bash\n$ git push --set-upstream origin test\n\nEnumerating objects: 3, done.\nCounting objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 206 bytes | 206.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo /Users/daiki/Desktop/git/testRp/../bearRp/bare\n * [new branch]      test -> test\nBranch 'test' set up to track remote branch 'test' from 'origin'.\n```\n\n# リモートブランチを消去する\n\nリモートブランチ消去する場合`git push origin :消去したいブランチ名`コマンドを使用します。このコマンドだけでは、ローカルブランチは消去されません。\n\nローカルブランチも消去するには２つのコマンドを使う必要があります。１つはローカルブランチの消去のための`git branch -d`、2つめはリモートブランチを消去するための`git push origin :`です。\n\n1. ローカルブランチ消去 : git branch -d 消去したいブランチ名\n2. リモートブランチ消去 : git push origin :消去したいブランチ名\n\n## リモートブランチを消去するときの「:消去したいブランチ名」とはなにか\nrefspec(リファレンス指定)と呼ばれるもので、`ソース側ブランチ(src):ディスティネーション側ブランチ(dest)の対応を表しています。\n\n通常の`git psuh`コマンドでも、複雑な構文が隠されているだけで、正式な記述をすると`git push origin ローカルブランチ:リモートブランチ`となります。\n\n## 実行例\n`testブランチ`を消去します。\n\nリモートブランチのみを消去する場合\n```bash\n$ git push origin :test\n```\n\nローカルブランチとリモートブランチどちらも消去する場合\n```bash\n$ git branch -d test\n$ git push origin :test\n```\n","source":"_posts/【Git】リモート関係のブランチの操作.md","raw":"---\ntitle: 【Git】リモート関係のブランチの操作\ndate: 2021-04-10 11:03:07\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# ブランチをプッシュする\nブランチをプッシュするには、pushコマンドに`--set-upstream`スイッチをつけます。\n\n## set-upstreamをつけない場合エラー表示\nリモートブランチにクローンしたリポジトリで作成した`test`をpushします。\n\nすでにエラー文に解決方法が書いてあるのでそれ通りのコマンドを実行します。\n```bash\n$ git push\n\nfatal: The current branch test has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin test\n\n```\n\n## 実行結果\n\n```bash\n$ git push --set-upstream origin test\n\nEnumerating objects: 3, done.\nCounting objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 206 bytes | 206.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo /Users/daiki/Desktop/git/testRp/../bearRp/bare\n * [new branch]      test -> test\nBranch 'test' set up to track remote branch 'test' from 'origin'.\n```\n\n# リモートブランチを消去する\n\nリモートブランチ消去する場合`git push origin :消去したいブランチ名`コマンドを使用します。このコマンドだけでは、ローカルブランチは消去されません。\n\nローカルブランチも消去するには２つのコマンドを使う必要があります。１つはローカルブランチの消去のための`git branch -d`、2つめはリモートブランチを消去するための`git push origin :`です。\n\n1. ローカルブランチ消去 : git branch -d 消去したいブランチ名\n2. リモートブランチ消去 : git push origin :消去したいブランチ名\n\n## リモートブランチを消去するときの「:消去したいブランチ名」とはなにか\nrefspec(リファレンス指定)と呼ばれるもので、`ソース側ブランチ(src):ディスティネーション側ブランチ(dest)の対応を表しています。\n\n通常の`git psuh`コマンドでも、複雑な構文が隠されているだけで、正式な記述をすると`git push origin ローカルブランチ:リモートブランチ`となります。\n\n## 実行例\n`testブランチ`を消去します。\n\nリモートブランチのみを消去する場合\n```bash\n$ git push origin :test\n```\n\nローカルブランチとリモートブランチどちらも消去する場合\n```bash\n$ git branch -d test\n$ git push origin :test\n```\n","slug":"【Git】リモート関係のブランチの操作","published":1,"updated":"2021-04-09T05:03:51.962Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3ar002emzb64twc5wyx","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E3%83%97%E3%83%83%E3%82%B7%E3%83%A5%E3%81%99%E3%82%8B\">ブランチをプッシュする</a><ul>\n<li><a href=\"#set-upstream%E3%82%92%E3%81%A4%E3%81%91%E3%81%AA%E3%81%84%E5%A0%B4%E5%90%88%E3%82%A8%E3%83%A9%E3%83%BC%E8%A1%A8%E7%A4%BA\">set-upstreamをつけない場合エラー表示</a></li>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C\">実行結果</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E6%B6%88%E5%8E%BB%E3%81%99%E3%82%8B\">リモートブランチを消去する</a><ul>\n<li><a href=\"#%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E6%B6%88%E5%8E%BB%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E6%B6%88%E5%8E%BB%E3%81%97%E3%81%9F%E3%81%84%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E5%90%8D%E3%81%A8%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\">リモートブランチを消去するときの「:消去したいブランチ名」とはなにか</a></li>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E4%BE%8B\">実行例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"ブランチをプッシュする\">ブランチをプッシュする</span></h1><p>ブランチをプッシュするには、pushコマンドに<code>--set-upstream</code>スイッチをつけます。</p>\n<h2><span id=\"set-upstreamをつけない場合エラー表示\">set-upstreamをつけない場合エラー表示</span></h2><p>リモートブランチにクローンしたリポジトリで作成した<code>test</code>をpushします。</p>\n<p>すでにエラー文に解決方法が書いてあるのでそれ通りのコマンドを実行します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: The current branch <span class=\"built_in\">test</span> has no upstream branch.</span><br><span class=\"line\">To push the current branch and <span class=\"built_in\">set</span> the remote as upstream, use</span><br><span class=\"line\"></span><br><span class=\"line\">    git push --set-upstream origin <span class=\"built_in\">test</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2><span id=\"実行結果\">実行結果</span></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push --set-upstream origin <span class=\"built_in\">test</span></span><br><span class=\"line\"></span><br><span class=\"line\">Enumerating objects: 3, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Counting objects: 100% (3/3), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Writing objects: 100% (3/3), 206 bytes | 206.00 KiB/s, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">To /Users/daiki/Desktop/git/testRp/../bearRp/bare</span><br><span class=\"line\"> * [new branch]      <span class=\"built_in\">test</span> -&gt; <span class=\"built_in\">test</span></span><br><span class=\"line\">Branch <span class=\"string\">&#x27;test&#x27;</span> <span class=\"built_in\">set</span> up to track remote branch <span class=\"string\">&#x27;test&#x27;</span> from <span class=\"string\">&#x27;origin&#x27;</span>.</span><br></pre></td></tr></table></figure>\n<h1><span id=\"リモートブランチを消去する\">リモートブランチを消去する</span></h1><p>リモートブランチ消去する場合<code>git push origin :消去したいブランチ名</code>コマンドを使用します。このコマンドだけでは、ローカルブランチは消去されません。</p>\n<p>ローカルブランチも消去するには２つのコマンドを使う必要があります。１つはローカルブランチの消去のための<code>git branch -d</code>、2つめはリモートブランチを消去するための<code>git push origin :</code>です。</p>\n<ol>\n<li>ローカルブランチ消去 : git branch -d 消去したいブランチ名</li>\n<li>リモートブランチ消去 : git push origin :消去したいブランチ名</li>\n</ol>\n<h2><span id=\"リモートブランチを消去するときの消去したいブランチ名とはなにか\">リモートブランチを消去するときの「:消去したいブランチ名」とはなにか</span></h2><p>refspec(リファレンス指定)と呼ばれるもので、`ソース側ブランチ(src):ディスティネーション側ブランチ(dest)の対応を表しています。</p>\n<p>通常の<code>git psuh</code>コマンドでも、複雑な構文が隠されているだけで、正式な記述をすると<code>git push origin ローカルブランチ:リモートブランチ</code>となります。</p>\n<h2><span id=\"実行例\">実行例</span></h2><p><code>testブランチ</code>を消去します。</p>\n<p>リモートブランチのみを消去する場合</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin :<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<p>ローカルブランチとリモートブランチどちらも消去する場合</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -d <span class=\"built_in\">test</span></span><br><span class=\"line\">$ git push origin :<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E3%83%97%E3%83%83%E3%82%B7%E3%83%A5%E3%81%99%E3%82%8B\">ブランチをプッシュする</a><ul>\n<li><a href=\"#set-upstream%E3%82%92%E3%81%A4%E3%81%91%E3%81%AA%E3%81%84%E5%A0%B4%E5%90%88%E3%82%A8%E3%83%A9%E3%83%BC%E8%A1%A8%E7%A4%BA\">set-upstreamをつけない場合エラー表示</a></li>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C\">実行結果</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E6%B6%88%E5%8E%BB%E3%81%99%E3%82%8B\">リモートブランチを消去する</a><ul>\n<li><a href=\"#%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E6%B6%88%E5%8E%BB%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E6%B6%88%E5%8E%BB%E3%81%97%E3%81%9F%E3%81%84%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E5%90%8D%E3%81%A8%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\">リモートブランチを消去するときの「:消去したいブランチ名」とはなにか</a></li>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E4%BE%8B\">実行例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"ブランチをプッシュする\"><a href=\"#ブランチをプッシュする\" class=\"headerlink\" title=\"ブランチをプッシュする\"></a>ブランチをプッシュする</h1><p>ブランチをプッシュするには、pushコマンドに<code>--set-upstream</code>スイッチをつけます。</p>\n<h2 id=\"set-upstreamをつけない場合エラー表示\"><a href=\"#set-upstreamをつけない場合エラー表示\" class=\"headerlink\" title=\"set-upstreamをつけない場合エラー表示\"></a>set-upstreamをつけない場合エラー表示</h2><p>リモートブランチにクローンしたリポジトリで作成した<code>test</code>をpushします。</p>\n<p>すでにエラー文に解決方法が書いてあるのでそれ通りのコマンドを実行します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: The current branch <span class=\"built_in\">test</span> has no upstream branch.</span><br><span class=\"line\">To push the current branch and <span class=\"built_in\">set</span> the remote as upstream, use</span><br><span class=\"line\"></span><br><span class=\"line\">    git push --set-upstream origin <span class=\"built_in\">test</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"実行結果\"><a href=\"#実行結果\" class=\"headerlink\" title=\"実行結果\"></a>実行結果</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push --set-upstream origin <span class=\"built_in\">test</span></span><br><span class=\"line\"></span><br><span class=\"line\">Enumerating objects: 3, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Counting objects: 100% (3/3), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Writing objects: 100% (3/3), 206 bytes | 206.00 KiB/s, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">To /Users/daiki/Desktop/git/testRp/../bearRp/bare</span><br><span class=\"line\"> * [new branch]      <span class=\"built_in\">test</span> -&gt; <span class=\"built_in\">test</span></span><br><span class=\"line\">Branch <span class=\"string\">&#x27;test&#x27;</span> <span class=\"built_in\">set</span> up to track remote branch <span class=\"string\">&#x27;test&#x27;</span> from <span class=\"string\">&#x27;origin&#x27;</span>.</span><br></pre></td></tr></table></figure>\n<h1 id=\"リモートブランチを消去する\"><a href=\"#リモートブランチを消去する\" class=\"headerlink\" title=\"リモートブランチを消去する\"></a>リモートブランチを消去する</h1><p>リモートブランチ消去する場合<code>git push origin :消去したいブランチ名</code>コマンドを使用します。このコマンドだけでは、ローカルブランチは消去されません。</p>\n<p>ローカルブランチも消去するには２つのコマンドを使う必要があります。１つはローカルブランチの消去のための<code>git branch -d</code>、2つめはリモートブランチを消去するための<code>git push origin :</code>です。</p>\n<ol>\n<li>ローカルブランチ消去 : git branch -d 消去したいブランチ名</li>\n<li>リモートブランチ消去 : git push origin :消去したいブランチ名</li>\n</ol>\n<h2 id=\"リモートブランチを消去するときの「-消去したいブランチ名」とはなにか\"><a href=\"#リモートブランチを消去するときの「-消去したいブランチ名」とはなにか\" class=\"headerlink\" title=\"リモートブランチを消去するときの「:消去したいブランチ名」とはなにか\"></a>リモートブランチを消去するときの「:消去したいブランチ名」とはなにか</h2><p>refspec(リファレンス指定)と呼ばれるもので、`ソース側ブランチ(src):ディスティネーション側ブランチ(dest)の対応を表しています。</p>\n<p>通常の<code>git psuh</code>コマンドでも、複雑な構文が隠されているだけで、正式な記述をすると<code>git push origin ローカルブランチ:リモートブランチ</code>となります。</p>\n<h2 id=\"実行例\"><a href=\"#実行例\" class=\"headerlink\" title=\"実行例\"></a>実行例</h2><p><code>testブランチ</code>を消去します。</p>\n<p>リモートブランチのみを消去する場合</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin :<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<p>ローカルブランチとリモートブランチどちらも消去する場合</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -d <span class=\"built_in\">test</span></span><br><span class=\"line\">$ git push origin :<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>"},{"title":"【Git】ログに更新情報も一緒に表示させる","date":"2021-04-11T02:03:52.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# ファイル名とどれくらい変更されたかを知りたいとき\n`git log --stat`を使うと、ファイル名と変更量(追加or消去)を表示する\n- 変更が0でファイル名が表示されている場合は、中身のないファイルが新規に作成されている\n\n```shell-session\nファイル名 | 変更点カウント 変更箇所の概要(+ or -)\n何個のファイルが変更されたか、追記された行数(+),消去された行数(-)\n```\n\n## 実際の実行画面\n```shell-session\n$ git log --stat\n\ncommit 24f2afa3e2e06e33a912525ad7c85b2791e07de7\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Thu Mar 4 12:43:41 2021 +0900\n\n    Adding two numbers\n\n math.sh | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n``` \n","source":"_posts/【Git】ログに更新情報も一緒に表示させる.md","raw":"---\ntitle: 【Git】ログに更新情報も一緒に表示させる\ndate: 2021-04-11 11:03:52\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# ファイル名とどれくらい変更されたかを知りたいとき\n`git log --stat`を使うと、ファイル名と変更量(追加or消去)を表示する\n- 変更が0でファイル名が表示されている場合は、中身のないファイルが新規に作成されている\n\n```shell-session\nファイル名 | 変更点カウント 変更箇所の概要(+ or -)\n何個のファイルが変更されたか、追記された行数(+),消去された行数(-)\n```\n\n## 実際の実行画面\n```shell-session\n$ git log --stat\n\ncommit 24f2afa3e2e06e33a912525ad7c85b2791e07de7\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Thu Mar 4 12:43:41 2021 +0900\n\n    Adding two numbers\n\n math.sh | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n``` \n","slug":"【Git】ログに更新情報も一緒に表示させる","published":1,"updated":"2021-04-09T05:03:35.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3as002hmzb6hosgcuq9","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%81%A8%E3%81%A9%E3%82%8C%E3%81%8F%E3%82%89%E3%81%84%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%81%9F%E3%81%8B%E3%82%92%E7%9F%A5%E3%82%8A%E3%81%9F%E3%81%84%E3%81%A8%E3%81%8D\">ファイル名とどれくらい変更されたかを知りたいとき</a><ul>\n<li><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AE%E5%AE%9F%E8%A1%8C%E7%94%BB%E9%9D%A2\">実際の実行画面</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"ファイル名とどれくらい変更されたかを知りたいとき\">ファイル名とどれくらい変更されたかを知りたいとき</span></h1><p><code>git log --stat</code>を使うと、ファイル名と変更量(追加or消去)を表示する</p>\n<ul>\n<li>変更が0でファイル名が表示されている場合は、中身のないファイルが新規に作成されている</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ファイル名 | 変更点カウント 変更箇所の概要(+ or -)</span><br><span class=\"line\">何個のファイルが変更されたか、追記された行数(+),消去された行数(-)</span><br></pre></td></tr></table></figure>\n<h2><span id=\"実際の実行画面\">実際の実行画面</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --stat</span><br><span class=\"line\"></span><br><span class=\"line\">commit 24f2afa3e2e06e33a912525ad7c85b2791e07de7</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Thu Mar 4 12:43:41 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding two numbers</span><br><span class=\"line\"></span><br><span class=\"line\"> math.sh | 4 +++-</span><br><span class=\"line\"> 1 file changed, 3 insertions(+), 1 deletion(-)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%81%A8%E3%81%A9%E3%82%8C%E3%81%8F%E3%82%89%E3%81%84%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%81%9F%E3%81%8B%E3%82%92%E7%9F%A5%E3%82%8A%E3%81%9F%E3%81%84%E3%81%A8%E3%81%8D\">ファイル名とどれくらい変更されたかを知りたいとき</a><ul>\n<li><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AE%E5%AE%9F%E8%A1%8C%E7%94%BB%E9%9D%A2\">実際の実行画面</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"ファイル名とどれくらい変更されたかを知りたいとき\"><a href=\"#ファイル名とどれくらい変更されたかを知りたいとき\" class=\"headerlink\" title=\"ファイル名とどれくらい変更されたかを知りたいとき\"></a>ファイル名とどれくらい変更されたかを知りたいとき</h1><p><code>git log --stat</code>を使うと、ファイル名と変更量(追加or消去)を表示する</p>\n<ul>\n<li>変更が0でファイル名が表示されている場合は、中身のないファイルが新規に作成されている</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ファイル名 | 変更点カウント 変更箇所の概要(+ or -)</span><br><span class=\"line\">何個のファイルが変更されたか、追記された行数(+),消去された行数(-)</span><br></pre></td></tr></table></figure>\n<h2 id=\"実際の実行画面\"><a href=\"#実際の実行画面\" class=\"headerlink\" title=\"実際の実行画面\"></a>実際の実行画面</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --stat</span><br><span class=\"line\"></span><br><span class=\"line\">commit 24f2afa3e2e06e33a912525ad7c85b2791e07de7</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Thu Mar 4 12:43:41 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Adding two numbers</span><br><span class=\"line\"></span><br><span class=\"line\"> math.sh | 4 +++-</span><br><span class=\"line\"> 1 file changed, 3 insertions(+), 1 deletion(-)</span><br></pre></td></tr></table></figure>"},{"title":"【Git】管理されているファイル情報をみる","date":"2021-03-07T00:07:32.000Z","_content":"## リポジトリで「管理されている」ファイルのリストを取得する\n`ls-files`コマンドの`-c`オプションを使用する\n\n`ls-files`はデフォルトで`-c`オプションがついている\n> -c, --cached<br>\n\tShow cached files in the output (default)\n\n### 実行結果例\n```shell-session\n% git ls-files \n1\n2\n3\n4\naaa\n```\n\n## リポジトリで「管理されていない」ファイルのリストを取得する\n`ls-files`コマンドの`-o`オプションを使用する\n\n> -o, --others<br>\n\tShow other (i.e. untracked) files in the output\n\n### 実行結果例\n```shell-session\n% git ls-files -o\n5\nbbb\n```\n","source":"_posts/【Git】管理されているファイル情報をみる.md","raw":"---\ntitle: 【Git】管理されているファイル情報をみる\ndate: 2021-03-07 09:07:32\ntags:\n- Git\n---\n## リポジトリで「管理されている」ファイルのリストを取得する\n`ls-files`コマンドの`-c`オプションを使用する\n\n`ls-files`はデフォルトで`-c`オプションがついている\n> -c, --cached<br>\n\tShow cached files in the output (default)\n\n### 実行結果例\n```shell-session\n% git ls-files \n1\n2\n3\n4\naaa\n```\n\n## リポジトリで「管理されていない」ファイルのリストを取得する\n`ls-files`コマンドの`-o`オプションを使用する\n\n> -o, --others<br>\n\tShow other (i.e. untracked) files in the output\n\n### 実行結果例\n```shell-session\n% git ls-files -o\n5\nbbb\n```\n","slug":"【Git】管理されているファイル情報をみる","published":1,"updated":"2021-03-07T00:45:40.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3at002jmzb61mk51rio","content":"<h2><span id=\"リポジトリで管理されているファイルのリストを取得する\">リポジトリで「管理されている」ファイルのリストを取得する</span></h2><p><code>ls-files</code>コマンドの<code>-c</code>オプションを使用する</p>\n<p><code>ls-files</code>はデフォルトで<code>-c</code>オプションがついている</p>\n<blockquote>\n<p>-c, –cached<br><br>    Show cached files in the output (default)</p>\n</blockquote>\n<h3><span id=\"実行結果例\">実行結果例</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% git ls-files </span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">aaa</span><br></pre></td></tr></table></figure>\n<h2><span id=\"リポジトリで管理されていないファイルのリストを取得する\">リポジトリで「管理されていない」ファイルのリストを取得する</span></h2><p><code>ls-files</code>コマンドの<code>-o</code>オプションを使用する</p>\n<blockquote>\n<p>-o, –others<br><br>    Show other (i.e. untracked) files in the output</p>\n</blockquote>\n<h3><span id=\"実行結果例\">実行結果例</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% git ls-files -o</span><br><span class=\"line\">5</span><br><span class=\"line\">bbb</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"リポジトリで「管理されている」ファイルのリストを取得する\"><a href=\"#リポジトリで「管理されている」ファイルのリストを取得する\" class=\"headerlink\" title=\"リポジトリで「管理されている」ファイルのリストを取得する\"></a>リポジトリで「管理されている」ファイルのリストを取得する</h2><p><code>ls-files</code>コマンドの<code>-c</code>オプションを使用する</p>\n<p><code>ls-files</code>はデフォルトで<code>-c</code>オプションがついている</p>\n<blockquote>\n<p>-c, –cached<br><br>    Show cached files in the output (default)</p>\n</blockquote>\n<h3 id=\"実行結果例\"><a href=\"#実行結果例\" class=\"headerlink\" title=\"実行結果例\"></a>実行結果例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% git ls-files </span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">aaa</span><br></pre></td></tr></table></figure>\n<h2 id=\"リポジトリで「管理されていない」ファイルのリストを取得する\"><a href=\"#リポジトリで「管理されていない」ファイルのリストを取得する\" class=\"headerlink\" title=\"リポジトリで「管理されていない」ファイルのリストを取得する\"></a>リポジトリで「管理されていない」ファイルのリストを取得する</h2><p><code>ls-files</code>コマンドの<code>-o</code>オプションを使用する</p>\n<blockquote>\n<p>-o, –others<br><br>    Show other (i.e. untracked) files in the output</p>\n</blockquote>\n<h3 id=\"実行結果例-1\"><a href=\"#実行結果例-1\" class=\"headerlink\" title=\"実行結果例\"></a>実行結果例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% git ls-files -o</span><br><span class=\"line\">5</span><br><span class=\"line\">bbb</span><br></pre></td></tr></table></figure>"},{"title":"【Git】直前のコミットを修正する","date":"2021-04-08T14:01:42.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# --amendスイッチを使用する\n`amend`とは、日本語で`修正する`という意味。修正するというものの、できないこともあるので注意する必要がある\n\n## できること\n- 直前のコミットメッセージの修正\n- 直前のコミット内容へのファイルの追加\n\n## できないこと\n- 2つ以上前のコミットを修正する\n\t - `git rebase -i`と組み合わせて行う\n- コミットからファイルを消去する\n\t- `git reset`を使う必要がある\n\n# コミットメッセージの編集の仕方\n以下コマンドを実行する \n```shell-session\n$ git commit --amend\n```\n\nGitに設定してあるエディタが開き、以下のような編集画面が表示される\n```shell-session\n\n1.txtの追加\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# Date:      Fri Mar 12 14:22:29 2021 +0900\n#\n# On branch master\n# Changes to be committed:\n#\tnew file:   \"1.txt\"\n#\n```\n\nこの一番上のメッセージを編集して、保存してエディタを閉じれば自動で１つ前のコミットを書き換えてくれる\n\n# ファイルを追加する\n追加したいファイルを`git add`してステージングしてから、`git commit --amend`を使用する\n\n```shell-session\n$ git add テスト2.txt\n$ git commit --ammend --no-edit\n```\n\n`--no-edit`スイッチは、直前のコミットのメッセージを変更せずにそのまま使い回すスイッチ\n\t-\tコメントも編集したい場合は、`--no-edit`スイッチをつけなければ編集できる\n","source":"_posts/【Git】直前のコミットを修正する.md","raw":"---\ntitle: 【Git】直前のコミットを修正する\ndate: 2021-04-08 23:01:42\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# --amendスイッチを使用する\n`amend`とは、日本語で`修正する`という意味。修正するというものの、できないこともあるので注意する必要がある\n\n## できること\n- 直前のコミットメッセージの修正\n- 直前のコミット内容へのファイルの追加\n\n## できないこと\n- 2つ以上前のコミットを修正する\n\t - `git rebase -i`と組み合わせて行う\n- コミットからファイルを消去する\n\t- `git reset`を使う必要がある\n\n# コミットメッセージの編集の仕方\n以下コマンドを実行する \n```shell-session\n$ git commit --amend\n```\n\nGitに設定してあるエディタが開き、以下のような編集画面が表示される\n```shell-session\n\n1.txtの追加\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# Date:      Fri Mar 12 14:22:29 2021 +0900\n#\n# On branch master\n# Changes to be committed:\n#\tnew file:   \"1.txt\"\n#\n```\n\nこの一番上のメッセージを編集して、保存してエディタを閉じれば自動で１つ前のコミットを書き換えてくれる\n\n# ファイルを追加する\n追加したいファイルを`git add`してステージングしてから、`git commit --amend`を使用する\n\n```shell-session\n$ git add テスト2.txt\n$ git commit --ammend --no-edit\n```\n\n`--no-edit`スイッチは、直前のコミットのメッセージを変更せずにそのまま使い回すスイッチ\n\t-\tコメントも編集したい場合は、`--no-edit`スイッチをつけなければ編集できる\n","slug":"【Git】直前のコミットを修正する","published":1,"updated":"2021-04-09T02:06:08.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3au002lmzb63gcacczi","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#-amend%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B\">–amendスイッチを使用する</a><ul>\n<li><a href=\"#%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8\">できること</a></li>\n<li><a href=\"#%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8\">できないこと</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AE%E7%B7%A8%E9%9B%86%E3%81%AE%E4%BB%95%E6%96%B9\">コミットメッセージの編集の仕方</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\">ファイルを追加する</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"amendスイッチを使用する\">–amendスイッチを使用する</span></h1><p><code>amend</code>とは、日本語で<code>修正する</code>という意味。修正するというものの、できないこともあるので注意する必要がある</p>\n<h2><span id=\"できること\">できること</span></h2><ul>\n<li>直前のコミットメッセージの修正</li>\n<li>直前のコミット内容へのファイルの追加</li>\n</ul>\n<h2><span id=\"できないこと\">できないこと</span></h2><ul>\n<li>2つ以上前のコミットを修正する<ul>\n<li><code>git rebase -i</code>と組み合わせて行う</li>\n</ul>\n</li>\n<li>コミットからファイルを消去する<ul>\n<li><code>git reset</code>を使う必要がある</li>\n</ul>\n</li>\n</ul>\n<h1><span id=\"コミットメッセージの編集の仕方\">コミットメッセージの編集の仕方</span></h1><p>以下コマンドを実行する </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit --amend</span><br></pre></td></tr></table></figure>\n<p>Gitに設定してあるエディタが開き、以下のような編集画面が表示される</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1.txtの追加</span><br><span class=\"line\"></span><br><span class=\"line\"># Please enter the commit message for your changes. Lines starting</span><br><span class=\"line\"># with &#39;#&#39; will be ignored, and an empty message aborts the commit.</span><br><span class=\"line\">#</span><br><span class=\"line\"># Date:      Fri Mar 12 14:22:29 2021 +0900</span><br><span class=\"line\">#</span><br><span class=\"line\"># On branch master</span><br><span class=\"line\"># Changes to be committed:</span><br><span class=\"line\">#\tnew file:   &quot;1.txt&quot;</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure>\n<p>この一番上のメッセージを編集して、保存してエディタを閉じれば自動で１つ前のコミットを書き換えてくれる</p>\n<h1><span id=\"ファイルを追加する\">ファイルを追加する</span></h1><p>追加したいファイルを<code>git add</code>してステージングしてから、<code>git commit --amend</code>を使用する</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add テスト2.txt</span><br><span class=\"line\">$ git commit --ammend --no-edit</span><br></pre></td></tr></table></figure>\n<p><code>--no-edit</code>スイッチは、直前のコミットのメッセージを変更せずにそのまま使い回すスイッチ<br>    -    コメントも編集したい場合は、<code>--no-edit</code>スイッチをつけなければ編集できる</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#-amend%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B\">–amendスイッチを使用する</a><ul>\n<li><a href=\"#%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8\">できること</a></li>\n<li><a href=\"#%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8\">できないこと</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AE%E7%B7%A8%E9%9B%86%E3%81%AE%E4%BB%95%E6%96%B9\">コミットメッセージの編集の仕方</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\">ファイルを追加する</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"–amendスイッチを使用する\"><a href=\"#–amendスイッチを使用する\" class=\"headerlink\" title=\"–amendスイッチを使用する\"></a>–amendスイッチを使用する</h1><p><code>amend</code>とは、日本語で<code>修正する</code>という意味。修正するというものの、できないこともあるので注意する必要がある</p>\n<h2 id=\"できること\"><a href=\"#できること\" class=\"headerlink\" title=\"できること\"></a>できること</h2><ul>\n<li>直前のコミットメッセージの修正</li>\n<li>直前のコミット内容へのファイルの追加</li>\n</ul>\n<h2 id=\"できないこと\"><a href=\"#できないこと\" class=\"headerlink\" title=\"できないこと\"></a>できないこと</h2><ul>\n<li>2つ以上前のコミットを修正する<ul>\n<li><code>git rebase -i</code>と組み合わせて行う</li>\n</ul>\n</li>\n<li>コミットからファイルを消去する<ul>\n<li><code>git reset</code>を使う必要がある</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"コミットメッセージの編集の仕方\"><a href=\"#コミットメッセージの編集の仕方\" class=\"headerlink\" title=\"コミットメッセージの編集の仕方\"></a>コミットメッセージの編集の仕方</h1><p>以下コマンドを実行する </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit --amend</span><br></pre></td></tr></table></figure>\n<p>Gitに設定してあるエディタが開き、以下のような編集画面が表示される</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1.txtの追加</span><br><span class=\"line\"></span><br><span class=\"line\"># Please enter the commit message for your changes. Lines starting</span><br><span class=\"line\"># with &#39;#&#39; will be ignored, and an empty message aborts the commit.</span><br><span class=\"line\">#</span><br><span class=\"line\"># Date:      Fri Mar 12 14:22:29 2021 +0900</span><br><span class=\"line\">#</span><br><span class=\"line\"># On branch master</span><br><span class=\"line\"># Changes to be committed:</span><br><span class=\"line\">#\tnew file:   &quot;1.txt&quot;</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure>\n<p>この一番上のメッセージを編集して、保存してエディタを閉じれば自動で１つ前のコミットを書き換えてくれる</p>\n<h1 id=\"ファイルを追加する\"><a href=\"#ファイルを追加する\" class=\"headerlink\" title=\"ファイルを追加する\"></a>ファイルを追加する</h1><p>追加したいファイルを<code>git add</code>してステージングしてから、<code>git commit --amend</code>を使用する</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add テスト2.txt</span><br><span class=\"line\">$ git commit --ammend --no-edit</span><br></pre></td></tr></table></figure>\n<p><code>--no-edit</code>スイッチは、直前のコミットのメッセージを変更せずにそのまま使い回すスイッチ<br>    -    コメントも編集したい場合は、<code>--no-edit</code>スイッチをつけなければ編集できる</p>"},{"title":"【Git】管理しているファイルのリネームを簡単にする","date":"2021-04-14T14:09:09.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# git addする手間を減らせるGitコマンド\n通常の手順で行うと、`git add 変更を加えたファイル名`が必要になる作業をGitコマンドを使うことでステージングを自動でやってもらえる\n\n## ファイル名を変更する\n### 通常のリネーム\n1. `mv 元ファイル名 変更ファイル名`\n2. `git add 変更ファイル名`\n3. `git commit -m \"ファイル名変更\"`\n\n### Gitのコマンドを使った変更\n1. `git mv 元ファイル名 変更ファイル名`\n2. `git commit -m \"ファイル名変更\"`\n\n## ファイルを消去する\n### 通常のファイル消去\n1. `rm ファイル名`\n2. `git add ファイル名`\n3. `git commit -m \"ファイル消去\"`\n\n### Gitのコマンドを使った消去\n1. `git rm ファイル名`\n2. `git commit -m \"ファイル消去\"`\n","source":"_posts/【Git】管理しているファイルのリネームを簡単にする.md","raw":"---\ntitle: 【Git】管理しているファイルのリネームを簡単にする\ndate: 2021-04-14 23:09:09\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# git addする手間を減らせるGitコマンド\n通常の手順で行うと、`git add 変更を加えたファイル名`が必要になる作業をGitコマンドを使うことでステージングを自動でやってもらえる\n\n## ファイル名を変更する\n### 通常のリネーム\n1. `mv 元ファイル名 変更ファイル名`\n2. `git add 変更ファイル名`\n3. `git commit -m \"ファイル名変更\"`\n\n### Gitのコマンドを使った変更\n1. `git mv 元ファイル名 変更ファイル名`\n2. `git commit -m \"ファイル名変更\"`\n\n## ファイルを消去する\n### 通常のファイル消去\n1. `rm ファイル名`\n2. `git add ファイル名`\n3. `git commit -m \"ファイル消去\"`\n\n### Gitのコマンドを使った消去\n1. `git rm ファイル名`\n2. `git commit -m \"ファイル消去\"`\n","slug":"【Git】管理しているファイルのリネームを簡単にする","published":1,"updated":"2021-04-09T05:12:47.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3au002mmzb63nx57p3f","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#git-add%E3%81%99%E3%82%8B%E6%89%8B%E9%96%93%E3%82%92%E6%B8%9B%E3%82%89%E3%81%9B%E3%82%8Bgit%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\">git addする手間を減らせるGitコマンド</a><ul>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B\">ファイル名を変更する</a><ul>\n<li><a href=\"#%E9%80%9A%E5%B8%B8%E3%81%AE%E3%83%AA%E3%83%8D%E3%83%BC%E3%83%A0\">通常のリネーム</a></li>\n<li><a href=\"#git%E3%81%AE%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E5%A4%89%E6%9B%B4\">Gitのコマンドを使った変更</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E6%B6%88%E5%8E%BB%E3%81%99%E3%82%8B\">ファイルを消去する</a><ul>\n<li><a href=\"#%E9%80%9A%E5%B8%B8%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%B6%88%E5%8E%BB\">通常のファイル消去</a></li>\n<li><a href=\"#git%E3%81%AE%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E6%B6%88%E5%8E%BB\">Gitのコマンドを使った消去</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"git-addする手間を減らせるgitコマンド\">git addする手間を減らせるGitコマンド</span></h1><p>通常の手順で行うと、<code>git add 変更を加えたファイル名</code>が必要になる作業をGitコマンドを使うことでステージングを自動でやってもらえる</p>\n<h2><span id=\"ファイル名を変更する\">ファイル名を変更する</span></h2><h3><span id=\"通常のリネーム\">通常のリネーム</span></h3><ol>\n<li><code>mv 元ファイル名 変更ファイル名</code></li>\n<li><code>git add 変更ファイル名</code></li>\n<li><code>git commit -m &quot;ファイル名変更&quot;</code></li>\n</ol>\n<h3><span id=\"gitのコマンドを使った変更\">Gitのコマンドを使った変更</span></h3><ol>\n<li><code>git mv 元ファイル名 変更ファイル名</code></li>\n<li><code>git commit -m &quot;ファイル名変更&quot;</code></li>\n</ol>\n<h2><span id=\"ファイルを消去する\">ファイルを消去する</span></h2><h3><span id=\"通常のファイル消去\">通常のファイル消去</span></h3><ol>\n<li><code>rm ファイル名</code></li>\n<li><code>git add ファイル名</code></li>\n<li><code>git commit -m &quot;ファイル消去&quot;</code></li>\n</ol>\n<h3><span id=\"gitのコマンドを使った消去\">Gitのコマンドを使った消去</span></h3><ol>\n<li><code>git rm ファイル名</code></li>\n<li><code>git commit -m &quot;ファイル消去&quot;</code></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#git-add%E3%81%99%E3%82%8B%E6%89%8B%E9%96%93%E3%82%92%E6%B8%9B%E3%82%89%E3%81%9B%E3%82%8Bgit%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\">git addする手間を減らせるGitコマンド</a><ul>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B\">ファイル名を変更する</a><ul>\n<li><a href=\"#%E9%80%9A%E5%B8%B8%E3%81%AE%E3%83%AA%E3%83%8D%E3%83%BC%E3%83%A0\">通常のリネーム</a></li>\n<li><a href=\"#git%E3%81%AE%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E5%A4%89%E6%9B%B4\">Gitのコマンドを使った変更</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E6%B6%88%E5%8E%BB%E3%81%99%E3%82%8B\">ファイルを消去する</a><ul>\n<li><a href=\"#%E9%80%9A%E5%B8%B8%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%B6%88%E5%8E%BB\">通常のファイル消去</a></li>\n<li><a href=\"#git%E3%81%AE%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E6%B6%88%E5%8E%BB\">Gitのコマンドを使った消去</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"git-addする手間を減らせるGitコマンド\"><a href=\"#git-addする手間を減らせるGitコマンド\" class=\"headerlink\" title=\"git addする手間を減らせるGitコマンド\"></a>git addする手間を減らせるGitコマンド</h1><p>通常の手順で行うと、<code>git add 変更を加えたファイル名</code>が必要になる作業をGitコマンドを使うことでステージングを自動でやってもらえる</p>\n<h2 id=\"ファイル名を変更する\"><a href=\"#ファイル名を変更する\" class=\"headerlink\" title=\"ファイル名を変更する\"></a>ファイル名を変更する</h2><h3 id=\"通常のリネーム\"><a href=\"#通常のリネーム\" class=\"headerlink\" title=\"通常のリネーム\"></a>通常のリネーム</h3><ol>\n<li><code>mv 元ファイル名 変更ファイル名</code></li>\n<li><code>git add 変更ファイル名</code></li>\n<li><code>git commit -m &quot;ファイル名変更&quot;</code></li>\n</ol>\n<h3 id=\"Gitのコマンドを使った変更\"><a href=\"#Gitのコマンドを使った変更\" class=\"headerlink\" title=\"Gitのコマンドを使った変更\"></a>Gitのコマンドを使った変更</h3><ol>\n<li><code>git mv 元ファイル名 変更ファイル名</code></li>\n<li><code>git commit -m &quot;ファイル名変更&quot;</code></li>\n</ol>\n<h2 id=\"ファイルを消去する\"><a href=\"#ファイルを消去する\" class=\"headerlink\" title=\"ファイルを消去する\"></a>ファイルを消去する</h2><h3 id=\"通常のファイル消去\"><a href=\"#通常のファイル消去\" class=\"headerlink\" title=\"通常のファイル消去\"></a>通常のファイル消去</h3><ol>\n<li><code>rm ファイル名</code></li>\n<li><code>git add ファイル名</code></li>\n<li><code>git commit -m &quot;ファイル消去&quot;</code></li>\n</ol>\n<h3 id=\"Gitのコマンドを使った消去\"><a href=\"#Gitのコマンドを使った消去\" class=\"headerlink\" title=\"Gitのコマンドを使った消去\"></a>Gitのコマンドを使った消去</h3><ol>\n<li><code>git rm ファイル名</code></li>\n<li><code>git commit -m &quot;ファイル消去&quot;</code></li>\n</ol>"},{"title":"【Gitエラー】「fatal: Out of memory, malloc failed (tried to allocate xxxxxxxxxxx bytes)」の解決方法","date":"2021-02-25T13:48:44.000Z","_content":"## 原因\nファイル容量の大きいGitリポジトリをチェックアウトしようとしたら起きたので、Gitの解凍処理でメモリが食い尽くされているのが原因らいしい\n\n## 解決策\n解凍処理を小分けにする\n\n`~/.gitconfig`に以下を追記する\n```\n[core]\npackedGitLimit = 128m\npackedGitWindowSize = 128m\n\n[pack]\ndeltaCacheSize = 128m\npackSizeLimit = 128m\nwindowMemory = 128m\n```\n","source":"_posts/【Gitエラー】「fatal-Out-of-memory-malloc-failed-tried-to-allocate-xxxxxxxxxxx-bytes-」の解決方法.md","raw":"---\ntitle: >-\n  【Gitエラー】「fatal: Out of memory, malloc failed (tried to allocate xxxxxxxxxxx\n  bytes)」の解決方法\ndate: 2021-02-25 22:48:44\ntags:\n- Git\n---\n## 原因\nファイル容量の大きいGitリポジトリをチェックアウトしようとしたら起きたので、Gitの解凍処理でメモリが食い尽くされているのが原因らいしい\n\n## 解決策\n解凍処理を小分けにする\n\n`~/.gitconfig`に以下を追記する\n```\n[core]\npackedGitLimit = 128m\npackedGitWindowSize = 128m\n\n[pack]\ndeltaCacheSize = 128m\npackSizeLimit = 128m\nwindowMemory = 128m\n```\n","slug":"【Gitエラー】「fatal-Out-of-memory-malloc-failed-tried-to-allocate-xxxxxxxxxxx-bytes-」の解決方法","published":1,"updated":"2021-02-25T13:58:10.095Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3b1002omzb66jrv81po","content":"<h2><span id=\"原因\">原因</span></h2><p>ファイル容量の大きいGitリポジトリをチェックアウトしようとしたら起きたので、Gitの解凍処理でメモリが食い尽くされているのが原因らいしい</p>\n<h2><span id=\"解決策\">解決策</span></h2><p>解凍処理を小分けにする</p>\n<p><code>~/.gitconfig</code>に以下を追記する</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[core]</span><br><span class=\"line\">packedGitLimit &#x3D; 128m</span><br><span class=\"line\">packedGitWindowSize &#x3D; 128m</span><br><span class=\"line\"></span><br><span class=\"line\">[pack]</span><br><span class=\"line\">deltaCacheSize &#x3D; 128m</span><br><span class=\"line\">packSizeLimit &#x3D; 128m</span><br><span class=\"line\">windowMemory &#x3D; 128m</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>ファイル容量の大きいGitリポジトリをチェックアウトしようとしたら起きたので、Gitの解凍処理でメモリが食い尽くされているのが原因らいしい</p>\n<h2 id=\"解決策\"><a href=\"#解決策\" class=\"headerlink\" title=\"解決策\"></a>解決策</h2><p>解凍処理を小分けにする</p>\n<p><code>~/.gitconfig</code>に以下を追記する</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[core]</span><br><span class=\"line\">packedGitLimit &#x3D; 128m</span><br><span class=\"line\">packedGitWindowSize &#x3D; 128m</span><br><span class=\"line\"></span><br><span class=\"line\">[pack]</span><br><span class=\"line\">deltaCacheSize &#x3D; 128m</span><br><span class=\"line\">packSizeLimit &#x3D; 128m</span><br><span class=\"line\">windowMemory &#x3D; 128m</span><br></pre></td></tr></table></figure>"},{"title":"【Kotlin】View内のコンポーネントの取得方法","date":"2021-03-11T17:07:04.000Z","_content":"## Javaっぽく取得する\n\nデータバインディングというらしい？\n\n```kotlin\noverride fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\t\t\t\t\n\t\t\t\t// コンポーネントに設定したID(textView)からTextViewを取得する\n\t\t\t\tval textView = findViewById(R.id.textView) as TextView\n}\n```\n\n## Kotlinっぽく取得する（Kotlin Android Extensions使用）\n\n### Kotlin Android Extensions\n\nKotlinが公式で提供している、Androidアプリ開発をサポートしてくれる拡張機能\n[https://archive-blog.yagi2.dev/2017/10/18/good-bye-findviewbyid.html](https://archive-blog.yagi2.dev/2017/10/18/good-bye-findviewbyid.html)\n\n```kotlin\n// Inportする必要がある\n// <layout>には取得したいLayoutXMLの名前を指定\nimport kotlinx.android.synthetic.main.<layout>.*\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n\t\t\t\t// 後はViewないで指定した、コンポーネントのIDから呼び出せる\n\t\t\t\ttextView.text = \"テストだよ\"\n}\n```\n","source":"_posts/【Kotlin】View内のコンポーネントの取得方法.md","raw":"---\ntitle: 【Kotlin】View内のコンポーネントの取得方法\ndate: 2021-03-12 02:07:04\ntags:\n- Android\n- Android Studio\n- Kotlin\n---\n## Javaっぽく取得する\n\nデータバインディングというらしい？\n\n```kotlin\noverride fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\t\t\t\t\n\t\t\t\t// コンポーネントに設定したID(textView)からTextViewを取得する\n\t\t\t\tval textView = findViewById(R.id.textView) as TextView\n}\n```\n\n## Kotlinっぽく取得する（Kotlin Android Extensions使用）\n\n### Kotlin Android Extensions\n\nKotlinが公式で提供している、Androidアプリ開発をサポートしてくれる拡張機能\n[https://archive-blog.yagi2.dev/2017/10/18/good-bye-findviewbyid.html](https://archive-blog.yagi2.dev/2017/10/18/good-bye-findviewbyid.html)\n\n```kotlin\n// Inportする必要がある\n// <layout>には取得したいLayoutXMLの名前を指定\nimport kotlinx.android.synthetic.main.<layout>.*\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n\t\t\t\t// 後はViewないで指定した、コンポーネントのIDから呼び出せる\n\t\t\t\ttextView.text = \"テストだよ\"\n}\n```\n","slug":"【Kotlin】View内のコンポーネントの取得方法","published":1,"updated":"2021-03-12T19:10:32.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3b5002qmzb6fxrf4zru","content":"<h2><span id=\"javaっぽく取得する\">Javaっぽく取得する</span></h2><p>データバインディングというらしい？</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">onCreate</span><span class=\"params\">(savedInstanceState: <span class=\"type\">Bundle</span>?)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState)</span><br><span class=\"line\">        setContentView(R.layout.activity_main)</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// コンポーネントに設定したID(textView)からTextViewを取得する</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">val</span> textView = findViewById(R.id.textView) <span class=\"keyword\">as</span> TextView</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"kotlinっぽく取得するkotlin-android-extensions使用\">Kotlinっぽく取得する（Kotlin Android Extensions使用）</span></h2><h3><span id=\"kotlin-android-extensions\">Kotlin Android Extensions</span></h3><p>Kotlinが公式で提供している、Androidアプリ開発をサポートしてくれる拡張機能<br><a href=\"https://archive-blog.yagi2.dev/2017/10/18/good-bye-findviewbyid.html\">https://archive-blog.yagi2.dev/2017/10/18/good-bye-findviewbyid.html</a></p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Inportする必要がある</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;layout&gt;には取得したいLayoutXMLの名前を指定</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> kotlinx.android.synthetic.main.&lt;layout&gt;.*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">onCreate</span><span class=\"params\">(savedInstanceState: <span class=\"type\">Bundle</span>?)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState)</span><br><span class=\"line\">        setContentView(R.layout.activity_main)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 後はViewないで指定した、コンポーネントのIDから呼び出せる</span></span><br><span class=\"line\">\t\t\t\ttextView.text = <span class=\"string\">&quot;テストだよ&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Javaっぽく取得する\"><a href=\"#Javaっぽく取得する\" class=\"headerlink\" title=\"Javaっぽく取得する\"></a>Javaっぽく取得する</h2><p>データバインディングというらしい？</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">onCreate</span><span class=\"params\">(savedInstanceState: <span class=\"type\">Bundle</span>?)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState)</span><br><span class=\"line\">        setContentView(R.layout.activity_main)</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// コンポーネントに設定したID(textView)からTextViewを取得する</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">val</span> textView = findViewById(R.id.textView) <span class=\"keyword\">as</span> TextView</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Kotlinっぽく取得する（Kotlin-Android-Extensions使用）\"><a href=\"#Kotlinっぽく取得する（Kotlin-Android-Extensions使用）\" class=\"headerlink\" title=\"Kotlinっぽく取得する（Kotlin Android Extensions使用）\"></a>Kotlinっぽく取得する（Kotlin Android Extensions使用）</h2><h3 id=\"Kotlin-Android-Extensions\"><a href=\"#Kotlin-Android-Extensions\" class=\"headerlink\" title=\"Kotlin Android Extensions\"></a>Kotlin Android Extensions</h3><p>Kotlinが公式で提供している、Androidアプリ開発をサポートしてくれる拡張機能<br><a href=\"https://archive-blog.yagi2.dev/2017/10/18/good-bye-findviewbyid.html\">https://archive-blog.yagi2.dev/2017/10/18/good-bye-findviewbyid.html</a></p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Inportする必要がある</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;layout&gt;には取得したいLayoutXMLの名前を指定</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> kotlinx.android.synthetic.main.&lt;layout&gt;.*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">onCreate</span><span class=\"params\">(savedInstanceState: <span class=\"type\">Bundle</span>?)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState)</span><br><span class=\"line\">        setContentView(R.layout.activity_main)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 後はViewないで指定した、コンポーネントのIDから呼び出せる</span></span><br><span class=\"line\">\t\t\t\ttextView.text = <span class=\"string\">&quot;テストだよ&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"【Mac】ツールのバージョンのチェック方法","date":"2021-03-25T13:59:57.000Z","_content":"## 目次\n<!-- toc -->\n<!-- more -->\n\n## Swiftバージョン確認\n- `swift -version`\n\n```shell-session\n$ swift -version\n\nApple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)\nTarget: x86_64-apple-darwin20.3.0\n```\n\n## OSバージョン確認\n- `sw_vers`\n\n```shell-session\n$ sw_vers\n\nProductName:    macOS\nProductVersion: 11.2\nBuildVersion:   20D64\n```\n\n## XCodeバージョン確認\n- `xcodebuild -version`\n\n```shell-session\n$ xcodebuild -version\n\nXcode 12.4\nBuild version 12D4e\n```\n\n## 色々バージョン確認\n- `system_profiler > ファイル名.txt`\n\t- かなり待つ必要がある\n\n```shell-session\n$ system_profiler > ver.txt\n```\n","source":"_posts/【Mac】ツールのバージョンのチェック方法.md","raw":"---\ntitle: 【Mac】ツールのバージョンのチェック方法\ndate: 2021-03-25 22:59:57\ntags:\n- Mac\n---\n## 目次\n<!-- toc -->\n<!-- more -->\n\n## Swiftバージョン確認\n- `swift -version`\n\n```shell-session\n$ swift -version\n\nApple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)\nTarget: x86_64-apple-darwin20.3.0\n```\n\n## OSバージョン確認\n- `sw_vers`\n\n```shell-session\n$ sw_vers\n\nProductName:    macOS\nProductVersion: 11.2\nBuildVersion:   20D64\n```\n\n## XCodeバージョン確認\n- `xcodebuild -version`\n\n```shell-session\n$ xcodebuild -version\n\nXcode 12.4\nBuild version 12D4e\n```\n\n## 色々バージョン確認\n- `system_profiler > ファイル名.txt`\n\t- かなり待つ必要がある\n\n```shell-session\n$ system_profiler > ver.txt\n```\n","slug":"【Mac】ツールのバージョンのチェック方法","published":1,"updated":"2021-03-25T17:01:22.151Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3b6002tmzb61z8kaig0","content":"<h2><span id=\"目次\">目次</span></h2><!-- toc -->\n\n<ul>\n<li><a href=\"#swift%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">Swiftバージョン確認</a></li>\n<li><a href=\"#os%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">OSバージョン確認</a></li>\n<li><a href=\"#xcode%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">XCodeバージョン確認</a></li>\n<li><a href=\"#%E8%89%B2%E3%80%85%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">色々バージョン確認</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h2><span id=\"swiftバージョン確認\">Swiftバージョン確認</span></h2><ul>\n<li><code>swift -version</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ swift -version</span><br><span class=\"line\"></span><br><span class=\"line\">Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)</span><br><span class=\"line\">Target: x86_64-apple-darwin20.3.0</span><br></pre></td></tr></table></figure>\n<h2><span id=\"osバージョン確認\">OSバージョン確認</span></h2><ul>\n<li><code>sw_vers</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sw_vers</span><br><span class=\"line\"></span><br><span class=\"line\">ProductName:    macOS</span><br><span class=\"line\">ProductVersion: 11.2</span><br><span class=\"line\">BuildVersion:   20D64</span><br></pre></td></tr></table></figure>\n<h2><span id=\"xcodeバージョン確認\">XCodeバージョン確認</span></h2><ul>\n<li><code>xcodebuild -version</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ xcodebuild -version</span><br><span class=\"line\"></span><br><span class=\"line\">Xcode 12.4</span><br><span class=\"line\">Build version 12D4e</span><br></pre></td></tr></table></figure>\n<h2><span id=\"色々バージョン確認\">色々バージョン確認</span></h2><ul>\n<li><code>system_profiler &gt; ファイル名.txt</code><ul>\n<li>かなり待つ必要がある</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ system_profiler &gt; ver.txt</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><!-- toc -->\n\n<ul>\n<li><a href=\"#swift%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">Swiftバージョン確認</a></li>\n<li><a href=\"#os%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">OSバージョン確認</a></li>\n<li><a href=\"#xcode%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">XCodeバージョン確認</a></li>\n<li><a href=\"#%E8%89%B2%E3%80%85%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">色々バージョン確認</a></li>\n</ul>\n<!-- tocstop -->","more":"<h2 id=\"Swiftバージョン確認\"><a href=\"#Swiftバージョン確認\" class=\"headerlink\" title=\"Swiftバージョン確認\"></a>Swiftバージョン確認</h2><ul>\n<li><code>swift -version</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ swift -version</span><br><span class=\"line\"></span><br><span class=\"line\">Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)</span><br><span class=\"line\">Target: x86_64-apple-darwin20.3.0</span><br></pre></td></tr></table></figure>\n<h2 id=\"OSバージョン確認\"><a href=\"#OSバージョン確認\" class=\"headerlink\" title=\"OSバージョン確認\"></a>OSバージョン確認</h2><ul>\n<li><code>sw_vers</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sw_vers</span><br><span class=\"line\"></span><br><span class=\"line\">ProductName:    macOS</span><br><span class=\"line\">ProductVersion: 11.2</span><br><span class=\"line\">BuildVersion:   20D64</span><br></pre></td></tr></table></figure>\n<h2 id=\"XCodeバージョン確認\"><a href=\"#XCodeバージョン確認\" class=\"headerlink\" title=\"XCodeバージョン確認\"></a>XCodeバージョン確認</h2><ul>\n<li><code>xcodebuild -version</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ xcodebuild -version</span><br><span class=\"line\"></span><br><span class=\"line\">Xcode 12.4</span><br><span class=\"line\">Build version 12D4e</span><br></pre></td></tr></table></figure>\n<h2 id=\"色々バージョン確認\"><a href=\"#色々バージョン確認\" class=\"headerlink\" title=\"色々バージョン確認\"></a>色々バージョン確認</h2><ul>\n<li><code>system_profiler &gt; ファイル名.txt</code><ul>\n<li>かなり待つ必要がある</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ system_profiler &gt; ver.txt</span><br></pre></td></tr></table></figure>"},{"title":"【Linuxコマンド】よく使うlsコマンドオプション","date":"2021-02-28T02:22:41.000Z","_content":"## 目次\n1. 隠しファイル`.ファイル`まで表示させる\n2. ファイル詳細を表示させる\n3. １列１ファイルで表示させる\n4. カンマ区切りで表示させる \n\n## 普通に`ls`を使った場合\n```\n% ls\nMemo_App           Memo_App.xcodeproj README.md\n```\n\n## 1. 隠しファイル`.ファイル`まで表示させる\nオプション`-a`をつける\n```\nls -a\n```\n\n### 実行例\n```\n%ls -a\n.                  .DS_Store          .gitignore         Memo_App.xcodeproj\n..                 .git               Memo_App           README.md\n```\n## 2. ファイル詳細を表示させる\nlsコマンドのオプションに`-l`をつける\n\n```\nls -l\n```\n\n### 実行例\n```\n% ls -l\ntotal 8\ndrwxr-xr-x  12 daiki  staff  384  2 28 01:39 Memo_App\ndrwxr-xr-x@  5 daiki  staff  160  2 28 02:03 Memo_App.xcodeproj\n-rw-r--r--   1 daiki  staff   10  2 27 22:39 README.md\n```\n\n## 3. １列１ファイルで表示させる\nlsコマンドのオプションに`-1`をつける\n\n```\nls -1\n```\n\n### 実行例\n```\n% ls -1\nMemo_App\nMemo_App.xcodeproj\nREADME.md\n```\n\n## 4. カンマ区切りで表示させる  \nlsコマンドのオプションに`-m`をつける\n```\nls -m\n```\n\n### 実行例\n```\n% ls -m\nMemo_App, Memo_App.xcodeproj, README.md\n```\n","source":"_posts/【Linuxコマンド】よく使うlsコマンドオプション.md","raw":"---\ntitle: 【Linuxコマンド】よく使うlsコマンドオプション\ndate: 2021-02-28 11:22:41\ntags:\n- Linux\n- Linuxコマンド\n---\n## 目次\n1. 隠しファイル`.ファイル`まで表示させる\n2. ファイル詳細を表示させる\n3. １列１ファイルで表示させる\n4. カンマ区切りで表示させる \n\n## 普通に`ls`を使った場合\n```\n% ls\nMemo_App           Memo_App.xcodeproj README.md\n```\n\n## 1. 隠しファイル`.ファイル`まで表示させる\nオプション`-a`をつける\n```\nls -a\n```\n\n### 実行例\n```\n%ls -a\n.                  .DS_Store          .gitignore         Memo_App.xcodeproj\n..                 .git               Memo_App           README.md\n```\n## 2. ファイル詳細を表示させる\nlsコマンドのオプションに`-l`をつける\n\n```\nls -l\n```\n\n### 実行例\n```\n% ls -l\ntotal 8\ndrwxr-xr-x  12 daiki  staff  384  2 28 01:39 Memo_App\ndrwxr-xr-x@  5 daiki  staff  160  2 28 02:03 Memo_App.xcodeproj\n-rw-r--r--   1 daiki  staff   10  2 27 22:39 README.md\n```\n\n## 3. １列１ファイルで表示させる\nlsコマンドのオプションに`-1`をつける\n\n```\nls -1\n```\n\n### 実行例\n```\n% ls -1\nMemo_App\nMemo_App.xcodeproj\nREADME.md\n```\n\n## 4. カンマ区切りで表示させる  \nlsコマンドのオプションに`-m`をつける\n```\nls -m\n```\n\n### 実行例\n```\n% ls -m\nMemo_App, Memo_App.xcodeproj, README.md\n```\n","slug":"【Linuxコマンド】よく使うlsコマンドオプション","published":1,"updated":"2021-02-28T02:32:32.785Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3b7002vmzb6fn3m729r","content":"<h2><span id=\"目次\">目次</span></h2><ol>\n<li>隠しファイル<code>.ファイル</code>まで表示させる</li>\n<li>ファイル詳細を表示させる</li>\n<li>１列１ファイルで表示させる</li>\n<li>カンマ区切りで表示させる </li>\n</ol>\n<h2><span id=\"普通にlsを使った場合\">普通に<code>ls</code>を使った場合</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% ls</span><br><span class=\"line\">Memo_App           Memo_App.xcodeproj README.md</span><br></pre></td></tr></table></figure>\n<h2><span id=\"1-隠しファイルファイルまで表示させる\">1. 隠しファイル<code>.ファイル</code>まで表示させる</span></h2><p>オプション<code>-a</code>をつける</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -a</span><br></pre></td></tr></table></figure>\n<h3><span id=\"実行例\">実行例</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%ls -a</span><br><span class=\"line\">.                  .DS_Store          .gitignore         Memo_App.xcodeproj</span><br><span class=\"line\">..                 .git               Memo_App           README.md</span><br></pre></td></tr></table></figure>\n<h2><span id=\"2-ファイル詳細を表示させる\">2. ファイル詳細を表示させる</span></h2><p>lsコマンドのオプションに<code>-l</code>をつける</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l</span><br></pre></td></tr></table></figure>\n<h3><span id=\"実行例\">実行例</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% ls -l</span><br><span class=\"line\">total 8</span><br><span class=\"line\">drwxr-xr-x  12 daiki  staff  384  2 28 01:39 Memo_App</span><br><span class=\"line\">drwxr-xr-x@  5 daiki  staff  160  2 28 02:03 Memo_App.xcodeproj</span><br><span class=\"line\">-rw-r--r--   1 daiki  staff   10  2 27 22:39 README.md</span><br></pre></td></tr></table></figure>\n<h2><span id=\"3-1列1ファイルで表示させる\">3. １列１ファイルで表示させる</span></h2><p>lsコマンドのオプションに<code>-1</code>をつける</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -1</span><br></pre></td></tr></table></figure>\n<h3><span id=\"実行例\">実行例</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% ls -1</span><br><span class=\"line\">Memo_App</span><br><span class=\"line\">Memo_App.xcodeproj</span><br><span class=\"line\">README.md</span><br></pre></td></tr></table></figure>\n<h2><span id=\"4-カンマ区切りで表示させる\">4. カンマ区切りで表示させる</span></h2><p>lsコマンドのオプションに<code>-m</code>をつける</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -m</span><br></pre></td></tr></table></figure>\n<h3><span id=\"実行例\">実行例</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% ls -m</span><br><span class=\"line\">Memo_App, Memo_App.xcodeproj, README.md</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><ol>\n<li>隠しファイル<code>.ファイル</code>まで表示させる</li>\n<li>ファイル詳細を表示させる</li>\n<li>１列１ファイルで表示させる</li>\n<li>カンマ区切りで表示させる </li>\n</ol>\n<h2 id=\"普通にlsを使った場合\"><a href=\"#普通にlsを使った場合\" class=\"headerlink\" title=\"普通にlsを使った場合\"></a>普通に<code>ls</code>を使った場合</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% ls</span><br><span class=\"line\">Memo_App           Memo_App.xcodeproj README.md</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-隠しファイル-ファイルまで表示させる\"><a href=\"#1-隠しファイル-ファイルまで表示させる\" class=\"headerlink\" title=\"1. 隠しファイル.ファイルまで表示させる\"></a>1. 隠しファイル<code>.ファイル</code>まで表示させる</h2><p>オプション<code>-a</code>をつける</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -a</span><br></pre></td></tr></table></figure>\n<h3 id=\"実行例\"><a href=\"#実行例\" class=\"headerlink\" title=\"実行例\"></a>実行例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%ls -a</span><br><span class=\"line\">.                  .DS_Store          .gitignore         Memo_App.xcodeproj</span><br><span class=\"line\">..                 .git               Memo_App           README.md</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-ファイル詳細を表示させる\"><a href=\"#2-ファイル詳細を表示させる\" class=\"headerlink\" title=\"2. ファイル詳細を表示させる\"></a>2. ファイル詳細を表示させる</h2><p>lsコマンドのオプションに<code>-l</code>をつける</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l</span><br></pre></td></tr></table></figure>\n<h3 id=\"実行例-1\"><a href=\"#実行例-1\" class=\"headerlink\" title=\"実行例\"></a>実行例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% ls -l</span><br><span class=\"line\">total 8</span><br><span class=\"line\">drwxr-xr-x  12 daiki  staff  384  2 28 01:39 Memo_App</span><br><span class=\"line\">drwxr-xr-x@  5 daiki  staff  160  2 28 02:03 Memo_App.xcodeproj</span><br><span class=\"line\">-rw-r--r--   1 daiki  staff   10  2 27 22:39 README.md</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-１列１ファイルで表示させる\"><a href=\"#3-１列１ファイルで表示させる\" class=\"headerlink\" title=\"3. １列１ファイルで表示させる\"></a>3. １列１ファイルで表示させる</h2><p>lsコマンドのオプションに<code>-1</code>をつける</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -1</span><br></pre></td></tr></table></figure>\n<h3 id=\"実行例-2\"><a href=\"#実行例-2\" class=\"headerlink\" title=\"実行例\"></a>実行例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% ls -1</span><br><span class=\"line\">Memo_App</span><br><span class=\"line\">Memo_App.xcodeproj</span><br><span class=\"line\">README.md</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-カンマ区切りで表示させる\"><a href=\"#4-カンマ区切りで表示させる\" class=\"headerlink\" title=\"4. カンマ区切りで表示させる\"></a>4. カンマ区切りで表示させる</h2><p>lsコマンドのオプションに<code>-m</code>をつける</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -m</span><br></pre></td></tr></table></figure>\n<h3 id=\"実行例-3\"><a href=\"#実行例-3\" class=\"headerlink\" title=\"実行例\"></a>実行例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% ls -m</span><br><span class=\"line\">Memo_App, Memo_App.xcodeproj, README.md</span><br></pre></td></tr></table></figure>"},{"title":"【Notion】文字サイズ変更ショートカット","date":"2021-01-25T15:51:33.000Z","_content":"\n# 文字サイズ拡大、縮小方法\n\n## Windows\n\n拡大 : Ctrl  +\n\n縮小 : Ctrl  -\n\n## Mac\n\n拡大 : Cmd ^\n\n縮小 : Cmd -\n","source":"_posts/【Notion】文字サイズ変更ショートカット.md","raw":"---\ntitle: 【Notion】文字サイズ変更ショートカット\ndate: 2021-01-26 00:51:33\ntags:\n---\n\n# 文字サイズ拡大、縮小方法\n\n## Windows\n\n拡大 : Ctrl  +\n\n縮小 : Ctrl  -\n\n## Mac\n\n拡大 : Cmd ^\n\n縮小 : Cmd -\n","slug":"【Notion】文字サイズ変更ショートカット","published":1,"updated":"2021-01-25T15:56:07.953Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3bg002xmzb64ijjek07","content":"<h1><span id=\"文字サイズ拡大-縮小方法\">文字サイズ拡大、縮小方法</span></h1><h2><span id=\"windows\">Windows</span></h2><p>拡大 : Ctrl  +</p>\n<p>縮小 : Ctrl  -</p>\n<h2><span id=\"mac\">Mac</span></h2><p>拡大 : Cmd ^</p>\n<p>縮小 : Cmd -</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"文字サイズ拡大、縮小方法\"><a href=\"#文字サイズ拡大、縮小方法\" class=\"headerlink\" title=\"文字サイズ拡大、縮小方法\"></a>文字サイズ拡大、縮小方法</h1><h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><p>拡大 : Ctrl  +</p>\n<p>縮小 : Ctrl  -</p>\n<h2 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h2><p>拡大 : Cmd ^</p>\n<p>縮小 : Cmd -</p>\n"},{"title":"【Swift】Array内の要素を指定して消去する","date":"2021-03-01T14:16:50.000Z","_content":"## もくじ\n1. removeAllを使用する\n\t- 短くかける\n2. for文を使用する\n\t- ちょっと冗長\n3. その他の参考\n\n## 注意\nこの方法の場合、比較する要素に一致するデータは`全て配列から消去`されます\n\n## 1.removeAllを使用する\n`removeAll(where:)メソッド`を使用し、要素を比較して一致している値全てを消去する\n\n```swift\n//\t配列定義\nvar testArray :Array<String> = Array<String>()\n\n//\t要素追加\ntestArray.append(\"test\")\ntestArray.append(\"kemono\")\n\n//\ttestと一致する要素を全て消去\ntestArray.removeAll(where: {$0 == \"test\"})\n```\n\n## 2.for文を使用する\n`for文`を使用して配列内の要素を列挙して、要素を比較した結果一致している配列内要素を全て消去する\n\n```swift\n//\t配列定義\nvar testArray :Array<String> = Array<String>()\n\n//\t要素追加\ntestArray.append(\"test\")\ntestArray.append(\"test\")\ntestArray.append(\"kemono\")\n\n//\t要素を操作するのでコピーを作成して、それをfor文で列挙する\nlet copyArray = testArray\n\n//\t一致する要素を消去\nfor i in 0...copyArray.count - 1{\n    if(copyArray[i] == \"test\"){\n        testArray.remove(at: i)\n    }\n}\n```\n\n## 3.その他の参考\n- https://qiita.com/fuziki/items/e8b1bb5b2dc8c8f43041\n","source":"_posts/【Swift】Array内の要素を指定して消去する.md","raw":"---\ntitle: 【Swift】Array内の要素を指定して消去する\ndate: 2021-03-01 23:16:50\ntags:\n- Swift\n---\n## もくじ\n1. removeAllを使用する\n\t- 短くかける\n2. for文を使用する\n\t- ちょっと冗長\n3. その他の参考\n\n## 注意\nこの方法の場合、比較する要素に一致するデータは`全て配列から消去`されます\n\n## 1.removeAllを使用する\n`removeAll(where:)メソッド`を使用し、要素を比較して一致している値全てを消去する\n\n```swift\n//\t配列定義\nvar testArray :Array<String> = Array<String>()\n\n//\t要素追加\ntestArray.append(\"test\")\ntestArray.append(\"kemono\")\n\n//\ttestと一致する要素を全て消去\ntestArray.removeAll(where: {$0 == \"test\"})\n```\n\n## 2.for文を使用する\n`for文`を使用して配列内の要素を列挙して、要素を比較した結果一致している配列内要素を全て消去する\n\n```swift\n//\t配列定義\nvar testArray :Array<String> = Array<String>()\n\n//\t要素追加\ntestArray.append(\"test\")\ntestArray.append(\"test\")\ntestArray.append(\"kemono\")\n\n//\t要素を操作するのでコピーを作成して、それをfor文で列挙する\nlet copyArray = testArray\n\n//\t一致する要素を消去\nfor i in 0...copyArray.count - 1{\n    if(copyArray[i] == \"test\"){\n        testArray.remove(at: i)\n    }\n}\n```\n\n## 3.その他の参考\n- https://qiita.com/fuziki/items/e8b1bb5b2dc8c8f43041\n","slug":"【Swift】Array内の要素を指定して消去する","published":1,"updated":"2021-03-01T14:18:19.121Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3bi002zmzb67m0z8q1n","content":"<h2><span id=\"もくじ\">もくじ</span></h2><ol>\n<li>removeAllを使用する<ul>\n<li>短くかける</li>\n</ul>\n</li>\n<li>for文を使用する<ul>\n<li>ちょっと冗長</li>\n</ul>\n</li>\n<li>その他の参考</li>\n</ol>\n<h2><span id=\"注意\">注意</span></h2><p>この方法の場合、比較する要素に一致するデータは<code>全て配列から消去</code>されます</p>\n<h2><span id=\"1removeallを使用する\">1.removeAllを使用する</span></h2><p><code>removeAll(where:)メソッド</code>を使用し、要素を比較して一致している値全てを消去する</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//\t配列定義</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> testArray :<span class=\"type\">Array</span>&lt;<span class=\"type\">String</span>&gt; <span class=\"operator\">=</span> <span class=\"type\">Array</span>&lt;<span class=\"type\">String</span>&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t要素追加</span></span><br><span class=\"line\">testArray.append(<span class=\"string\">&quot;test&quot;</span>)</span><br><span class=\"line\">testArray.append(<span class=\"string\">&quot;kemono&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\ttestと一致する要素を全て消去</span></span><br><span class=\"line\">testArray.removeAll(<span class=\"keyword\">where</span>: &#123;<span class=\"variable\">$0</span> <span class=\"operator\">==</span> <span class=\"string\">&quot;test&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>\n<h2><span id=\"2for文を使用する\">2.for文を使用する</span></h2><p><code>for文</code>を使用して配列内の要素を列挙して、要素を比較した結果一致している配列内要素を全て消去する</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//\t配列定義</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> testArray :<span class=\"type\">Array</span>&lt;<span class=\"type\">String</span>&gt; <span class=\"operator\">=</span> <span class=\"type\">Array</span>&lt;<span class=\"type\">String</span>&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t要素追加</span></span><br><span class=\"line\">testArray.append(<span class=\"string\">&quot;test&quot;</span>)</span><br><span class=\"line\">testArray.append(<span class=\"string\">&quot;test&quot;</span>)</span><br><span class=\"line\">testArray.append(<span class=\"string\">&quot;kemono&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t要素を操作するのでコピーを作成して、それをfor文で列挙する</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> copyArray <span class=\"operator\">=</span> testArray</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t一致する要素を消去</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>copyArray.count <span class=\"operator\">-</span> <span class=\"number\">1</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(copyArray[i] <span class=\"operator\">==</span> <span class=\"string\">&quot;test&quot;</span>)&#123;</span><br><span class=\"line\">        testArray.remove(at: i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"3その他の参考\">3.その他の参考</span></h2><ul>\n<li><a href=\"https://qiita.com/fuziki/items/e8b1bb5b2dc8c8f43041\">https://qiita.com/fuziki/items/e8b1bb5b2dc8c8f43041</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"もくじ\"><a href=\"#もくじ\" class=\"headerlink\" title=\"もくじ\"></a>もくじ</h2><ol>\n<li>removeAllを使用する<ul>\n<li>短くかける</li>\n</ul>\n</li>\n<li>for文を使用する<ul>\n<li>ちょっと冗長</li>\n</ul>\n</li>\n<li>その他の参考</li>\n</ol>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>この方法の場合、比較する要素に一致するデータは<code>全て配列から消去</code>されます</p>\n<h2 id=\"1-removeAllを使用する\"><a href=\"#1-removeAllを使用する\" class=\"headerlink\" title=\"1.removeAllを使用する\"></a>1.removeAllを使用する</h2><p><code>removeAll(where:)メソッド</code>を使用し、要素を比較して一致している値全てを消去する</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//\t配列定義</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> testArray :<span class=\"type\">Array</span>&lt;<span class=\"type\">String</span>&gt; <span class=\"operator\">=</span> <span class=\"type\">Array</span>&lt;<span class=\"type\">String</span>&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t要素追加</span></span><br><span class=\"line\">testArray.append(<span class=\"string\">&quot;test&quot;</span>)</span><br><span class=\"line\">testArray.append(<span class=\"string\">&quot;kemono&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\ttestと一致する要素を全て消去</span></span><br><span class=\"line\">testArray.removeAll(<span class=\"keyword\">where</span>: &#123;<span class=\"variable\">$0</span> <span class=\"operator\">==</span> <span class=\"string\">&quot;test&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-for文を使用する\"><a href=\"#2-for文を使用する\" class=\"headerlink\" title=\"2.for文を使用する\"></a>2.for文を使用する</h2><p><code>for文</code>を使用して配列内の要素を列挙して、要素を比較した結果一致している配列内要素を全て消去する</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//\t配列定義</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> testArray :<span class=\"type\">Array</span>&lt;<span class=\"type\">String</span>&gt; <span class=\"operator\">=</span> <span class=\"type\">Array</span>&lt;<span class=\"type\">String</span>&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t要素追加</span></span><br><span class=\"line\">testArray.append(<span class=\"string\">&quot;test&quot;</span>)</span><br><span class=\"line\">testArray.append(<span class=\"string\">&quot;test&quot;</span>)</span><br><span class=\"line\">testArray.append(<span class=\"string\">&quot;kemono&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t要素を操作するのでコピーを作成して、それをfor文で列挙する</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> copyArray <span class=\"operator\">=</span> testArray</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t一致する要素を消去</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>copyArray.count <span class=\"operator\">-</span> <span class=\"number\">1</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(copyArray[i] <span class=\"operator\">==</span> <span class=\"string\">&quot;test&quot;</span>)&#123;</span><br><span class=\"line\">        testArray.remove(at: i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-その他の参考\"><a href=\"#3-その他の参考\" class=\"headerlink\" title=\"3.その他の参考\"></a>3.その他の参考</h2><ul>\n<li><a href=\"https://qiita.com/fuziki/items/e8b1bb5b2dc8c8f43041\">https://qiita.com/fuziki/items/e8b1bb5b2dc8c8f43041</a></li>\n</ul>\n"},{"title":"【Shell】出力をそのままクリップボードにコピーする","date":"2021-03-03T17:40:23.000Z","_content":"# 出力をクリップボードにコピーする\n`|(パイプ)`+`pbcopy`\n- `pb`とは`past board`の略\n\n# 使用例\n## カレンとディレクトリのパスをクリップボードにコピーする\n```shell\npwd | pbcopy\n```\n\n## ファイルの内容をクリップボードにコピー\n```shell\ncat ファイル名 | pbcopy\n```\n\n# 追記\n## 2021/3/6 \nzshには、aliasで`pbc`が設定されているらしく、こっちの方が短くかける\n- 動作的には、aliasなので`pbcopy`と同じ\n```shell-session\ncat ファイル名 | pbc\n```\n","source":"_posts/【Shell】出力をそのままクリップボードにコピーする.md","raw":"---\ntitle: 【Shell】出力をそのままクリップボードにコピーする\ndate: 2021-03-04 02:40:23\ntags:\n- Shell\n---\n# 出力をクリップボードにコピーする\n`|(パイプ)`+`pbcopy`\n- `pb`とは`past board`の略\n\n# 使用例\n## カレンとディレクトリのパスをクリップボードにコピーする\n```shell\npwd | pbcopy\n```\n\n## ファイルの内容をクリップボードにコピー\n```shell\ncat ファイル名 | pbcopy\n```\n\n# 追記\n## 2021/3/6 \nzshには、aliasで`pbc`が設定されているらしく、こっちの方が短くかける\n- 動作的には、aliasなので`pbcopy`と同じ\n```shell-session\ncat ファイル名 | pbc\n```\n","slug":"【Shell】出力をそのままクリップボードにコピーする","published":1,"updated":"2021-03-05T18:04:20.369Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3bj0031mzb65q0vd30a","content":"<h1><span id=\"出力をクリップボードにコピーする\">出力をクリップボードにコピーする</span></h1><p><code>|(パイプ)</code>+<code>pbcopy</code></p>\n<ul>\n<li><code>pb</code>とは<code>past board</code>の略</li>\n</ul>\n<h1><span id=\"使用例\">使用例</span></h1><h2><span id=\"カレンとディレクトリのパスをクリップボードにコピーする\">カレンとディレクトリのパスをクリップボードにコピーする</span></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pwd | pbcopy</span><br></pre></td></tr></table></figure>\n<h2><span id=\"ファイルの内容をクリップボードにコピー\">ファイルの内容をクリップボードにコピー</span></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ファイル名 | pbcopy</span><br></pre></td></tr></table></figure>\n<h1><span id=\"追記\">追記</span></h1><h2><span id=\"202136\">2021/3/6</span></h2><p>zshには、aliasで<code>pbc</code>が設定されているらしく、こっちの方が短くかける</p>\n<ul>\n<li>動作的には、aliasなので<code>pbcopy</code>と同じ<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ファイル名 | pbc</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"出力をクリップボードにコピーする\"><a href=\"#出力をクリップボードにコピーする\" class=\"headerlink\" title=\"出力をクリップボードにコピーする\"></a>出力をクリップボードにコピーする</h1><p><code>|(パイプ)</code>+<code>pbcopy</code></p>\n<ul>\n<li><code>pb</code>とは<code>past board</code>の略</li>\n</ul>\n<h1 id=\"使用例\"><a href=\"#使用例\" class=\"headerlink\" title=\"使用例\"></a>使用例</h1><h2 id=\"カレンとディレクトリのパスをクリップボードにコピーする\"><a href=\"#カレンとディレクトリのパスをクリップボードにコピーする\" class=\"headerlink\" title=\"カレンとディレクトリのパスをクリップボードにコピーする\"></a>カレンとディレクトリのパスをクリップボードにコピーする</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pwd | pbcopy</span><br></pre></td></tr></table></figure>\n<h2 id=\"ファイルの内容をクリップボードにコピー\"><a href=\"#ファイルの内容をクリップボードにコピー\" class=\"headerlink\" title=\"ファイルの内容をクリップボードにコピー\"></a>ファイルの内容をクリップボードにコピー</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ファイル名 | pbcopy</span><br></pre></td></tr></table></figure>\n<h1 id=\"追記\"><a href=\"#追記\" class=\"headerlink\" title=\"追記\"></a>追記</h1><h2 id=\"2021-3-6\"><a href=\"#2021-3-6\" class=\"headerlink\" title=\"2021/3/6\"></a>2021/3/6</h2><p>zshには、aliasで<code>pbc</code>が設定されているらしく、こっちの方が短くかける</p>\n<ul>\n<li>動作的には、aliasなので<code>pbcopy</code>と同じ<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ファイル名 | pbc</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"【Shell】コマンドラインから中身のあるファイルを作成する","date":"2021-03-19T18:29:41.000Z","_content":"## 目次\n<!-- toc -->\n<!-- more -->\n\n## 中身のないファイルの作り方\n- `touch ファイル名`を使用して中身がからのファイルを作成できる\n\n```\n$ touch testfile\n```\n\n## 中身に文字列を挿入してファイルを作る作り方\n- `echo \"挿入したい文字列\" > ファイル名`を使用して中身に文字列を挿入しつつファイルを作成する\n\n```\n$ echo \"この文字列が入っていればOK\" > testfile\n\n$ cat testfile\nこの文字列が入っていればOK\n```\n\n## すでにあるファイルの末尾に文字列を追加する\n- `echo \"挿入したい文字列\" >> ファイル名`を使用してすでにあるファイルの末尾に1行追加する\n\n```\n$ cat testfile \nこの文字列が入っていればOK\n\n$ echo \"追加文字列\" >> testfile\n\n$ cat testfile\nこの文字列が入っていればOK\n追加文字列\n```\n","source":"_posts/【Shell】コマンドラインから中身のあるファイルを作成する.md","raw":"---\ntitle: 【Shell】コマンドラインから中身のあるファイルを作成する\ndate: 2021-03-20 03:29:41\ntags:\n- Git\n---\n## 目次\n<!-- toc -->\n<!-- more -->\n\n## 中身のないファイルの作り方\n- `touch ファイル名`を使用して中身がからのファイルを作成できる\n\n```\n$ touch testfile\n```\n\n## 中身に文字列を挿入してファイルを作る作り方\n- `echo \"挿入したい文字列\" > ファイル名`を使用して中身に文字列を挿入しつつファイルを作成する\n\n```\n$ echo \"この文字列が入っていればOK\" > testfile\n\n$ cat testfile\nこの文字列が入っていればOK\n```\n\n## すでにあるファイルの末尾に文字列を追加する\n- `echo \"挿入したい文字列\" >> ファイル名`を使用してすでにあるファイルの末尾に1行追加する\n\n```\n$ cat testfile \nこの文字列が入っていればOK\n\n$ echo \"追加文字列\" >> testfile\n\n$ cat testfile\nこの文字列が入っていればOK\n追加文字列\n```\n","slug":"【Shell】コマンドラインから中身のあるファイルを作成する","published":1,"updated":"2021-03-25T16:30:48.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3bp0033mzb69u7n8vmr","content":"<h2><span id=\"目次\">目次</span></h2><!-- toc -->\n\n<ul>\n<li><a href=\"#%E4%B8%AD%E8%BA%AB%E3%81%AE%E3%81%AA%E3%81%84%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E4%BD%9C%E3%82%8A%E6%96%B9\">中身のないファイルの作り方</a></li>\n<li><a href=\"#%E4%B8%AD%E8%BA%AB%E3%81%AB%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E6%8C%BF%E5%85%A5%E3%81%97%E3%81%A6%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E3%82%8B%E4%BD%9C%E3%82%8A%E6%96%B9\">中身に文字列を挿入してファイルを作る作り方</a></li>\n<li><a href=\"#%E3%81%99%E3%81%A7%E3%81%AB%E3%81%82%E3%82%8B%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E6%9C%AB%E5%B0%BE%E3%81%AB%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\">すでにあるファイルの末尾に文字列を追加する</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h2><span id=\"中身のないファイルの作り方\">中身のないファイルの作り方</span></h2><ul>\n<li><code>touch ファイル名</code>を使用して中身がからのファイルを作成できる</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ touch testfile</span><br></pre></td></tr></table></figure>\n<h2><span id=\"中身に文字列を挿入してファイルを作る作り方\">中身に文字列を挿入してファイルを作る作り方</span></h2><ul>\n<li><code>echo &quot;挿入したい文字列&quot; &gt; ファイル名</code>を使用して中身に文字列を挿入しつつファイルを作成する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo &quot;この文字列が入っていればOK&quot; &gt; testfile</span><br><span class=\"line\"></span><br><span class=\"line\">$ cat testfile</span><br><span class=\"line\">この文字列が入っていればOK</span><br></pre></td></tr></table></figure>\n<h2><span id=\"すでにあるファイルの末尾に文字列を追加する\">すでにあるファイルの末尾に文字列を追加する</span></h2><ul>\n<li><code>echo &quot;挿入したい文字列&quot; &gt;&gt; ファイル名</code>を使用してすでにあるファイルの末尾に1行追加する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat testfile </span><br><span class=\"line\">この文字列が入っていればOK</span><br><span class=\"line\"></span><br><span class=\"line\">$ echo &quot;追加文字列&quot; &gt;&gt; testfile</span><br><span class=\"line\"></span><br><span class=\"line\">$ cat testfile</span><br><span class=\"line\">この文字列が入っていればOK</span><br><span class=\"line\">追加文字列</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><!-- toc -->\n\n<ul>\n<li><a href=\"#%E4%B8%AD%E8%BA%AB%E3%81%AE%E3%81%AA%E3%81%84%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E4%BD%9C%E3%82%8A%E6%96%B9\">中身のないファイルの作り方</a></li>\n<li><a href=\"#%E4%B8%AD%E8%BA%AB%E3%81%AB%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E6%8C%BF%E5%85%A5%E3%81%97%E3%81%A6%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E3%82%8B%E4%BD%9C%E3%82%8A%E6%96%B9\">中身に文字列を挿入してファイルを作る作り方</a></li>\n<li><a href=\"#%E3%81%99%E3%81%A7%E3%81%AB%E3%81%82%E3%82%8B%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E6%9C%AB%E5%B0%BE%E3%81%AB%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\">すでにあるファイルの末尾に文字列を追加する</a></li>\n</ul>\n<!-- tocstop -->","more":"<h2 id=\"中身のないファイルの作り方\"><a href=\"#中身のないファイルの作り方\" class=\"headerlink\" title=\"中身のないファイルの作り方\"></a>中身のないファイルの作り方</h2><ul>\n<li><code>touch ファイル名</code>を使用して中身がからのファイルを作成できる</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ touch testfile</span><br></pre></td></tr></table></figure>\n<h2 id=\"中身に文字列を挿入してファイルを作る作り方\"><a href=\"#中身に文字列を挿入してファイルを作る作り方\" class=\"headerlink\" title=\"中身に文字列を挿入してファイルを作る作り方\"></a>中身に文字列を挿入してファイルを作る作り方</h2><ul>\n<li><code>echo &quot;挿入したい文字列&quot; &gt; ファイル名</code>を使用して中身に文字列を挿入しつつファイルを作成する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo &quot;この文字列が入っていればOK&quot; &gt; testfile</span><br><span class=\"line\"></span><br><span class=\"line\">$ cat testfile</span><br><span class=\"line\">この文字列が入っていればOK</span><br></pre></td></tr></table></figure>\n<h2 id=\"すでにあるファイルの末尾に文字列を追加する\"><a href=\"#すでにあるファイルの末尾に文字列を追加する\" class=\"headerlink\" title=\"すでにあるファイルの末尾に文字列を追加する\"></a>すでにあるファイルの末尾に文字列を追加する</h2><ul>\n<li><code>echo &quot;挿入したい文字列&quot; &gt;&gt; ファイル名</code>を使用してすでにあるファイルの末尾に1行追加する</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat testfile </span><br><span class=\"line\">この文字列が入っていればOK</span><br><span class=\"line\"></span><br><span class=\"line\">$ echo &quot;追加文字列&quot; &gt;&gt; testfile</span><br><span class=\"line\"></span><br><span class=\"line\">$ cat testfile</span><br><span class=\"line\">この文字列が入っていればOK</span><br><span class=\"line\">追加文字列</span><br></pre></td></tr></table></figure>"},{"title":"【Ubuntu】キーボードの初期設定","date":"2021-03-11T09:55:00.000Z","_content":"## Ubuntu Serverで使用するキーボードレイアウトを日本語配列に変更する\n1. `sudo dpkg-reconfigure keyboard-configuration`を入力\n\t```shell-session\n\t$ sudo dpkg-reconfigure keyboard-configuration\n\t```\n\n- dpkg-reconfigure : 指定した`Debian`パッケージが`debconf`を採用している場合に、パッケージの再設定をすることができるコマンド\n\t- `debconf`に対応しているリストは`ls /var/lib/dpkg/info/*.config`でみることができる\n- keyboard-configuration : キーボードのレイアウト設定ファイル\n\n\n### ここからは矢印キーとEnterキーで操作する(GUI風になる)\n2. Generic 105-key (Intl)PCを選択\n![2](/2021/03/11/【Ubuntu】キーボードの初期設定/2.png \"2\")\n\n3. Japaneseを選択\n![3](/2021/03/11/【Ubuntu】キーボードの初期設定/2.png \"3\")\n\n4. Japaneseを選択\n![4](/2021/03/11/【Ubuntu】キーボードの初期設定/2.png \"4\")\n\n5. `/etc/default/keyboard`の設定を書き換えている場合表示される\n- キーボードオプションを維持する場合は`Yes`を選択、初期化していい場合は`No`を選択\n![5](/2021/03/11/【Ubuntu】キーボードの初期設定/5.png \"5\")\n\n6. 「The default for the keyboard layout」を選択\n![6](/2021/03/11/【Ubuntu】キーボードの初期設定/6.png \"6\")\n\n7. 「No compose key」を選択するとコンソール画面に戻る\n![7](/2021/03/11/【Ubuntu】キーボードの初期設定/7.png \"7\")\n\n8. コンソール画面が表示され必要んな情報を生成してくれるので少し待つ(ネットワークが必要?)\n\t```shell-session\n\tYour console font configuration will be updated the next time your system\n\tboots. If you want to update it now, run 'setupcon' from a virtual console.\n\tupdate-initramfs: deferring update (trigger activated)\n\tProcessing triggers for initramfs-tools (0.137ubuntu12) ...\n\tupdate-initramfs: Generating /boot/initrd.img-5.8.0-1006-raspi\n\t....\n\t\n\t```\n9. 入力待機画面に戻れば成功\n\n## 「Caps Lock」を「Ctrl」に変更する\n`/etc/default/keyboard`の`XKBOPTIONS`に以下を書き加える\n- デフォルト\n```shell-session\nXKBOPTIONS=\"\"\n```\n\n- 書き換え後\n```shell-session\nXKBOPTIONS=\"ctrl:nocaps\"\n```\n","source":"_posts/【Ubuntu】キーボードの初期設定.md","raw":"---\ntitle: 【Ubuntu】キーボードの初期設定\ndate: 2021-03-11 18:55:00\ntags:\n- Linux\n- Ubuntu\n---\n## Ubuntu Serverで使用するキーボードレイアウトを日本語配列に変更する\n1. `sudo dpkg-reconfigure keyboard-configuration`を入力\n\t```shell-session\n\t$ sudo dpkg-reconfigure keyboard-configuration\n\t```\n\n- dpkg-reconfigure : 指定した`Debian`パッケージが`debconf`を採用している場合に、パッケージの再設定をすることができるコマンド\n\t- `debconf`に対応しているリストは`ls /var/lib/dpkg/info/*.config`でみることができる\n- keyboard-configuration : キーボードのレイアウト設定ファイル\n\n\n### ここからは矢印キーとEnterキーで操作する(GUI風になる)\n2. Generic 105-key (Intl)PCを選択\n![2](/2021/03/11/【Ubuntu】キーボードの初期設定/2.png \"2\")\n\n3. Japaneseを選択\n![3](/2021/03/11/【Ubuntu】キーボードの初期設定/2.png \"3\")\n\n4. Japaneseを選択\n![4](/2021/03/11/【Ubuntu】キーボードの初期設定/2.png \"4\")\n\n5. `/etc/default/keyboard`の設定を書き換えている場合表示される\n- キーボードオプションを維持する場合は`Yes`を選択、初期化していい場合は`No`を選択\n![5](/2021/03/11/【Ubuntu】キーボードの初期設定/5.png \"5\")\n\n6. 「The default for the keyboard layout」を選択\n![6](/2021/03/11/【Ubuntu】キーボードの初期設定/6.png \"6\")\n\n7. 「No compose key」を選択するとコンソール画面に戻る\n![7](/2021/03/11/【Ubuntu】キーボードの初期設定/7.png \"7\")\n\n8. コンソール画面が表示され必要んな情報を生成してくれるので少し待つ(ネットワークが必要?)\n\t```shell-session\n\tYour console font configuration will be updated the next time your system\n\tboots. If you want to update it now, run 'setupcon' from a virtual console.\n\tupdate-initramfs: deferring update (trigger activated)\n\tProcessing triggers for initramfs-tools (0.137ubuntu12) ...\n\tupdate-initramfs: Generating /boot/initrd.img-5.8.0-1006-raspi\n\t....\n\t\n\t```\n9. 入力待機画面に戻れば成功\n\n## 「Caps Lock」を「Ctrl」に変更する\n`/etc/default/keyboard`の`XKBOPTIONS`に以下を書き加える\n- デフォルト\n```shell-session\nXKBOPTIONS=\"\"\n```\n\n- 書き換え後\n```shell-session\nXKBOPTIONS=\"ctrl:nocaps\"\n```\n","slug":"【Ubuntu】キーボードの初期設定","published":1,"updated":"2021-03-12T19:00:46.798Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3bu0036mzb6g96laz3z","content":"<h2><span id=\"ubuntu-serverで使用するキーボードレイアウトを日本語配列に変更する\">Ubuntu Serverで使用するキーボードレイアウトを日本語配列に変更する</span></h2><ol>\n<li><code>sudo dpkg-reconfigure keyboard-configuration</code>を入力 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo dpkg-reconfigure keyboard-configuration</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>dpkg-reconfigure : 指定した<code>Debian</code>パッケージが<code>debconf</code>を採用している場合に、パッケージの再設定をすることができるコマンド<ul>\n<li><code>debconf</code>に対応しているリストは<code>ls /var/lib/dpkg/info/*.config</code>でみることができる</li>\n</ul>\n</li>\n<li>keyboard-configuration : キーボードのレイアウト設定ファイル</li>\n</ul>\n<h3><span id=\"ここからは矢印キーとenterキーで操作するgui風になる\">ここからは矢印キーとEnterキーで操作する(GUI風になる)</span></h3><ol start=\"2\">\n<li><p>Generic 105-key (Intl)PCを選択<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/2.png\" alt=\"2\" title=\"2\"></p>\n</li>\n<li><p>Japaneseを選択<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/2.png\" alt=\"3\" title=\"3\"></p>\n</li>\n<li><p>Japaneseを選択<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/2.png\" alt=\"4\" title=\"4\"></p>\n</li>\n<li><p><code>/etc/default/keyboard</code>の設定を書き換えている場合表示される</p>\n</li>\n</ol>\n<ul>\n<li>キーボードオプションを維持する場合は<code>Yes</code>を選択、初期化していい場合は<code>No</code>を選択<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/5.png\" alt=\"5\" title=\"5\"></li>\n</ul>\n<ol start=\"6\">\n<li><p>「The default for the keyboard layout」を選択<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/6.png\" alt=\"6\" title=\"6\"></p>\n</li>\n<li><p>「No compose key」を選択するとコンソール画面に戻る<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/7.png\" alt=\"7\" title=\"7\"></p>\n</li>\n<li><p>コンソール画面が表示され必要んな情報を生成してくれるので少し待つ(ネットワークが必要?)</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your console font configuration will be updated the next time your system</span><br><span class=\"line\">boots. If you want to update it now, run &#39;setupcon&#39; from a virtual console.</span><br><span class=\"line\">update-initramfs: deferring update (trigger activated)</span><br><span class=\"line\">Processing triggers for initramfs-tools (0.137ubuntu12) ...</span><br><span class=\"line\">update-initramfs: Generating &#x2F;boot&#x2F;initrd.img-5.8.0-1006-raspi</span><br><span class=\"line\">....</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>入力待機画面に戻れば成功</p>\n</li>\n</ol>\n<h2><span id=\"caps-lockをctrlに変更する\">「Caps Lock」を「Ctrl」に変更する</span></h2><p><code>/etc/default/keyboard</code>の<code>XKBOPTIONS</code>に以下を書き加える</p>\n<ul>\n<li>デフォルト<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XKBOPTIONS&#x3D;&quot;&quot;</span><br></pre></td></tr></table></figure></li>\n<li>書き換え後<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XKBOPTIONS&#x3D;&quot;ctrl:nocaps&quot;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Ubuntu-Serverで使用するキーボードレイアウトを日本語配列に変更する\"><a href=\"#Ubuntu-Serverで使用するキーボードレイアウトを日本語配列に変更する\" class=\"headerlink\" title=\"Ubuntu Serverで使用するキーボードレイアウトを日本語配列に変更する\"></a>Ubuntu Serverで使用するキーボードレイアウトを日本語配列に変更する</h2><ol>\n<li><code>sudo dpkg-reconfigure keyboard-configuration</code>を入力 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo dpkg-reconfigure keyboard-configuration</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>dpkg-reconfigure : 指定した<code>Debian</code>パッケージが<code>debconf</code>を採用している場合に、パッケージの再設定をすることができるコマンド<ul>\n<li><code>debconf</code>に対応しているリストは<code>ls /var/lib/dpkg/info/*.config</code>でみることができる</li>\n</ul>\n</li>\n<li>keyboard-configuration : キーボードのレイアウト設定ファイル</li>\n</ul>\n<h3 id=\"ここからは矢印キーとEnterキーで操作する-GUI風になる\"><a href=\"#ここからは矢印キーとEnterキーで操作する-GUI風になる\" class=\"headerlink\" title=\"ここからは矢印キーとEnterキーで操作する(GUI風になる)\"></a>ここからは矢印キーとEnterキーで操作する(GUI風になる)</h3><ol start=\"2\">\n<li><p>Generic 105-key (Intl)PCを選択<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/2.png\" alt=\"2\" title=\"2\"></p>\n</li>\n<li><p>Japaneseを選択<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/2.png\" alt=\"3\" title=\"3\"></p>\n</li>\n<li><p>Japaneseを選択<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/2.png\" alt=\"4\" title=\"4\"></p>\n</li>\n<li><p><code>/etc/default/keyboard</code>の設定を書き換えている場合表示される</p>\n</li>\n</ol>\n<ul>\n<li>キーボードオプションを維持する場合は<code>Yes</code>を選択、初期化していい場合は<code>No</code>を選択<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/5.png\" alt=\"5\" title=\"5\"></li>\n</ul>\n<ol start=\"6\">\n<li><p>「The default for the keyboard layout」を選択<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/6.png\" alt=\"6\" title=\"6\"></p>\n</li>\n<li><p>「No compose key」を選択するとコンソール画面に戻る<br><img src=\"/2021/03/11/%E3%80%90Ubuntu%E3%80%91%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/7.png\" alt=\"7\" title=\"7\"></p>\n</li>\n<li><p>コンソール画面が表示され必要んな情報を生成してくれるので少し待つ(ネットワークが必要?)</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your console font configuration will be updated the next time your system</span><br><span class=\"line\">boots. If you want to update it now, run &#39;setupcon&#39; from a virtual console.</span><br><span class=\"line\">update-initramfs: deferring update (trigger activated)</span><br><span class=\"line\">Processing triggers for initramfs-tools (0.137ubuntu12) ...</span><br><span class=\"line\">update-initramfs: Generating &#x2F;boot&#x2F;initrd.img-5.8.0-1006-raspi</span><br><span class=\"line\">....</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>入力待機画面に戻れば成功</p>\n</li>\n</ol>\n<h2 id=\"「Caps-Lock」を「Ctrl」に変更する\"><a href=\"#「Caps-Lock」を「Ctrl」に変更する\" class=\"headerlink\" title=\"「Caps Lock」を「Ctrl」に変更する\"></a>「Caps Lock」を「Ctrl」に変更する</h2><p><code>/etc/default/keyboard</code>の<code>XKBOPTIONS</code>に以下を書き加える</p>\n<ul>\n<li>デフォルト<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XKBOPTIONS&#x3D;&quot;&quot;</span><br></pre></td></tr></table></figure></li>\n<li>書き換え後<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XKBOPTIONS&#x3D;&quot;ctrl:nocaps&quot;</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"【Unity】2018.4以前バージョンから、2019.xへの更新時に「NetworkBehaviour is not found」が出た時の対処法","date":"2021-03-29T12:51:08.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 原因\n2019.1から非推奨になったことが原因で、デフォルトでUnity内のライブラリには存在しなくなってしまいました。\n\n非推奨なので、別の手段でネットワーク機能を実装したほうがいいのですが、とりあえず今はUNetを使いたいという方向けの対処法になります。\n\n[Evolving multiplayer games beyound UNet](https://blogs.unity3d.com/2018/08/02/evolving-multiplayer-games-beyond-unet/?_ga=2.252022665.1606307406.1556038404-136028431.1556038404)\n\n# 手順\n## 1. PackageManagerを開く\nWindow -> Package Manager\n\n![1](/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/1.png \"1\")\n\n## 2. Unity Registryを選択してから、「Multiplayer HLAPI」「XR Legacy InputHelpers」をインストール\nウィンドウ左上のプルダウンを`Unity Registry`に設定\n\n![2](/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/2.png \"2\")\n\n検索窓から、「Multiplayer HLAPI」「XR Legacy InputHelpers」を検索してインストールする\n\n![3](/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/3.png \"3\")\n\n![4](/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/4.png \"4\")\n\n","source":"_posts/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法.md","raw":"---\ntitle: 【Unity】2018.4以前バージョンから、2019.xへの更新時に「NetworkBehaviour is not found」が出た時の対処法\ndate: 2021-03-29 21:51:08\ntags:\n- Unity\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 原因\n2019.1から非推奨になったことが原因で、デフォルトでUnity内のライブラリには存在しなくなってしまいました。\n\n非推奨なので、別の手段でネットワーク機能を実装したほうがいいのですが、とりあえず今はUNetを使いたいという方向けの対処法になります。\n\n[Evolving multiplayer games beyound UNet](https://blogs.unity3d.com/2018/08/02/evolving-multiplayer-games-beyond-unet/?_ga=2.252022665.1606307406.1556038404-136028431.1556038404)\n\n# 手順\n## 1. PackageManagerを開く\nWindow -> Package Manager\n\n![1](/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/1.png \"1\")\n\n## 2. Unity Registryを選択してから、「Multiplayer HLAPI」「XR Legacy InputHelpers」をインストール\nウィンドウ左上のプルダウンを`Unity Registry`に設定\n\n![2](/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/2.png \"2\")\n\n検索窓から、「Multiplayer HLAPI」「XR Legacy InputHelpers」を検索してインストールする\n\n![3](/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/3.png \"3\")\n\n![4](/2021/03/29/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/4.png \"4\")\n\n","slug":"【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法","published":1,"updated":"2021-03-30T13:28:56.087Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3bw0038mzb6hczl6wso","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E5%8E%9F%E5%9B%A0\">原因</a></li>\n<li><a href=\"#%E6%89%8B%E9%A0%86\">手順</a><ul>\n<li><a href=\"#1-packagemanager%E3%82%92%E9%96%8B%E3%81%8F\">1. PackageManagerを開く</a></li>\n<li><a href=\"#2-unity-registry%E3%82%92%E9%81%B8%E6%8A%9E%E3%81%97%E3%81%A6%E3%81%8B%E3%82%89-multiplayer-hlapixr-legacy-inputhelpers%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">2. Unity Registryを選択してから、「Multiplayer HLAPI」「XR Legacy InputHelpers」をインストール</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"原因\">原因</span></h1><p>2019.1から非推奨になったことが原因で、デフォルトでUnity内のライブラリには存在しなくなってしまいました。</p>\n<p>非推奨なので、別の手段でネットワーク機能を実装したほうがいいのですが、とりあえず今はUNetを使いたいという方向けの対処法になります。</p>\n<p><a href=\"https://blogs.unity3d.com/2018/08/02/evolving-multiplayer-games-beyond-unet/?_ga=2.252022665.1606307406.1556038404-136028431.1556038404\">Evolving multiplayer games beyound UNet</a></p>\n<h1><span id=\"手順\">手順</span></h1><h2><span id=\"1-packagemanagerを開く\">1. PackageManagerを開く</span></h2><p>Window -&gt; Package Manager</p>\n<p><img src=\"/2021/03/29/%E3%80%90Unity%E3%80%912018-4%E4%BB%A5%E5%89%8D%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8B%E3%82%89%E3%80%812019-x%E3%81%B8%E3%81%AE%E6%9B%B4%E6%96%B0%E6%99%82%E3%81%AB%E3%80%8CNetworkBehaviour-is-not-found%E3%80%8D%E3%81%8C%E5%87%BA%E3%81%9F%E6%99%82%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/1.png\" alt=\"1\" title=\"1\"></p>\n<h2><span id=\"2-unity-registryを選択してから-multiplayer-hlapixr-legacy-inputhelpersをインストール\">2. Unity Registryを選択してから、「Multiplayer HLAPI」「XR Legacy InputHelpers」をインストール</span></h2><p>ウィンドウ左上のプルダウンを<code>Unity Registry</code>に設定</p>\n<p><img src=\"/2021/03/29/%E3%80%90Unity%E3%80%912018-4%E4%BB%A5%E5%89%8D%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8B%E3%82%89%E3%80%812019-x%E3%81%B8%E3%81%AE%E6%9B%B4%E6%96%B0%E6%99%82%E3%81%AB%E3%80%8CNetworkBehaviour-is-not-found%E3%80%8D%E3%81%8C%E5%87%BA%E3%81%9F%E6%99%82%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/2.png\" alt=\"2\" title=\"2\"></p>\n<p>検索窓から、「Multiplayer HLAPI」「XR Legacy InputHelpers」を検索してインストールする</p>\n<p><img src=\"/2021/03/29/%E3%80%90Unity%E3%80%912018-4%E4%BB%A5%E5%89%8D%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8B%E3%82%89%E3%80%812019-x%E3%81%B8%E3%81%AE%E6%9B%B4%E6%96%B0%E6%99%82%E3%81%AB%E3%80%8CNetworkBehaviour-is-not-found%E3%80%8D%E3%81%8C%E5%87%BA%E3%81%9F%E6%99%82%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/3.png\" alt=\"3\" title=\"3\"></p>\n<p><img src=\"/2021/03/29/%E3%80%90Unity%E3%80%912018-4%E4%BB%A5%E5%89%8D%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8B%E3%82%89%E3%80%812019-x%E3%81%B8%E3%81%AE%E6%9B%B4%E6%96%B0%E6%99%82%E3%81%AB%E3%80%8CNetworkBehaviour-is-not-found%E3%80%8D%E3%81%8C%E5%87%BA%E3%81%9F%E6%99%82%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/4.png\" alt=\"4\" title=\"4\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E5%8E%9F%E5%9B%A0\">原因</a></li>\n<li><a href=\"#%E6%89%8B%E9%A0%86\">手順</a><ul>\n<li><a href=\"#1-packagemanager%E3%82%92%E9%96%8B%E3%81%8F\">1. PackageManagerを開く</a></li>\n<li><a href=\"#2-unity-registry%E3%82%92%E9%81%B8%E6%8A%9E%E3%81%97%E3%81%A6%E3%81%8B%E3%82%89-multiplayer-hlapixr-legacy-inputhelpers%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">2. Unity Registryを選択してから、「Multiplayer HLAPI」「XR Legacy InputHelpers」をインストール</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h1><p>2019.1から非推奨になったことが原因で、デフォルトでUnity内のライブラリには存在しなくなってしまいました。</p>\n<p>非推奨なので、別の手段でネットワーク機能を実装したほうがいいのですが、とりあえず今はUNetを使いたいという方向けの対処法になります。</p>\n<p><a href=\"https://blogs.unity3d.com/2018/08/02/evolving-multiplayer-games-beyond-unet/?_ga=2.252022665.1606307406.1556038404-136028431.1556038404\">Evolving multiplayer games beyound UNet</a></p>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"1-PackageManagerを開く\"><a href=\"#1-PackageManagerを開く\" class=\"headerlink\" title=\"1. PackageManagerを開く\"></a>1. PackageManagerを開く</h2><p>Window -&gt; Package Manager</p>\n<p><img src=\"/2021/03/29/%E3%80%90Unity%E3%80%912018-4%E4%BB%A5%E5%89%8D%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8B%E3%82%89%E3%80%812019-x%E3%81%B8%E3%81%AE%E6%9B%B4%E6%96%B0%E6%99%82%E3%81%AB%E3%80%8CNetworkBehaviour-is-not-found%E3%80%8D%E3%81%8C%E5%87%BA%E3%81%9F%E6%99%82%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/1.png\" alt=\"1\" title=\"1\"></p>\n<h2 id=\"2-Unity-Registryを選択してから、「Multiplayer-HLAPI」「XR-Legacy-InputHelpers」をインストール\"><a href=\"#2-Unity-Registryを選択してから、「Multiplayer-HLAPI」「XR-Legacy-InputHelpers」をインストール\" class=\"headerlink\" title=\"2. Unity Registryを選択してから、「Multiplayer HLAPI」「XR Legacy InputHelpers」をインストール\"></a>2. Unity Registryを選択してから、「Multiplayer HLAPI」「XR Legacy InputHelpers」をインストール</h2><p>ウィンドウ左上のプルダウンを<code>Unity Registry</code>に設定</p>\n<p><img src=\"/2021/03/29/%E3%80%90Unity%E3%80%912018-4%E4%BB%A5%E5%89%8D%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8B%E3%82%89%E3%80%812019-x%E3%81%B8%E3%81%AE%E6%9B%B4%E6%96%B0%E6%99%82%E3%81%AB%E3%80%8CNetworkBehaviour-is-not-found%E3%80%8D%E3%81%8C%E5%87%BA%E3%81%9F%E6%99%82%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/2.png\" alt=\"2\" title=\"2\"></p>\n<p>検索窓から、「Multiplayer HLAPI」「XR Legacy InputHelpers」を検索してインストールする</p>\n<p><img src=\"/2021/03/29/%E3%80%90Unity%E3%80%912018-4%E4%BB%A5%E5%89%8D%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8B%E3%82%89%E3%80%812019-x%E3%81%B8%E3%81%AE%E6%9B%B4%E6%96%B0%E6%99%82%E3%81%AB%E3%80%8CNetworkBehaviour-is-not-found%E3%80%8D%E3%81%8C%E5%87%BA%E3%81%9F%E6%99%82%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/3.png\" alt=\"3\" title=\"3\"></p>\n<p><img src=\"/2021/03/29/%E3%80%90Unity%E3%80%912018-4%E4%BB%A5%E5%89%8D%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8B%E3%82%89%E3%80%812019-x%E3%81%B8%E3%81%AE%E6%9B%B4%E6%96%B0%E6%99%82%E3%81%AB%E3%80%8CNetworkBehaviour-is-not-found%E3%80%8D%E3%81%8C%E5%87%BA%E3%81%9F%E6%99%82%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/4.png\" alt=\"4\" title=\"4\"></p>"},{"title":"【Unity】URPを導入する","date":"2021-03-27T12:09:55.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 導入方法\n\n## 1. プロジェクト作成時に選択する\n\n## 注意\n\nUnity2019.3以上のバージョンから使用できます。正確には、2019.2以前にはLightweight Render Pipeline(LWRP)というものが名称が違うだけで存在はしています。細かい仕様が違う可能性があるので、本記事は、Unity2019.3以上の環境のプロジェクト向けになります。\n\n## 手順\n\n新規プロジェクト作成時にUniversal Render Piplineを選択する\n\n![1](/2021/03/27/【Unity】URPを導入する/1.png \"1\")\n\n## 2. 既存のプロジェクトに追加する\n\n### 1. Package Managerを開く\n\nWidnow → Package Managerを選択\n\n![2](/2021/03/27/【Unity】URPを導入する/2.png \"2\")\n\n### 2. RPを選択してInstall\n\n表示されるパッケージの設定をUnity Registryに変更しておく\n\n![3](/2021/03/27/【Unity】URPを導入する/2.png \"3\")\n\n検索窓にRPと入力してUniversal RPを検索する\n\nUniversal RPを選択後、Installをクリックで導入完了\n\n![4](/2021/03/27/【Unity】URPを導入する/4.png \"4\")\n\n### 設定方法\n\n### 1. Pipeline Assetを作成する\n\nCreate → Rendering → Universal Render Pipeline → Pipline Asset(Forward Rendeer)の順で選択して、作成\n\n![5](/2021/03/27/【Unity】URPを導入する/5.png \"5\")\n\n### 2. セットする\n\nEdit → Project Settings...で、Project Setting Windowを開く\n\n![6](/2021/03/27/【Unity】URPを導入する/6.png \"6\")\n\n先ほど作成したPipeline AssetをGraphics内のScriptable Render Pipeline Settingsにセットする\n\n![7](/2021/03/27/【Unity】URPを導入する/7.png \"7\")\n\n## ピンクマテリアルになるときの対処法\n\n既存のプロジェクトに、URPを導入すると、モデルがピンク色になるときがあります。\n\nこれは、新しく導入したレンダリングシステムに既存のレンダリングシステム向けに作ったマテリアルが対応できていないことが原因で起こります。\n\n解決するには、URP用のマテリアルに変換してあげる必要があります。\n\n## 手順\n\nEdit → Render Pipeline → Universal Render Pipeline → Upgrade Project Materials to UniversalRP Materials\n\nの順で選択してあげれば、自動で変換をしてくれます。\n\n![8](/2021/03/27/【Unity】URPを導入する/8.png \"8\")\n","source":"_posts/【Unity】URPを導入する.md","raw":"---\ntitle: 【Unity】URPを導入する\ndate: 2021-03-27 21:09:55\ntags:\n- Unity\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 導入方法\n\n## 1. プロジェクト作成時に選択する\n\n## 注意\n\nUnity2019.3以上のバージョンから使用できます。正確には、2019.2以前にはLightweight Render Pipeline(LWRP)というものが名称が違うだけで存在はしています。細かい仕様が違う可能性があるので、本記事は、Unity2019.3以上の環境のプロジェクト向けになります。\n\n## 手順\n\n新規プロジェクト作成時にUniversal Render Piplineを選択する\n\n![1](/2021/03/27/【Unity】URPを導入する/1.png \"1\")\n\n## 2. 既存のプロジェクトに追加する\n\n### 1. Package Managerを開く\n\nWidnow → Package Managerを選択\n\n![2](/2021/03/27/【Unity】URPを導入する/2.png \"2\")\n\n### 2. RPを選択してInstall\n\n表示されるパッケージの設定をUnity Registryに変更しておく\n\n![3](/2021/03/27/【Unity】URPを導入する/2.png \"3\")\n\n検索窓にRPと入力してUniversal RPを検索する\n\nUniversal RPを選択後、Installをクリックで導入完了\n\n![4](/2021/03/27/【Unity】URPを導入する/4.png \"4\")\n\n### 設定方法\n\n### 1. Pipeline Assetを作成する\n\nCreate → Rendering → Universal Render Pipeline → Pipline Asset(Forward Rendeer)の順で選択して、作成\n\n![5](/2021/03/27/【Unity】URPを導入する/5.png \"5\")\n\n### 2. セットする\n\nEdit → Project Settings...で、Project Setting Windowを開く\n\n![6](/2021/03/27/【Unity】URPを導入する/6.png \"6\")\n\n先ほど作成したPipeline AssetをGraphics内のScriptable Render Pipeline Settingsにセットする\n\n![7](/2021/03/27/【Unity】URPを導入する/7.png \"7\")\n\n## ピンクマテリアルになるときの対処法\n\n既存のプロジェクトに、URPを導入すると、モデルがピンク色になるときがあります。\n\nこれは、新しく導入したレンダリングシステムに既存のレンダリングシステム向けに作ったマテリアルが対応できていないことが原因で起こります。\n\n解決するには、URP用のマテリアルに変換してあげる必要があります。\n\n## 手順\n\nEdit → Render Pipeline → Universal Render Pipeline → Upgrade Project Materials to UniversalRP Materials\n\nの順で選択してあげれば、自動で変換をしてくれます。\n\n![8](/2021/03/27/【Unity】URPを導入する/8.png \"8\")\n","slug":"【Unity】URPを導入する","published":1,"updated":"2021-03-27T12:53:04.249Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3bx003bmzb60zl303ig","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E5%B0%8E%E5%85%A5%E6%96%B9%E6%B3%95\">導入方法</a><ul>\n<li><a href=\"#1-%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90%E6%99%82%E3%81%AB%E9%81%B8%E6%8A%9E%E3%81%99%E3%82%8B\">1. プロジェクト作成時に選択する</a></li>\n<li><a href=\"#%E6%B3%A8%E6%84%8F\">注意</a></li>\n<li><a href=\"#%E6%89%8B%E9%A0%86\">手順</a></li>\n<li><a href=\"#2-%E6%97%A2%E5%AD%98%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\">2. 既存のプロジェクトに追加する</a><ul>\n<li><a href=\"#1-package-manager%E3%82%92%E9%96%8B%E3%81%8F\">1. Package Managerを開く</a></li>\n<li><a href=\"#2-rp%E3%82%92%E9%81%B8%E6%8A%9E%E3%81%97%E3%81%A6install\">2. RPを選択してInstall</a></li>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E6%96%B9%E6%B3%95\">設定方法</a></li>\n<li><a href=\"#1-pipeline-asset%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\">1. Pipeline Assetを作成する</a></li>\n<li><a href=\"#2-%E3%82%BB%E3%83%83%E3%83%88%E3%81%99%E3%82%8B\">2. セットする</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%94%E3%83%B3%E3%82%AF%E3%83%9E%E3%83%86%E3%83%AA%E3%82%A2%E3%83%AB%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95\">ピンクマテリアルになるときの対処法</a></li>\n<li><a href=\"#%E6%89%8B%E9%A0%86-1\">手順</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"導入方法\">導入方法</span></h1><h2><span id=\"1-プロジェクト作成時に選択する\">1. プロジェクト作成時に選択する</span></h2><h2><span id=\"注意\">注意</span></h2><p>Unity2019.3以上のバージョンから使用できます。正確には、2019.2以前にはLightweight Render Pipeline(LWRP)というものが名称が違うだけで存在はしています。細かい仕様が違う可能性があるので、本記事は、Unity2019.3以上の環境のプロジェクト向けになります。</p>\n<h2><span id=\"手順\">手順</span></h2><p>新規プロジェクト作成時にUniversal Render Piplineを選択する</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/1.png\" alt=\"1\" title=\"1\"></p>\n<h2><span id=\"2-既存のプロジェクトに追加する\">2. 既存のプロジェクトに追加する</span></h2><h3><span id=\"1-package-managerを開く\">1. Package Managerを開く</span></h3><p>Widnow → Package Managerを選択</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/2.png\" alt=\"2\" title=\"2\"></p>\n<h3><span id=\"2-rpを選択してinstall\">2. RPを選択してInstall</span></h3><p>表示されるパッケージの設定をUnity Registryに変更しておく</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/2.png\" alt=\"3\" title=\"3\"></p>\n<p>検索窓にRPと入力してUniversal RPを検索する</p>\n<p>Universal RPを選択後、Installをクリックで導入完了</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/4.png\" alt=\"4\" title=\"4\"></p>\n<h3><span id=\"設定方法\">設定方法</span></h3><h3><span id=\"1-pipeline-assetを作成する\">1. Pipeline Assetを作成する</span></h3><p>Create → Rendering → Universal Render Pipeline → Pipline Asset(Forward Rendeer)の順で選択して、作成</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/5.png\" alt=\"5\" title=\"5\"></p>\n<h3><span id=\"2-セットする\">2. セットする</span></h3><p>Edit → Project Settings…で、Project Setting Windowを開く</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/6.png\" alt=\"6\" title=\"6\"></p>\n<p>先ほど作成したPipeline AssetをGraphics内のScriptable Render Pipeline Settingsにセットする</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/7.png\" alt=\"7\" title=\"7\"></p>\n<h2><span id=\"ピンクマテリアルになるときの対処法\">ピンクマテリアルになるときの対処法</span></h2><p>既存のプロジェクトに、URPを導入すると、モデルがピンク色になるときがあります。</p>\n<p>これは、新しく導入したレンダリングシステムに既存のレンダリングシステム向けに作ったマテリアルが対応できていないことが原因で起こります。</p>\n<p>解決するには、URP用のマテリアルに変換してあげる必要があります。</p>\n<h2><span id=\"手順\">手順</span></h2><p>Edit → Render Pipeline → Universal Render Pipeline → Upgrade Project Materials to UniversalRP Materials</p>\n<p>の順で選択してあげれば、自動で変換をしてくれます。</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/8.png\" alt=\"8\" title=\"8\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E5%B0%8E%E5%85%A5%E6%96%B9%E6%B3%95\">導入方法</a><ul>\n<li><a href=\"#1-%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90%E6%99%82%E3%81%AB%E9%81%B8%E6%8A%9E%E3%81%99%E3%82%8B\">1. プロジェクト作成時に選択する</a></li>\n<li><a href=\"#%E6%B3%A8%E6%84%8F\">注意</a></li>\n<li><a href=\"#%E6%89%8B%E9%A0%86\">手順</a></li>\n<li><a href=\"#2-%E6%97%A2%E5%AD%98%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\">2. 既存のプロジェクトに追加する</a><ul>\n<li><a href=\"#1-package-manager%E3%82%92%E9%96%8B%E3%81%8F\">1. Package Managerを開く</a></li>\n<li><a href=\"#2-rp%E3%82%92%E9%81%B8%E6%8A%9E%E3%81%97%E3%81%A6install\">2. RPを選択してInstall</a></li>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E6%96%B9%E6%B3%95\">設定方法</a></li>\n<li><a href=\"#1-pipeline-asset%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\">1. Pipeline Assetを作成する</a></li>\n<li><a href=\"#2-%E3%82%BB%E3%83%83%E3%83%88%E3%81%99%E3%82%8B\">2. セットする</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%94%E3%83%B3%E3%82%AF%E3%83%9E%E3%83%86%E3%83%AA%E3%82%A2%E3%83%AB%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95\">ピンクマテリアルになるときの対処法</a></li>\n<li><a href=\"#%E6%89%8B%E9%A0%86-1\">手順</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"導入方法\"><a href=\"#導入方法\" class=\"headerlink\" title=\"導入方法\"></a>導入方法</h1><h2 id=\"1-プロジェクト作成時に選択する\"><a href=\"#1-プロジェクト作成時に選択する\" class=\"headerlink\" title=\"1. プロジェクト作成時に選択する\"></a>1. プロジェクト作成時に選択する</h2><h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>Unity2019.3以上のバージョンから使用できます。正確には、2019.2以前にはLightweight Render Pipeline(LWRP)というものが名称が違うだけで存在はしています。細かい仕様が違う可能性があるので、本記事は、Unity2019.3以上の環境のプロジェクト向けになります。</p>\n<h2 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h2><p>新規プロジェクト作成時にUniversal Render Piplineを選択する</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/1.png\" alt=\"1\" title=\"1\"></p>\n<h2 id=\"2-既存のプロジェクトに追加する\"><a href=\"#2-既存のプロジェクトに追加する\" class=\"headerlink\" title=\"2. 既存のプロジェクトに追加する\"></a>2. 既存のプロジェクトに追加する</h2><h3 id=\"1-Package-Managerを開く\"><a href=\"#1-Package-Managerを開く\" class=\"headerlink\" title=\"1. Package Managerを開く\"></a>1. Package Managerを開く</h3><p>Widnow → Package Managerを選択</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/2.png\" alt=\"2\" title=\"2\"></p>\n<h3 id=\"2-RPを選択してInstall\"><a href=\"#2-RPを選択してInstall\" class=\"headerlink\" title=\"2. RPを選択してInstall\"></a>2. RPを選択してInstall</h3><p>表示されるパッケージの設定をUnity Registryに変更しておく</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/2.png\" alt=\"3\" title=\"3\"></p>\n<p>検索窓にRPと入力してUniversal RPを検索する</p>\n<p>Universal RPを選択後、Installをクリックで導入完了</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/4.png\" alt=\"4\" title=\"4\"></p>\n<h3 id=\"設定方法\"><a href=\"#設定方法\" class=\"headerlink\" title=\"設定方法\"></a>設定方法</h3><h3 id=\"1-Pipeline-Assetを作成する\"><a href=\"#1-Pipeline-Assetを作成する\" class=\"headerlink\" title=\"1. Pipeline Assetを作成する\"></a>1. Pipeline Assetを作成する</h3><p>Create → Rendering → Universal Render Pipeline → Pipline Asset(Forward Rendeer)の順で選択して、作成</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/5.png\" alt=\"5\" title=\"5\"></p>\n<h3 id=\"2-セットする\"><a href=\"#2-セットする\" class=\"headerlink\" title=\"2. セットする\"></a>2. セットする</h3><p>Edit → Project Settings…で、Project Setting Windowを開く</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/6.png\" alt=\"6\" title=\"6\"></p>\n<p>先ほど作成したPipeline AssetをGraphics内のScriptable Render Pipeline Settingsにセットする</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/7.png\" alt=\"7\" title=\"7\"></p>\n<h2 id=\"ピンクマテリアルになるときの対処法\"><a href=\"#ピンクマテリアルになるときの対処法\" class=\"headerlink\" title=\"ピンクマテリアルになるときの対処法\"></a>ピンクマテリアルになるときの対処法</h2><p>既存のプロジェクトに、URPを導入すると、モデルがピンク色になるときがあります。</p>\n<p>これは、新しく導入したレンダリングシステムに既存のレンダリングシステム向けに作ったマテリアルが対応できていないことが原因で起こります。</p>\n<p>解決するには、URP用のマテリアルに変換してあげる必要があります。</p>\n<h2 id=\"手順-1\"><a href=\"#手順-1\" class=\"headerlink\" title=\"手順\"></a>手順</h2><p>Edit → Render Pipeline → Universal Render Pipeline → Upgrade Project Materials to UniversalRP Materials</p>\n<p>の順で選択してあげれば、自動で変換をしてくれます。</p>\n<p><img src=\"/2021/03/27/%E3%80%90Unity%E3%80%91URP%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/8.png\" alt=\"8\" title=\"8\"></p>"},{"title":"【Unity】ディレクティブを使用しているときに発生するwarning対策","date":"2021-03-28T14:18:17.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# ディレクティブとはなにか\nUnityは`プラットフォーム依存コンパイル`という機能を持っています。これは、Unityで作成したゲームやアプリを複数のプラットフォームで動かしたい場合に、各プラットフォームに依存したコード(ファイルの保存領域、Bluetoothの使用)を１つのスクリプト内で書けるようにする仕組みです。\n\n## 参考リンク\n[Unityドキュメント](https://docs.unity3d.com/ja/2018.4/Manual/PlatformDependentCompilation.html)\n\n# なぜwarningが発生するのか\n原因はプラットフォームに依存(ディレクティブ指定)しているコードは、Unity Editor上のコンパイルでは無視されることにあります。\n\n無視されるということは、宣言した変数をEditor上で実行するときは使用していないと見られるケースが発生します。\n\n## 例\nこの例では、スマホ用OS向けにビルドすることを考えてディレクティブを設定しています。記述上は`Number`を使用してしますが、`UnityEditor`から見ると、`Number`は使用されていない変数になります。\n```c#\n//\tこの変数はUityEditor上では使用していないことになるのでwaringが発生する\nint Number = 9;\n\t\nprivate void test()\n{\n\t//\tここはAndroid用にビルドしたときに初めて有効になる\n#if UNITY_ANDROID\n\tNumber = 100;\n#endif\n\n\t//\tここはiOS用にビルドしたときに初めて有効になる\n#if UNITY_iOS\n\tNumber = 300;\n#endif\n\n...\n}\n```\n\n# 対策方法\n## 1. エディタ用のダミー処理を作る\n上の例はEditor用の処理が書いてありませんでした。何かしらのダミー処理で変数を使うようにすれば`warning`の発生を抑える事ができます。それと同時にテストを書くときのことを考えても、内部処理はダミーでも実装しておいたほうがいいかと思います。\n\n```c#\n\n//\tダミー処理で使っているのwarningは発生しない\nint Number = 9;\n\t\nprivate void test()\n{\n\t//\tここはAndroid用にビルドしたときに初めて有効になる\n#if UNITY_ANDROID\n\tNumber = 100;\n#endif\n\n\t//\tここはiOS用にビルドしたときに初めて有効になる\n#if UNITY_iOS\n\tNumber = 300;\n#endif\n\n\t//\tUnity Editor用のダミー処理\n#if UNITY_EDITOR\n\tNumber = 0;\n#endif\n\n...\n}\n```\n\n## 2. 1つのスクリプト内だけ特定のwarningを発生させない\nプリプロセス命令をファイルの先頭に書くことによってコンパイル時の処理を指定する方法です。\n\n以下のような`warning`表示が表示された場合、これを解決するには`CS0149`というwarningを発生させないプリプロセス命令が必要になります。\n```c#\ntest.cs(59,48): warning CS0149: xxxx\n```\n\n`CS0149`のwarningを発生させないようにするための記述は以下のようになります。\n```c#\n#pragma warning disable 0149\n```\n\n## 3. プロジェクト全体に対して発生させたくないwarningを指定する\nこの方法を取ると、指定したすべての条件に一致するものが表示されなくなってしまうので、設定する場合は慎重に行ってください。\n\n### .rspとは\nMSBuild.exeのコマンドラインスイッチを含むテキストファイル。詳しくは以下リンクを参照。\n\n[MSBuild応答ファイル](https://docs.microsoft.com/ja-jp/visualstudio/msbuild/msbuild-response-files?view=vs-2019)\n\n### 設定手順\n1. `Assetsフォルダ`下に`csc.rsp`というファイルを作成してください。(Assets/csc.rsp)\n\t- UnityEditorでファイルを作成すると見た目上は、`csc.rsp`に見えますが、拡張子が`cs`になってしまうので、エクスプローラーから作成する\n2. `csc.rsp`内に`-nowarn:xxxx`と記述する\n\t- `xxx`の部分は`warning時に表示される数字の部分です。\n\t- 複数指定したい場合は、記述した部分の下に追記してく\n\n### 設定例\n```c#\n//\twarning CS0149: xxxxの場合\n-nowarn:0149\n//\twarning CS0031: yyyyの場合\n-nowarn:0031\n```\n","source":"_posts/【Unity】ディレクティブを使用しているときに発生するwarning対策.md","raw":"---\ntitle: 【Unity】ディレクティブを使用しているときに発生するwarning対策\ndate: 2021-03-28 23:18:17\ntags:\n- Unity\n- Visual Studio\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# ディレクティブとはなにか\nUnityは`プラットフォーム依存コンパイル`という機能を持っています。これは、Unityで作成したゲームやアプリを複数のプラットフォームで動かしたい場合に、各プラットフォームに依存したコード(ファイルの保存領域、Bluetoothの使用)を１つのスクリプト内で書けるようにする仕組みです。\n\n## 参考リンク\n[Unityドキュメント](https://docs.unity3d.com/ja/2018.4/Manual/PlatformDependentCompilation.html)\n\n# なぜwarningが発生するのか\n原因はプラットフォームに依存(ディレクティブ指定)しているコードは、Unity Editor上のコンパイルでは無視されることにあります。\n\n無視されるということは、宣言した変数をEditor上で実行するときは使用していないと見られるケースが発生します。\n\n## 例\nこの例では、スマホ用OS向けにビルドすることを考えてディレクティブを設定しています。記述上は`Number`を使用してしますが、`UnityEditor`から見ると、`Number`は使用されていない変数になります。\n```c#\n//\tこの変数はUityEditor上では使用していないことになるのでwaringが発生する\nint Number = 9;\n\t\nprivate void test()\n{\n\t//\tここはAndroid用にビルドしたときに初めて有効になる\n#if UNITY_ANDROID\n\tNumber = 100;\n#endif\n\n\t//\tここはiOS用にビルドしたときに初めて有効になる\n#if UNITY_iOS\n\tNumber = 300;\n#endif\n\n...\n}\n```\n\n# 対策方法\n## 1. エディタ用のダミー処理を作る\n上の例はEditor用の処理が書いてありませんでした。何かしらのダミー処理で変数を使うようにすれば`warning`の発生を抑える事ができます。それと同時にテストを書くときのことを考えても、内部処理はダミーでも実装しておいたほうがいいかと思います。\n\n```c#\n\n//\tダミー処理で使っているのwarningは発生しない\nint Number = 9;\n\t\nprivate void test()\n{\n\t//\tここはAndroid用にビルドしたときに初めて有効になる\n#if UNITY_ANDROID\n\tNumber = 100;\n#endif\n\n\t//\tここはiOS用にビルドしたときに初めて有効になる\n#if UNITY_iOS\n\tNumber = 300;\n#endif\n\n\t//\tUnity Editor用のダミー処理\n#if UNITY_EDITOR\n\tNumber = 0;\n#endif\n\n...\n}\n```\n\n## 2. 1つのスクリプト内だけ特定のwarningを発生させない\nプリプロセス命令をファイルの先頭に書くことによってコンパイル時の処理を指定する方法です。\n\n以下のような`warning`表示が表示された場合、これを解決するには`CS0149`というwarningを発生させないプリプロセス命令が必要になります。\n```c#\ntest.cs(59,48): warning CS0149: xxxx\n```\n\n`CS0149`のwarningを発生させないようにするための記述は以下のようになります。\n```c#\n#pragma warning disable 0149\n```\n\n## 3. プロジェクト全体に対して発生させたくないwarningを指定する\nこの方法を取ると、指定したすべての条件に一致するものが表示されなくなってしまうので、設定する場合は慎重に行ってください。\n\n### .rspとは\nMSBuild.exeのコマンドラインスイッチを含むテキストファイル。詳しくは以下リンクを参照。\n\n[MSBuild応答ファイル](https://docs.microsoft.com/ja-jp/visualstudio/msbuild/msbuild-response-files?view=vs-2019)\n\n### 設定手順\n1. `Assetsフォルダ`下に`csc.rsp`というファイルを作成してください。(Assets/csc.rsp)\n\t- UnityEditorでファイルを作成すると見た目上は、`csc.rsp`に見えますが、拡張子が`cs`になってしまうので、エクスプローラーから作成する\n2. `csc.rsp`内に`-nowarn:xxxx`と記述する\n\t- `xxx`の部分は`warning時に表示される数字の部分です。\n\t- 複数指定したい場合は、記述した部分の下に追記してく\n\n### 設定例\n```c#\n//\twarning CS0149: xxxxの場合\n-nowarn:0149\n//\twarning CS0031: yyyyの場合\n-nowarn:0031\n```\n","slug":"【Unity】ディレクティブを使用しているときに発生するwarning対策","published":1,"updated":"2021-03-30T12:42:15.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3cb003dmzb68q4k095l","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%81%A8%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\">ディレクティブとはなにか</a><ul>\n<li><a href=\"#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\">参考リンク</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%81%AA%E3%81%9Cwarning%E3%81%8C%E7%99%BA%E7%94%9F%E3%81%99%E3%82%8B%E3%81%AE%E3%81%8B\">なぜwarningが発生するのか</a><ul>\n<li><a href=\"#%E4%BE%8B\">例</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%AF%BE%E7%AD%96%E6%96%B9%E6%B3%95\">対策方法</a><ul>\n<li><a href=\"#1-%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF%E7%94%A8%E3%81%AE%E3%83%80%E3%83%9F%E3%83%BC%E5%87%A6%E7%90%86%E3%82%92%E4%BD%9C%E3%82%8B\">1. エディタ用のダミー処理を作る</a></li>\n<li><a href=\"#2-1%E3%81%A4%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E5%86%85%E3%81%A0%E3%81%91%E7%89%B9%E5%AE%9A%E3%81%AEwarning%E3%82%92%E7%99%BA%E7%94%9F%E3%81%95%E3%81%9B%E3%81%AA%E3%81%84\">2. 1つのスクリプト内だけ特定のwarningを発生させない</a></li>\n<li><a href=\"#3-%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E5%85%A8%E4%BD%93%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6%E7%99%BA%E7%94%9F%E3%81%95%E3%81%9B%E3%81%9F%E3%81%8F%E3%81%AA%E3%81%84warning%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B\">3. プロジェクト全体に対して発生させたくないwarningを指定する</a><ul>\n<li><a href=\"#rsp%E3%81%A8%E3%81%AF\">.rspとは</a></li>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E6%89%8B%E9%A0%86\">設定手順</a></li>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BE%8B\">設定例</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"ディレクティブとはなにか\">ディレクティブとはなにか</span></h1><p>Unityは<code>プラットフォーム依存コンパイル</code>という機能を持っています。これは、Unityで作成したゲームやアプリを複数のプラットフォームで動かしたい場合に、各プラットフォームに依存したコード(ファイルの保存領域、Bluetoothの使用)を１つのスクリプト内で書けるようにする仕組みです。</p>\n<h2><span id=\"参考リンク\">参考リンク</span></h2><p><a href=\"https://docs.unity3d.com/ja/2018.4/Manual/PlatformDependentCompilation.html\">Unityドキュメント</a></p>\n<h1><span id=\"なぜwarningが発生するのか\">なぜwarningが発生するのか</span></h1><p>原因はプラットフォームに依存(ディレクティブ指定)しているコードは、Unity Editor上のコンパイルでは無視されることにあります。</p>\n<p>無視されるということは、宣言した変数をEditor上で実行するときは使用していないと見られるケースが発生します。</p>\n<h2><span id=\"例\">例</span></h2><p>この例では、スマホ用OS向けにビルドすることを考えてディレクティブを設定しています。記述上は<code>Number</code>を使用してしますが、<code>UnityEditor</code>から見ると、<code>Number</code>は使用されていない変数になります。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//\tこの変数はUityEditor上では使用していないことになるのでwaringが発生する</span></span><br><span class=\"line\"><span class=\"built_in\">int</span> Number = <span class=\"number\">9</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//\tここはAndroid用にビルドしたときに初めて有効になる</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> UNITY_ANDROID</span></span><br><span class=\"line\">\tNumber = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//\tここはiOS用にビルドしたときに初めて有効になる</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> UNITY_iOS</span></span><br><span class=\"line\">\tNumber = <span class=\"number\">300</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1><span id=\"対策方法\">対策方法</span></h1><h2><span id=\"1-エディタ用のダミー処理を作る\">1. エディタ用のダミー処理を作る</span></h2><p>上の例はEditor用の処理が書いてありませんでした。何かしらのダミー処理で変数を使うようにすれば<code>warning</code>の発生を抑える事ができます。それと同時にテストを書くときのことを考えても、内部処理はダミーでも実装しておいたほうがいいかと思います。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\tダミー処理で使っているのwarningは発生しない</span></span><br><span class=\"line\"><span class=\"built_in\">int</span> Number = <span class=\"number\">9</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//\tここはAndroid用にビルドしたときに初めて有効になる</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> UNITY_ANDROID</span></span><br><span class=\"line\">\tNumber = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//\tここはiOS用にビルドしたときに初めて有効になる</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> UNITY_iOS</span></span><br><span class=\"line\">\tNumber = <span class=\"number\">300</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//\tUnity Editor用のダミー処理</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> UNITY_EDITOR</span></span><br><span class=\"line\">\tNumber = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"2-1つのスクリプト内だけ特定のwarningを発生させない\">2. 1つのスクリプト内だけ特定のwarningを発生させない</span></h2><p>プリプロセス命令をファイルの先頭に書くことによってコンパイル時の処理を指定する方法です。</p>\n<p>以下のような<code>warning</code>表示が表示された場合、これを解決するには<code>CS0149</code>というwarningを発生させないプリプロセス命令が必要になります。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test.cs(<span class=\"number\">59</span>,<span class=\"number\">48</span>): warning CS0149: xxxx</span><br></pre></td></tr></table></figure>\n<p><code>CS0149</code>のwarningを発生させないようにするための記述は以下のようになります。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> <span class=\"meta-keyword\">warning</span> disable 0149</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"3-プロジェクト全体に対して発生させたくないwarningを指定する\">3. プロジェクト全体に対して発生させたくないwarningを指定する</span></h2><p>この方法を取ると、指定したすべての条件に一致するものが表示されなくなってしまうので、設定する場合は慎重に行ってください。</p>\n<h3><span id=\"rspとは\">.rspとは</span></h3><p>MSBuild.exeのコマンドラインスイッチを含むテキストファイル。詳しくは以下リンクを参照。</p>\n<p><a href=\"https://docs.microsoft.com/ja-jp/visualstudio/msbuild/msbuild-response-files?view=vs-2019\">MSBuild応答ファイル</a></p>\n<h3><span id=\"設定手順\">設定手順</span></h3><ol>\n<li><code>Assetsフォルダ</code>下に<code>csc.rsp</code>というファイルを作成してください。(Assets/csc.rsp)<ul>\n<li>UnityEditorでファイルを作成すると見た目上は、<code>csc.rsp</code>に見えますが、拡張子が<code>cs</code>になってしまうので、エクスプローラーから作成する</li>\n</ul>\n</li>\n<li><code>csc.rsp</code>内に<code>-nowarn:xxxx</code>と記述する<ul>\n<li><code>xxx</code>の部分は`warning時に表示される数字の部分です。</li>\n<li>複数指定したい場合は、記述した部分の下に追記してく</li>\n</ul>\n</li>\n</ol>\n<h3><span id=\"設定例\">設定例</span></h3><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//\twarning CS0149: xxxxの場合</span></span><br><span class=\"line\">-nowarn:<span class=\"number\">0149</span></span><br><span class=\"line\"><span class=\"comment\">//\twarning CS0031: yyyyの場合</span></span><br><span class=\"line\">-nowarn:<span class=\"number\">0031</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%81%A8%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\">ディレクティブとはなにか</a><ul>\n<li><a href=\"#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\">参考リンク</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%81%AA%E3%81%9Cwarning%E3%81%8C%E7%99%BA%E7%94%9F%E3%81%99%E3%82%8B%E3%81%AE%E3%81%8B\">なぜwarningが発生するのか</a><ul>\n<li><a href=\"#%E4%BE%8B\">例</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%AF%BE%E7%AD%96%E6%96%B9%E6%B3%95\">対策方法</a><ul>\n<li><a href=\"#1-%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF%E7%94%A8%E3%81%AE%E3%83%80%E3%83%9F%E3%83%BC%E5%87%A6%E7%90%86%E3%82%92%E4%BD%9C%E3%82%8B\">1. エディタ用のダミー処理を作る</a></li>\n<li><a href=\"#2-1%E3%81%A4%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E5%86%85%E3%81%A0%E3%81%91%E7%89%B9%E5%AE%9A%E3%81%AEwarning%E3%82%92%E7%99%BA%E7%94%9F%E3%81%95%E3%81%9B%E3%81%AA%E3%81%84\">2. 1つのスクリプト内だけ特定のwarningを発生させない</a></li>\n<li><a href=\"#3-%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E5%85%A8%E4%BD%93%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6%E7%99%BA%E7%94%9F%E3%81%95%E3%81%9B%E3%81%9F%E3%81%8F%E3%81%AA%E3%81%84warning%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B\">3. プロジェクト全体に対して発生させたくないwarningを指定する</a><ul>\n<li><a href=\"#rsp%E3%81%A8%E3%81%AF\">.rspとは</a></li>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E6%89%8B%E9%A0%86\">設定手順</a></li>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BE%8B\">設定例</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"ディレクティブとはなにか\"><a href=\"#ディレクティブとはなにか\" class=\"headerlink\" title=\"ディレクティブとはなにか\"></a>ディレクティブとはなにか</h1><p>Unityは<code>プラットフォーム依存コンパイル</code>という機能を持っています。これは、Unityで作成したゲームやアプリを複数のプラットフォームで動かしたい場合に、各プラットフォームに依存したコード(ファイルの保存領域、Bluetoothの使用)を１つのスクリプト内で書けるようにする仕組みです。</p>\n<h2 id=\"参考リンク\"><a href=\"#参考リンク\" class=\"headerlink\" title=\"参考リンク\"></a>参考リンク</h2><p><a href=\"https://docs.unity3d.com/ja/2018.4/Manual/PlatformDependentCompilation.html\">Unityドキュメント</a></p>\n<h1 id=\"なぜwarningが発生するのか\"><a href=\"#なぜwarningが発生するのか\" class=\"headerlink\" title=\"なぜwarningが発生するのか\"></a>なぜwarningが発生するのか</h1><p>原因はプラットフォームに依存(ディレクティブ指定)しているコードは、Unity Editor上のコンパイルでは無視されることにあります。</p>\n<p>無視されるということは、宣言した変数をEditor上で実行するときは使用していないと見られるケースが発生します。</p>\n<h2 id=\"例\"><a href=\"#例\" class=\"headerlink\" title=\"例\"></a>例</h2><p>この例では、スマホ用OS向けにビルドすることを考えてディレクティブを設定しています。記述上は<code>Number</code>を使用してしますが、<code>UnityEditor</code>から見ると、<code>Number</code>は使用されていない変数になります。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//\tこの変数はUityEditor上では使用していないことになるのでwaringが発生する</span></span><br><span class=\"line\"><span class=\"built_in\">int</span> Number = <span class=\"number\">9</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//\tここはAndroid用にビルドしたときに初めて有効になる</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> UNITY_ANDROID</span></span><br><span class=\"line\">\tNumber = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//\tここはiOS用にビルドしたときに初めて有効になる</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> UNITY_iOS</span></span><br><span class=\"line\">\tNumber = <span class=\"number\">300</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"対策方法\"><a href=\"#対策方法\" class=\"headerlink\" title=\"対策方法\"></a>対策方法</h1><h2 id=\"1-エディタ用のダミー処理を作る\"><a href=\"#1-エディタ用のダミー処理を作る\" class=\"headerlink\" title=\"1. エディタ用のダミー処理を作る\"></a>1. エディタ用のダミー処理を作る</h2><p>上の例はEditor用の処理が書いてありませんでした。何かしらのダミー処理で変数を使うようにすれば<code>warning</code>の発生を抑える事ができます。それと同時にテストを書くときのことを考えても、内部処理はダミーでも実装しておいたほうがいいかと思います。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\tダミー処理で使っているのwarningは発生しない</span></span><br><span class=\"line\"><span class=\"built_in\">int</span> Number = <span class=\"number\">9</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//\tここはAndroid用にビルドしたときに初めて有効になる</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> UNITY_ANDROID</span></span><br><span class=\"line\">\tNumber = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//\tここはiOS用にビルドしたときに初めて有効になる</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> UNITY_iOS</span></span><br><span class=\"line\">\tNumber = <span class=\"number\">300</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//\tUnity Editor用のダミー処理</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> UNITY_EDITOR</span></span><br><span class=\"line\">\tNumber = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-1つのスクリプト内だけ特定のwarningを発生させない\"><a href=\"#2-1つのスクリプト内だけ特定のwarningを発生させない\" class=\"headerlink\" title=\"2. 1つのスクリプト内だけ特定のwarningを発生させない\"></a>2. 1つのスクリプト内だけ特定のwarningを発生させない</h2><p>プリプロセス命令をファイルの先頭に書くことによってコンパイル時の処理を指定する方法です。</p>\n<p>以下のような<code>warning</code>表示が表示された場合、これを解決するには<code>CS0149</code>というwarningを発生させないプリプロセス命令が必要になります。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test.cs(<span class=\"number\">59</span>,<span class=\"number\">48</span>): warning CS0149: xxxx</span><br></pre></td></tr></table></figure>\n<p><code>CS0149</code>のwarningを発生させないようにするための記述は以下のようになります。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> <span class=\"meta-keyword\">warning</span> disable 0149</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-プロジェクト全体に対して発生させたくないwarningを指定する\"><a href=\"#3-プロジェクト全体に対して発生させたくないwarningを指定する\" class=\"headerlink\" title=\"3. プロジェクト全体に対して発生させたくないwarningを指定する\"></a>3. プロジェクト全体に対して発生させたくないwarningを指定する</h2><p>この方法を取ると、指定したすべての条件に一致するものが表示されなくなってしまうので、設定する場合は慎重に行ってください。</p>\n<h3 id=\"rspとは\"><a href=\"#rspとは\" class=\"headerlink\" title=\".rspとは\"></a>.rspとは</h3><p>MSBuild.exeのコマンドラインスイッチを含むテキストファイル。詳しくは以下リンクを参照。</p>\n<p><a href=\"https://docs.microsoft.com/ja-jp/visualstudio/msbuild/msbuild-response-files?view=vs-2019\">MSBuild応答ファイル</a></p>\n<h3 id=\"設定手順\"><a href=\"#設定手順\" class=\"headerlink\" title=\"設定手順\"></a>設定手順</h3><ol>\n<li><code>Assetsフォルダ</code>下に<code>csc.rsp</code>というファイルを作成してください。(Assets/csc.rsp)<ul>\n<li>UnityEditorでファイルを作成すると見た目上は、<code>csc.rsp</code>に見えますが、拡張子が<code>cs</code>になってしまうので、エクスプローラーから作成する</li>\n</ul>\n</li>\n<li><code>csc.rsp</code>内に<code>-nowarn:xxxx</code>と記述する<ul>\n<li><code>xxx</code>の部分は`warning時に表示される数字の部分です。</li>\n<li>複数指定したい場合は、記述した部分の下に追記してく</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"設定例\"><a href=\"#設定例\" class=\"headerlink\" title=\"設定例\"></a>設定例</h3><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//\twarning CS0149: xxxxの場合</span></span><br><span class=\"line\">-nowarn:<span class=\"number\">0149</span></span><br><span class=\"line\"><span class=\"comment\">//\twarning CS0031: yyyyの場合</span></span><br><span class=\"line\">-nowarn:<span class=\"number\">0031</span></span><br></pre></td></tr></table></figure>"},{"title":"【VSCode】開いたテキストが文字化けするときの対処法方","date":"2021-03-09T15:44:32.000Z","_content":"## 設定の「自動文字コード識別設定」をONにする\n\n### 1. Settings画面を開く\n`Code -> Preferences -> Settings`の順でSettings画面を開く\n\t- `Cmd + ,(カンマ)`でも開ける\n\n![Settings](/2021/03/10/【VSCode】開いたテキストが文字化けするときの対処法方/Settings.png \"Settings\")\n\n\n### 2. 自動文字コード識別設定を探す\n検索欄から、「autoGuessEncoding」を検索\n\n![Search](/2021/03/10/【VSCode】開いたテキストが文字化けするときの対処法方/Search.png \"Search\")\n\n### 3.「Files:Auto Guess Encoding」にチェックを入れる\n再度ファイルを開き直せば、文字化けが解消されているはず\n","source":"_posts/【VSCode】開いたテキストが文字化けするときの対処法方.md","raw":"---\ntitle: 【VSCode】開いたテキストが文字化けするときの対処法方\ndate: 2021-03-10 00:44:32\ntags:\n- VSCode\n---\n## 設定の「自動文字コード識別設定」をONにする\n\n### 1. Settings画面を開く\n`Code -> Preferences -> Settings`の順でSettings画面を開く\n\t- `Cmd + ,(カンマ)`でも開ける\n\n![Settings](/2021/03/10/【VSCode】開いたテキストが文字化けするときの対処法方/Settings.png \"Settings\")\n\n\n### 2. 自動文字コード識別設定を探す\n検索欄から、「autoGuessEncoding」を検索\n\n![Search](/2021/03/10/【VSCode】開いたテキストが文字化けするときの対処法方/Search.png \"Search\")\n\n### 3.「Files:Auto Guess Encoding」にチェックを入れる\n再度ファイルを開き直せば、文字化けが解消されているはず\n","slug":"【VSCode】開いたテキストが文字化けするときの対処法方","published":1,"updated":"2021-03-12T18:52:23.467Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3cj003fmzb67qz68hli","content":"<h2><span id=\"設定の自動文字コード識別設定をonにする\">設定の「自動文字コード識別設定」をONにする</span></h2><h3><span id=\"1-settings画面を開く\">1. Settings画面を開く</span></h3><p><code>Code -&gt; Preferences -&gt; Settings</code>の順でSettings画面を開く<br>    - <code>Cmd + ,(カンマ)</code>でも開ける</p>\n<p><img src=\"/2021/03/10/%E3%80%90VSCode%E3%80%91%E9%96%8B%E3%81%84%E3%81%9F%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%81%8C%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95%E6%96%B9/Settings.png\" alt=\"Settings\" title=\"Settings\"></p>\n<h3><span id=\"2-自動文字コード識別設定を探す\">2. 自動文字コード識別設定を探す</span></h3><p>検索欄から、「autoGuessEncoding」を検索</p>\n<p><img src=\"/2021/03/10/%E3%80%90VSCode%E3%80%91%E9%96%8B%E3%81%84%E3%81%9F%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%81%8C%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95%E6%96%B9/Search.png\" alt=\"Search\" title=\"Search\"></p>\n<h3><span id=\"3filesauto-guess-encodingにチェックを入れる\">3.「Files:Auto Guess Encoding」にチェックを入れる</span></h3><p>再度ファイルを開き直せば、文字化けが解消されているはず</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"設定の「自動文字コード識別設定」をONにする\"><a href=\"#設定の「自動文字コード識別設定」をONにする\" class=\"headerlink\" title=\"設定の「自動文字コード識別設定」をONにする\"></a>設定の「自動文字コード識別設定」をONにする</h2><h3 id=\"1-Settings画面を開く\"><a href=\"#1-Settings画面を開く\" class=\"headerlink\" title=\"1. Settings画面を開く\"></a>1. Settings画面を開く</h3><p><code>Code -&gt; Preferences -&gt; Settings</code>の順でSettings画面を開く<br>    - <code>Cmd + ,(カンマ)</code>でも開ける</p>\n<p><img src=\"/2021/03/10/%E3%80%90VSCode%E3%80%91%E9%96%8B%E3%81%84%E3%81%9F%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%81%8C%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95%E6%96%B9/Settings.png\" alt=\"Settings\" title=\"Settings\"></p>\n<h3 id=\"2-自動文字コード識別設定を探す\"><a href=\"#2-自動文字コード識別設定を探す\" class=\"headerlink\" title=\"2. 自動文字コード識別設定を探す\"></a>2. 自動文字コード識別設定を探す</h3><p>検索欄から、「autoGuessEncoding」を検索</p>\n<p><img src=\"/2021/03/10/%E3%80%90VSCode%E3%80%91%E9%96%8B%E3%81%84%E3%81%9F%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%81%8C%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95%E6%96%B9/Search.png\" alt=\"Search\" title=\"Search\"></p>\n<h3 id=\"3-「Files-Auto-Guess-Encoding」にチェックを入れる\"><a href=\"#3-「Files-Auto-Guess-Encoding」にチェックを入れる\" class=\"headerlink\" title=\"3.「Files:Auto Guess Encoding」にチェックを入れる\"></a>3.「Files:Auto Guess Encoding」にチェックを入れる</h3><p>再度ファイルを開き直せば、文字化けが解消されているはず</p>\n"},{"title":"【Vimプラグイン】囲う記述を楽にする「vim-surround」","date":"2021-02-27T09:48:28.000Z","_content":"## 環境\n- MacBook Air M1\n- Big Sur v11.2\n- zsh\n\n## vim-surroundとは？\n文字列を記述する時の`\"\"`や括弧`() []`などのさまざまな、`囲い（surround）`を編集する際に役立つプラグイン\n\nGitHubリポジトリ : https://github.com/tpope/vim-surround\n\n## インストール方法(Vundle使用)\n以下記述を`~/.vimrc`に追加\n\n```zsh\nPlugin 'tpope/vim-surround'\n```\n\n## 使い方\n### 囲う\n1. ノーマルモード\n\t- コマンド : `ysiw + 囲みたい文字`\n2. ヴィジュアルモード\n\t- コマンド : ヴィジュアルモードで選択 + `S + 囲みたい文字`\n\n## 囲い解除(ノーマルモード)\n### 囲いを解除\n- コマンド : `ds + 解除したい囲み文字`\n\t- タグが対象の場合 : `dst`\n\n### 囲いの中身を消去\n- コマンド : `di + 中身を消去したい囲み文字`\n\t- タグが対象の場合 : `dit`\n\n## 囲いの変更(ノーマルモードi)\n### 囲いを変更\n- コマンド : `cs + 変更したい囲み文字 + 変更したい囲み文字`\n\n### 囲いの中身を変更\n- コマンド : `ci + 中身を変更したい囲み文字`\n","source":"_posts/【Vimプラグイン】囲う記述を楽にする「vim-surround」.md","raw":"---\ntitle: 【Vimプラグイン】囲う記述を楽にする「vim-surround」\ndate: 2021-02-27 18:48:28\ntags:\n- Vim\n- Vimプラグイン\n---\n## 環境\n- MacBook Air M1\n- Big Sur v11.2\n- zsh\n\n## vim-surroundとは？\n文字列を記述する時の`\"\"`や括弧`() []`などのさまざまな、`囲い（surround）`を編集する際に役立つプラグイン\n\nGitHubリポジトリ : https://github.com/tpope/vim-surround\n\n## インストール方法(Vundle使用)\n以下記述を`~/.vimrc`に追加\n\n```zsh\nPlugin 'tpope/vim-surround'\n```\n\n## 使い方\n### 囲う\n1. ノーマルモード\n\t- コマンド : `ysiw + 囲みたい文字`\n2. ヴィジュアルモード\n\t- コマンド : ヴィジュアルモードで選択 + `S + 囲みたい文字`\n\n## 囲い解除(ノーマルモード)\n### 囲いを解除\n- コマンド : `ds + 解除したい囲み文字`\n\t- タグが対象の場合 : `dst`\n\n### 囲いの中身を消去\n- コマンド : `di + 中身を消去したい囲み文字`\n\t- タグが対象の場合 : `dit`\n\n## 囲いの変更(ノーマルモードi)\n### 囲いを変更\n- コマンド : `cs + 変更したい囲み文字 + 変更したい囲み文字`\n\n### 囲いの中身を変更\n- コマンド : `ci + 中身を変更したい囲み文字`\n","slug":"【Vimプラグイン】囲う記述を楽にする「vim-surround」","published":1,"updated":"2021-02-27T09:51:32.447Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3cl003hmzb6f9yma189","content":"<h2><span id=\"環境\">環境</span></h2><ul>\n<li>MacBook Air M1</li>\n<li>Big Sur v11.2</li>\n<li>zsh</li>\n</ul>\n<h2><span id=\"vim-surroundとは\">vim-surroundとは？</span></h2><p>文字列を記述する時の<code>&quot;&quot;</code>や括弧<code>() []</code>などのさまざまな、<code>囲い（surround）</code>を編集する際に役立つプラグイン</p>\n<p>GitHubリポジトリ : <a href=\"https://github.com/tpope/vim-surround\">https://github.com/tpope/vim-surround</a></p>\n<h2><span id=\"インストール方法vundle使用\">インストール方法(Vundle使用)</span></h2><p>以下記述を<code>~/.vimrc</code>に追加</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin <span class=\"string\">&#x27;tpope/vim-surround&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"使い方\">使い方</span></h2><h3><span id=\"囲う\">囲う</span></h3><ol>\n<li>ノーマルモード<ul>\n<li>コマンド : <code>ysiw + 囲みたい文字</code></li>\n</ul>\n</li>\n<li>ヴィジュアルモード<ul>\n<li>コマンド : ヴィジュアルモードで選択 + <code>S + 囲みたい文字</code></li>\n</ul>\n</li>\n</ol>\n<h2><span id=\"囲い解除ノーマルモード\">囲い解除(ノーマルモード)</span></h2><h3><span id=\"囲いを解除\">囲いを解除</span></h3><ul>\n<li>コマンド : <code>ds + 解除したい囲み文字</code><ul>\n<li>タグが対象の場合 : <code>dst</code></li>\n</ul>\n</li>\n</ul>\n<h3><span id=\"囲いの中身を消去\">囲いの中身を消去</span></h3><ul>\n<li>コマンド : <code>di + 中身を消去したい囲み文字</code><ul>\n<li>タグが対象の場合 : <code>dit</code></li>\n</ul>\n</li>\n</ul>\n<h2><span id=\"囲いの変更ノーマルモードi\">囲いの変更(ノーマルモードi)</span></h2><h3><span id=\"囲いを変更\">囲いを変更</span></h3><ul>\n<li>コマンド : <code>cs + 変更したい囲み文字 + 変更したい囲み文字</code></li>\n</ul>\n<h3><span id=\"囲いの中身を変更\">囲いの中身を変更</span></h3><ul>\n<li>コマンド : <code>ci + 中身を変更したい囲み文字</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h2><ul>\n<li>MacBook Air M1</li>\n<li>Big Sur v11.2</li>\n<li>zsh</li>\n</ul>\n<h2 id=\"vim-surroundとは？\"><a href=\"#vim-surroundとは？\" class=\"headerlink\" title=\"vim-surroundとは？\"></a>vim-surroundとは？</h2><p>文字列を記述する時の<code>&quot;&quot;</code>や括弧<code>() []</code>などのさまざまな、<code>囲い（surround）</code>を編集する際に役立つプラグイン</p>\n<p>GitHubリポジトリ : <a href=\"https://github.com/tpope/vim-surround\">https://github.com/tpope/vim-surround</a></p>\n<h2 id=\"インストール方法-Vundle使用\"><a href=\"#インストール方法-Vundle使用\" class=\"headerlink\" title=\"インストール方法(Vundle使用)\"></a>インストール方法(Vundle使用)</h2><p>以下記述を<code>~/.vimrc</code>に追加</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin <span class=\"string\">&#x27;tpope/vim-surround&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h2><h3 id=\"囲う\"><a href=\"#囲う\" class=\"headerlink\" title=\"囲う\"></a>囲う</h3><ol>\n<li>ノーマルモード<ul>\n<li>コマンド : <code>ysiw + 囲みたい文字</code></li>\n</ul>\n</li>\n<li>ヴィジュアルモード<ul>\n<li>コマンド : ヴィジュアルモードで選択 + <code>S + 囲みたい文字</code></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"囲い解除-ノーマルモード\"><a href=\"#囲い解除-ノーマルモード\" class=\"headerlink\" title=\"囲い解除(ノーマルモード)\"></a>囲い解除(ノーマルモード)</h2><h3 id=\"囲いを解除\"><a href=\"#囲いを解除\" class=\"headerlink\" title=\"囲いを解除\"></a>囲いを解除</h3><ul>\n<li>コマンド : <code>ds + 解除したい囲み文字</code><ul>\n<li>タグが対象の場合 : <code>dst</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"囲いの中身を消去\"><a href=\"#囲いの中身を消去\" class=\"headerlink\" title=\"囲いの中身を消去\"></a>囲いの中身を消去</h3><ul>\n<li>コマンド : <code>di + 中身を消去したい囲み文字</code><ul>\n<li>タグが対象の場合 : <code>dit</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"囲いの変更-ノーマルモードi\"><a href=\"#囲いの変更-ノーマルモードi\" class=\"headerlink\" title=\"囲いの変更(ノーマルモードi)\"></a>囲いの変更(ノーマルモードi)</h2><h3 id=\"囲いを変更\"><a href=\"#囲いを変更\" class=\"headerlink\" title=\"囲いを変更\"></a>囲いを変更</h3><ul>\n<li>コマンド : <code>cs + 変更したい囲み文字 + 変更したい囲み文字</code></li>\n</ul>\n<h3 id=\"囲いの中身を変更\"><a href=\"#囲いの中身を変更\" class=\"headerlink\" title=\"囲いの中身を変更\"></a>囲いの中身を変更</h3><ul>\n<li>コマンド : <code>ci + 中身を変更したい囲み文字</code></li>\n</ul>\n"},{"title":"【Shell】コマンドラインのカーソル移動","date":"2021-03-10T13:59:26.000Z","_content":"## 矢印キーを使用しないカーソルの移動\n- `□`が現在カーソルのある位置\n\n| コマンド     | 動作解説            | 動作前                  | 動作後                  |\n|----------|-----------------|----------------------|----------------------|\n| Ctrl + a | 行の先頭にカーソルを移動    | cd ~/Deskctop□/test/ | □cd ~/Deskctop/test/ |\n| Ctrl + e | 行の末にカーソルを移動     | cd ~/Deskctop□/test/ | cd ~/Deskctop/test/□ |\n| Ctrl + k | カーソルの右側を全て消去    | cd ~/Deskctop□/test/ | cd ~/Deskctop□       |\n| Ctrl + h | カーソルの左側にある文字を消去 | cd ~/Deskctop□/test/ | cd ~/Deskcto□/test/  |\n| Ctrl + d | カーソルの右側にある文字を消去 | cd ~/Deskctop□/test/ | cd ~/Deskctop□test/  |\n| Ctrl + u | コマンドラインの文字を全て消去 | cd ~/Deskctop□/test/ |                      |\n| Ctrl + y | Ctrl + kで消去した文字列を貼り付け | \t\t\t\t\t\t\t\t |                      |\n\n## コマンドの履歴を使用する\n- 矢印キーの上下(↑,↓)で一つ前のコマンド、一つ後のコマンドを呼び出せる。\n\n- 履歴を見たい場合は、`history`コマンドでみることのできる\n\t- 履歴番号　コマンド\n\t```shell-session\n\t$ history\n\t  679  ls\n\t  680  vim ~/.zshrc\n\t  681  source ~/.zshrc\n\t  682  ZDOTDIR\n\t  683  $ZDOTDIR\n\t  684  echo $ZDOTDIR\n\t```\n\n- 行番号を指定して実行する\n\t- `!履歴番号`\n\t-\t行番号のコマンドがコマンドラインに入力される\n\t```shell-session\n\t$ !679\n\n\t$ ls\n\t```\n\n","source":"_posts/【Shell】コマンドラインのカーソル移動.md","raw":"---\ntitle: 【Shell】コマンドラインのカーソル移動\ndate: 2021-03-10 22:59:26\ntags:\n- Shell\n---\n## 矢印キーを使用しないカーソルの移動\n- `□`が現在カーソルのある位置\n\n| コマンド     | 動作解説            | 動作前                  | 動作後                  |\n|----------|-----------------|----------------------|----------------------|\n| Ctrl + a | 行の先頭にカーソルを移動    | cd ~/Deskctop□/test/ | □cd ~/Deskctop/test/ |\n| Ctrl + e | 行の末にカーソルを移動     | cd ~/Deskctop□/test/ | cd ~/Deskctop/test/□ |\n| Ctrl + k | カーソルの右側を全て消去    | cd ~/Deskctop□/test/ | cd ~/Deskctop□       |\n| Ctrl + h | カーソルの左側にある文字を消去 | cd ~/Deskctop□/test/ | cd ~/Deskcto□/test/  |\n| Ctrl + d | カーソルの右側にある文字を消去 | cd ~/Deskctop□/test/ | cd ~/Deskctop□test/  |\n| Ctrl + u | コマンドラインの文字を全て消去 | cd ~/Deskctop□/test/ |                      |\n| Ctrl + y | Ctrl + kで消去した文字列を貼り付け | \t\t\t\t\t\t\t\t |                      |\n\n## コマンドの履歴を使用する\n- 矢印キーの上下(↑,↓)で一つ前のコマンド、一つ後のコマンドを呼び出せる。\n\n- 履歴を見たい場合は、`history`コマンドでみることのできる\n\t- 履歴番号　コマンド\n\t```shell-session\n\t$ history\n\t  679  ls\n\t  680  vim ~/.zshrc\n\t  681  source ~/.zshrc\n\t  682  ZDOTDIR\n\t  683  $ZDOTDIR\n\t  684  echo $ZDOTDIR\n\t```\n\n- 行番号を指定して実行する\n\t- `!履歴番号`\n\t-\t行番号のコマンドがコマンドラインに入力される\n\t```shell-session\n\t$ !679\n\n\t$ ls\n\t```\n\n","slug":"【Shell】コマンドラインのカーソル移動","published":1,"updated":"2021-03-10T13:59:52.681Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3cm003jmzb6292chpd7","content":"<h2><span id=\"矢印キーを使用しないカーソルの移動\">矢印キーを使用しないカーソルの移動</span></h2><ul>\n<li><code>□</code>が現在カーソルのある位置</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>コマンド</th>\n<th>動作解説</th>\n<th>動作前</th>\n<th>動作後</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Ctrl + a</td>\n<td>行の先頭にカーソルを移動</td>\n<td>cd ~/Deskctop□/test/</td>\n<td>□cd ~/Deskctop/test/</td>\n</tr>\n<tr>\n<td>Ctrl + e</td>\n<td>行の末にカーソルを移動</td>\n<td>cd ~/Deskctop□/test/</td>\n<td>cd ~/Deskctop/test/□</td>\n</tr>\n<tr>\n<td>Ctrl + k</td>\n<td>カーソルの右側を全て消去</td>\n<td>cd ~/Deskctop□/test/</td>\n<td>cd ~/Deskctop□</td>\n</tr>\n<tr>\n<td>Ctrl + h</td>\n<td>カーソルの左側にある文字を消去</td>\n<td>cd ~/Deskctop□/test/</td>\n<td>cd ~/Deskcto□/test/</td>\n</tr>\n<tr>\n<td>Ctrl + d</td>\n<td>カーソルの右側にある文字を消去</td>\n<td>cd ~/Deskctop□/test/</td>\n<td>cd ~/Deskctop□test/</td>\n</tr>\n<tr>\n<td>Ctrl + u</td>\n<td>コマンドラインの文字を全て消去</td>\n<td>cd ~/Deskctop□/test/</td>\n<td></td>\n</tr>\n<tr>\n<td>Ctrl + y</td>\n<td>Ctrl + kで消去した文字列を貼り付け</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2><span id=\"コマンドの履歴を使用する\">コマンドの履歴を使用する</span></h2><ul>\n<li><p>矢印キーの上下(↑,↓)で一つ前のコマンド、一つ後のコマンドを呼び出せる。</p>\n</li>\n<li><p>履歴を見たい場合は、<code>history</code>コマンドでみることのできる</p>\n<ul>\n<li>履歴番号　コマンド<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ history</span><br><span class=\"line\">  679  ls</span><br><span class=\"line\">  680  vim ~&#x2F;.zshrc</span><br><span class=\"line\">  681  source ~&#x2F;.zshrc</span><br><span class=\"line\">  682  ZDOTDIR</span><br><span class=\"line\">  683  $ZDOTDIR</span><br><span class=\"line\">  684  echo $ZDOTDIR</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>行番号を指定して実行する</p>\n<ul>\n<li><code>!履歴番号</code></li>\n<li>行番号のコマンドがコマンドラインに入力される<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ !679</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"矢印キーを使用しないカーソルの移動\"><a href=\"#矢印キーを使用しないカーソルの移動\" class=\"headerlink\" title=\"矢印キーを使用しないカーソルの移動\"></a>矢印キーを使用しないカーソルの移動</h2><ul>\n<li><code>□</code>が現在カーソルのある位置</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>コマンド</th>\n<th>動作解説</th>\n<th>動作前</th>\n<th>動作後</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Ctrl + a</td>\n<td>行の先頭にカーソルを移動</td>\n<td>cd ~/Deskctop□/test/</td>\n<td>□cd ~/Deskctop/test/</td>\n</tr>\n<tr>\n<td>Ctrl + e</td>\n<td>行の末にカーソルを移動</td>\n<td>cd ~/Deskctop□/test/</td>\n<td>cd ~/Deskctop/test/□</td>\n</tr>\n<tr>\n<td>Ctrl + k</td>\n<td>カーソルの右側を全て消去</td>\n<td>cd ~/Deskctop□/test/</td>\n<td>cd ~/Deskctop□</td>\n</tr>\n<tr>\n<td>Ctrl + h</td>\n<td>カーソルの左側にある文字を消去</td>\n<td>cd ~/Deskctop□/test/</td>\n<td>cd ~/Deskcto□/test/</td>\n</tr>\n<tr>\n<td>Ctrl + d</td>\n<td>カーソルの右側にある文字を消去</td>\n<td>cd ~/Deskctop□/test/</td>\n<td>cd ~/Deskctop□test/</td>\n</tr>\n<tr>\n<td>Ctrl + u</td>\n<td>コマンドラインの文字を全て消去</td>\n<td>cd ~/Deskctop□/test/</td>\n<td></td>\n</tr>\n<tr>\n<td>Ctrl + y</td>\n<td>Ctrl + kで消去した文字列を貼り付け</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"コマンドの履歴を使用する\"><a href=\"#コマンドの履歴を使用する\" class=\"headerlink\" title=\"コマンドの履歴を使用する\"></a>コマンドの履歴を使用する</h2><ul>\n<li><p>矢印キーの上下(↑,↓)で一つ前のコマンド、一つ後のコマンドを呼び出せる。</p>\n</li>\n<li><p>履歴を見たい場合は、<code>history</code>コマンドでみることのできる</p>\n<ul>\n<li>履歴番号　コマンド<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ history</span><br><span class=\"line\">  679  ls</span><br><span class=\"line\">  680  vim ~&#x2F;.zshrc</span><br><span class=\"line\">  681  source ~&#x2F;.zshrc</span><br><span class=\"line\">  682  ZDOTDIR</span><br><span class=\"line\">  683  $ZDOTDIR</span><br><span class=\"line\">  684  echo $ZDOTDIR</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>行番号を指定して実行する</p>\n<ul>\n<li><code>!履歴番号</code></li>\n<li>行番号のコマンドがコマンドラインに入力される<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ !679</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"【Vim】バックスペースが効かなくなった場合の対処方","date":"2021-02-26T12:20:36.000Z","_content":"# 参考\nhttps://qiita.com/omega999/items/23aec6a7f6d6735d033f\n\n# 対処方法\n- `.vimrc`に以下を記述する\n```\nset backspace=indent,eol,start\n```\n","source":"_posts/【Vim】バックスペースが効かなくなった場合の対処法.md","raw":"---\ntitle: 【Vim】バックスペースが効かなくなった場合の対処方\ndate: 2021-02-26 21:20:36\ntags:\n---\n# 参考\nhttps://qiita.com/omega999/items/23aec6a7f6d6735d033f\n\n# 対処方法\n- `.vimrc`に以下を記述する\n```\nset backspace=indent,eol,start\n```\n","slug":"【Vim】バックスペースが効かなくなった場合の対処法","published":1,"updated":"2021-02-26T12:20:57.465Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3cm003lmzb60z1rencj","content":"<h1><span id=\"参考\">参考</span></h1><p><a href=\"https://qiita.com/omega999/items/23aec6a7f6d6735d033f\">https://qiita.com/omega999/items/23aec6a7f6d6735d033f</a></p>\n<h1><span id=\"対処方法\">対処方法</span></h1><ul>\n<li><code>.vimrc</code>に以下を記述する<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set backspace&#x3D;indent,eol,start</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://qiita.com/omega999/items/23aec6a7f6d6735d033f\">https://qiita.com/omega999/items/23aec6a7f6d6735d033f</a></p>\n<h1 id=\"対処方法\"><a href=\"#対処方法\" class=\"headerlink\" title=\"対処方法\"></a>対処方法</h1><ul>\n<li><code>.vimrc</code>に以下を記述する<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set backspace&#x3D;indent,eol,start</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"【Winodws】コンソールのスクリーンバッファを複数枚作る","date":"2021-03-16T19:33:29.000Z","_content":"## スクリーンバッファとは?\n- 実際の文字が書き込まれるバッファのことで、実際にコンソールに描画されるのはこのスクリーンバッファの内容\n- コンソールが作成された時点で既定で1つ作成されている(描画されから当たり前)\n- 独自のスクリーンバッファを作成して出力を行うことも可能\n\n## CreateConsoleScreenBuffer\n```\nHANDLE WINAPI CreateConsoleScreenBuffer(\n    DWORD dwDesiredAccess,\n    DWORD dwShareMode,\n    const SECURITY_ATTRIBUTES *lpSecurityAttributes,\n    DWORD dwFlags,\n    LPVOID lpScreenBufferData\n);\n```\n\n|引数型|解説|例|\n|---|---|---|\n|dwDesiredAccess|スクリーンバッファへのアクセス権を指定|GENERIC_READ \\| GENERIC_WRITE|\n|dwShareMode|スクリーンバッファを共有するための定数を指定(共有しない場合は0)|0|\n|*lpSecurityAttributes|SECURITY_ATTRIBUTES構造体のアドレスを指定するが普通はNULLを指定|NULL|\n|dwFlags|CONSOLE_TEXTMODE_BUFFERを指定|CONSOLE_TEXTMODE_BUFFER|\n|lpScreenBufferData|NULLを指定|NULL|\n|戻り値|戻り値のスクリーンバッファハンドルはCloseHandleで閉じる||\n\n## SetConsoleActiveScreenBuffer\n- スクリーンバッファをアクティブにしてコンソールに描画\n\n```\nBOOL WINAPI SetConsoleActiveScreenBuffer(\n    HANDLE hConsoleOutput\n);\n```\n\n|引数型|解説|例|\n|---|---|---|\n|hConsoleOutput|スクリーンバッファのハンドル(CreateConsoleScreenBufferの戻り値)を指定||\n\n","source":"_posts/【Winodws】コンソールのスクリーンバッファを複数枚作る.md","raw":"---\ntitle: 【Winodws】コンソールのスクリーンバッファを複数枚作る\ndate: 2021-03-17 04:33:29\ntags:\n- Windows\n- Windows API\n---\n## スクリーンバッファとは?\n- 実際の文字が書き込まれるバッファのことで、実際にコンソールに描画されるのはこのスクリーンバッファの内容\n- コンソールが作成された時点で既定で1つ作成されている(描画されから当たり前)\n- 独自のスクリーンバッファを作成して出力を行うことも可能\n\n## CreateConsoleScreenBuffer\n```\nHANDLE WINAPI CreateConsoleScreenBuffer(\n    DWORD dwDesiredAccess,\n    DWORD dwShareMode,\n    const SECURITY_ATTRIBUTES *lpSecurityAttributes,\n    DWORD dwFlags,\n    LPVOID lpScreenBufferData\n);\n```\n\n|引数型|解説|例|\n|---|---|---|\n|dwDesiredAccess|スクリーンバッファへのアクセス権を指定|GENERIC_READ \\| GENERIC_WRITE|\n|dwShareMode|スクリーンバッファを共有するための定数を指定(共有しない場合は0)|0|\n|*lpSecurityAttributes|SECURITY_ATTRIBUTES構造体のアドレスを指定するが普通はNULLを指定|NULL|\n|dwFlags|CONSOLE_TEXTMODE_BUFFERを指定|CONSOLE_TEXTMODE_BUFFER|\n|lpScreenBufferData|NULLを指定|NULL|\n|戻り値|戻り値のスクリーンバッファハンドルはCloseHandleで閉じる||\n\n## SetConsoleActiveScreenBuffer\n- スクリーンバッファをアクティブにしてコンソールに描画\n\n```\nBOOL WINAPI SetConsoleActiveScreenBuffer(\n    HANDLE hConsoleOutput\n);\n```\n\n|引数型|解説|例|\n|---|---|---|\n|hConsoleOutput|スクリーンバッファのハンドル(CreateConsoleScreenBufferの戻り値)を指定||\n\n","slug":"【Winodws】コンソールのスクリーンバッファを複数枚作る","published":1,"updated":"2021-03-16T19:53:11.123Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3cn003nmzb68hia61wl","content":"<h2><span id=\"スクリーンバッファとは\">スクリーンバッファとは?</span></h2><ul>\n<li>実際の文字が書き込まれるバッファのことで、実際にコンソールに描画されるのはこのスクリーンバッファの内容</li>\n<li>コンソールが作成された時点で既定で1つ作成されている(描画されから当たり前)</li>\n<li>独自のスクリーンバッファを作成して出力を行うことも可能</li>\n</ul>\n<h2><span id=\"createconsolescreenbuffer\">CreateConsoleScreenBuffer</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HANDLE WINAPI CreateConsoleScreenBuffer(</span><br><span class=\"line\">    DWORD dwDesiredAccess,</span><br><span class=\"line\">    DWORD dwShareMode,</span><br><span class=\"line\">    const SECURITY_ATTRIBUTES *lpSecurityAttributes,</span><br><span class=\"line\">    DWORD dwFlags,</span><br><span class=\"line\">    LPVOID lpScreenBufferData</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>引数型</th>\n<th>解説</th>\n<th>例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>dwDesiredAccess</td>\n<td>スクリーンバッファへのアクセス権を指定</td>\n<td>GENERIC_READ | GENERIC_WRITE</td>\n</tr>\n<tr>\n<td>dwShareMode</td>\n<td>スクリーンバッファを共有するための定数を指定(共有しない場合は0)</td>\n<td>0</td>\n</tr>\n<tr>\n<td>*lpSecurityAttributes</td>\n<td>SECURITY_ATTRIBUTES構造体のアドレスを指定するが普通はNULLを指定</td>\n<td>NULL</td>\n</tr>\n<tr>\n<td>dwFlags</td>\n<td>CONSOLE_TEXTMODE_BUFFERを指定</td>\n<td>CONSOLE_TEXTMODE_BUFFER</td>\n</tr>\n<tr>\n<td>lpScreenBufferData</td>\n<td>NULLを指定</td>\n<td>NULL</td>\n</tr>\n<tr>\n<td>戻り値</td>\n<td>戻り値のスクリーンバッファハンドルはCloseHandleで閉じる</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2><span id=\"setconsoleactivescreenbuffer\">SetConsoleActiveScreenBuffer</span></h2><ul>\n<li>スクリーンバッファをアクティブにしてコンソールに描画</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOL WINAPI SetConsoleActiveScreenBuffer(</span><br><span class=\"line\">    HANDLE hConsoleOutput</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>引数型</th>\n<th>解説</th>\n<th>例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>hConsoleOutput</td>\n<td>スクリーンバッファのハンドル(CreateConsoleScreenBufferの戻り値)を指定</td>\n<td></td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"スクリーンバッファとは\"><a href=\"#スクリーンバッファとは\" class=\"headerlink\" title=\"スクリーンバッファとは?\"></a>スクリーンバッファとは?</h2><ul>\n<li>実際の文字が書き込まれるバッファのことで、実際にコンソールに描画されるのはこのスクリーンバッファの内容</li>\n<li>コンソールが作成された時点で既定で1つ作成されている(描画されから当たり前)</li>\n<li>独自のスクリーンバッファを作成して出力を行うことも可能</li>\n</ul>\n<h2 id=\"CreateConsoleScreenBuffer\"><a href=\"#CreateConsoleScreenBuffer\" class=\"headerlink\" title=\"CreateConsoleScreenBuffer\"></a>CreateConsoleScreenBuffer</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HANDLE WINAPI CreateConsoleScreenBuffer(</span><br><span class=\"line\">    DWORD dwDesiredAccess,</span><br><span class=\"line\">    DWORD dwShareMode,</span><br><span class=\"line\">    const SECURITY_ATTRIBUTES *lpSecurityAttributes,</span><br><span class=\"line\">    DWORD dwFlags,</span><br><span class=\"line\">    LPVOID lpScreenBufferData</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>引数型</th>\n<th>解説</th>\n<th>例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>dwDesiredAccess</td>\n<td>スクリーンバッファへのアクセス権を指定</td>\n<td>GENERIC_READ | GENERIC_WRITE</td>\n</tr>\n<tr>\n<td>dwShareMode</td>\n<td>スクリーンバッファを共有するための定数を指定(共有しない場合は0)</td>\n<td>0</td>\n</tr>\n<tr>\n<td>*lpSecurityAttributes</td>\n<td>SECURITY_ATTRIBUTES構造体のアドレスを指定するが普通はNULLを指定</td>\n<td>NULL</td>\n</tr>\n<tr>\n<td>dwFlags</td>\n<td>CONSOLE_TEXTMODE_BUFFERを指定</td>\n<td>CONSOLE_TEXTMODE_BUFFER</td>\n</tr>\n<tr>\n<td>lpScreenBufferData</td>\n<td>NULLを指定</td>\n<td>NULL</td>\n</tr>\n<tr>\n<td>戻り値</td>\n<td>戻り値のスクリーンバッファハンドルはCloseHandleで閉じる</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"SetConsoleActiveScreenBuffer\"><a href=\"#SetConsoleActiveScreenBuffer\" class=\"headerlink\" title=\"SetConsoleActiveScreenBuffer\"></a>SetConsoleActiveScreenBuffer</h2><ul>\n<li>スクリーンバッファをアクティブにしてコンソールに描画</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOL WINAPI SetConsoleActiveScreenBuffer(</span><br><span class=\"line\">    HANDLE hConsoleOutput</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>引数型</th>\n<th>解説</th>\n<th>例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>hConsoleOutput</td>\n<td>スクリーンバッファのハンドル(CreateConsoleScreenBufferの戻り値)を指定</td>\n<td></td>\n</tr>\n</tbody></table>\n"},{"title":"【XCode】TableViewのCellをカスタマイズする","date":"2021-03-14T14:28:07.000Z","_content":"## 環境\n- MacBook Air M1\n- OS : 11.2(20D64)\n- XCode : 12.4\n- Swift : 5.3.2 \n\n## 参考\n- https://rara-world.com/ios-swift-tableview-custom-cell/\n\n## \n\n### 1. 新規ファイル追加でCocoa Touch Classを選択 \n![新規作成](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/新規作成.png \"新規作成\")\n\n### 2. 作成時の設定\n- Class : 好きな名前(今回は`CustomTableViewCell`)\n- Subclass of : UITableViewCell\n- Also create XIB file : ON\n- Language : Swift\n\n![作成時オプション](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/作成時オプション.png \"作成時オプション\")\n\n２つの新規ファイルが生成されればOK\n![作成済みチェック](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/作成済みチェック.png \"作成済みチェック\")\n\n### 3. CustomTableViewCell.xibを編集\n#### Cellにラベルを追加\n![ラベル追加](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/ラベル追加.png \"ラベル追加\")\n\n#### Rostoration IDの設定\n任意の文字列でいい(セル生成時に使用する)\n![Identifier](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/Identifier.png \"Identifier\")\n\n### 4. CustomTableViewCell.swiftでラベルの参照を設定\n![ラベル参照](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/ラベル参照.gif \"ラベル参照\")\n\n### 5. Main.storyboardを編集\nTable Viewを追加\n![TableVIew](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/TableVIew.png \"TableVIew\")\n\n### 6. ViewController.swiftを編集\n#### Main.storyboardで指定した、Table Viewの参照を設定\n- 参照時の変数名を今回は`TableView`とする\n\n![TableView参照](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/TableView参照.gif \"TableView参照\")\n\n#### viewDidLoad()に追記\n- UITableViewに対して、delegateと使用する`Cell`の情報を設定\n\t- TableView.register : 使用するカスタムセルの情報を登録 \n\t\t- nibName = 作ったCellのクラス名\n\t\t- forCellReuseIdentifier = xibで指定したidentifier名\n\t- TableView.delegate : \n\t- TableView.dataSorce :\n\n```Swift\noverride func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view.\n\n        //\tここから\n        TableView.register(UINib(nibName: \"CustomTableViewCell\", bundle: nil), forCellReuseIdentifier: \"CustomCell\")\n        TableView.delegate = self\n        TableView.dataSource = self\n        //\tここまで\n    }\n```\n\n#### UITableViewDelegate,UITableViewDataSourceを継承\n- どちらのメソッドも、`optional`なので、最低限のメソッドの定義をすれば、他のメソッドは定義しなくてもいい\n- UITableViewDelegate : TableView内のデータが選択や生成、編集されたときに呼び出されるメソッドが定義されたプロトコル群\n- UITableViewDataSource : テーブルに表示させたいデータを設定するためのプロトコル群\n\n```Swift\nclass ViewController: UIViewController,UITableViewDelegate,UITableViewDataSource {\n\t...\n}\n```\n\n継承すると、エラーが出るはずなので、Fixをクリックしてメソッドを2つ自動生成してもらうと、以下のようなメソッドが自動生成されるはず\n```\n//\tUITableViewDelegateの継承によって生成された\n//\tTableViewに生成するセル数を設定する(Int型を返す)\nfunc tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n\tCode\n}\n\n//\tUITableViewDataSourceの継承によって生成された\n//\tTableViewに表示するセルのデータを設定する(UITableViewCellを返す)\nfunc tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\tCode\n}\n```\n\n今回は、生成するセルを`10個`、表示するデータを各セルを`上から数えたときの番号`にする\n```\nfunc tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    return 10\n}\n\nfunc tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCell(withIdentifier: \"CustomCell\",for: indexPath) as! CustomTableViewCell\n    \n    cell.Label.text = String(indexPath.row)\n    \n    return cell\n}\n```\n\n## 実行した結果\n![完成](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/完成.png \"完成\")\n\n## ViewController.swiftの完成形\n```swift\nimport UIKit\n\nclass ViewController: UIViewController,UITableViewDelegate,UITableViewDataSource {\n    \n    \n    @IBOutlet weak var TableView: UITableView!\n    \n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return 10\n    }\n    \n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        let cell = tableView.dequeueReusableCell(withIdentifier: \"CustomCell\",for: indexPath) as! CustomTableViewCell\n        \n        cell.Label.text = String(1)\n        \n        return cell\n    }\n    \n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view.\n        TableView.register(UINib(nibName: \"CustomTableViewCell\", bundle: nil), forCellReuseIdentifier: \"CustomCell\")\n        TableView.delegate = self\n        TableView.dataSource = self\n    }\n\n\n}\n```\n","source":"_posts/【XCode】TableViewのCellをカスタマイズする.md","raw":"---\ntitle: 【XCode】TableViewのCellをカスタマイズする\ndate: 2021-03-14 23:28:07\ntags:\n- XCode\n- Swift\n---\n## 環境\n- MacBook Air M1\n- OS : 11.2(20D64)\n- XCode : 12.4\n- Swift : 5.3.2 \n\n## 参考\n- https://rara-world.com/ios-swift-tableview-custom-cell/\n\n## \n\n### 1. 新規ファイル追加でCocoa Touch Classを選択 \n![新規作成](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/新規作成.png \"新規作成\")\n\n### 2. 作成時の設定\n- Class : 好きな名前(今回は`CustomTableViewCell`)\n- Subclass of : UITableViewCell\n- Also create XIB file : ON\n- Language : Swift\n\n![作成時オプション](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/作成時オプション.png \"作成時オプション\")\n\n２つの新規ファイルが生成されればOK\n![作成済みチェック](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/作成済みチェック.png \"作成済みチェック\")\n\n### 3. CustomTableViewCell.xibを編集\n#### Cellにラベルを追加\n![ラベル追加](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/ラベル追加.png \"ラベル追加\")\n\n#### Rostoration IDの設定\n任意の文字列でいい(セル生成時に使用する)\n![Identifier](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/Identifier.png \"Identifier\")\n\n### 4. CustomTableViewCell.swiftでラベルの参照を設定\n![ラベル参照](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/ラベル参照.gif \"ラベル参照\")\n\n### 5. Main.storyboardを編集\nTable Viewを追加\n![TableVIew](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/TableVIew.png \"TableVIew\")\n\n### 6. ViewController.swiftを編集\n#### Main.storyboardで指定した、Table Viewの参照を設定\n- 参照時の変数名を今回は`TableView`とする\n\n![TableView参照](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/TableView参照.gif \"TableView参照\")\n\n#### viewDidLoad()に追記\n- UITableViewに対して、delegateと使用する`Cell`の情報を設定\n\t- TableView.register : 使用するカスタムセルの情報を登録 \n\t\t- nibName = 作ったCellのクラス名\n\t\t- forCellReuseIdentifier = xibで指定したidentifier名\n\t- TableView.delegate : \n\t- TableView.dataSorce :\n\n```Swift\noverride func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view.\n\n        //\tここから\n        TableView.register(UINib(nibName: \"CustomTableViewCell\", bundle: nil), forCellReuseIdentifier: \"CustomCell\")\n        TableView.delegate = self\n        TableView.dataSource = self\n        //\tここまで\n    }\n```\n\n#### UITableViewDelegate,UITableViewDataSourceを継承\n- どちらのメソッドも、`optional`なので、最低限のメソッドの定義をすれば、他のメソッドは定義しなくてもいい\n- UITableViewDelegate : TableView内のデータが選択や生成、編集されたときに呼び出されるメソッドが定義されたプロトコル群\n- UITableViewDataSource : テーブルに表示させたいデータを設定するためのプロトコル群\n\n```Swift\nclass ViewController: UIViewController,UITableViewDelegate,UITableViewDataSource {\n\t...\n}\n```\n\n継承すると、エラーが出るはずなので、Fixをクリックしてメソッドを2つ自動生成してもらうと、以下のようなメソッドが自動生成されるはず\n```\n//\tUITableViewDelegateの継承によって生成された\n//\tTableViewに生成するセル数を設定する(Int型を返す)\nfunc tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n\tCode\n}\n\n//\tUITableViewDataSourceの継承によって生成された\n//\tTableViewに表示するセルのデータを設定する(UITableViewCellを返す)\nfunc tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\tCode\n}\n```\n\n今回は、生成するセルを`10個`、表示するデータを各セルを`上から数えたときの番号`にする\n```\nfunc tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    return 10\n}\n\nfunc tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCell(withIdentifier: \"CustomCell\",for: indexPath) as! CustomTableViewCell\n    \n    cell.Label.text = String(indexPath.row)\n    \n    return cell\n}\n```\n\n## 実行した結果\n![完成](/2021/03/14/【XCode】TableViewのCellをカスタマイズする/完成.png \"完成\")\n\n## ViewController.swiftの完成形\n```swift\nimport UIKit\n\nclass ViewController: UIViewController,UITableViewDelegate,UITableViewDataSource {\n    \n    \n    @IBOutlet weak var TableView: UITableView!\n    \n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return 10\n    }\n    \n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        let cell = tableView.dequeueReusableCell(withIdentifier: \"CustomCell\",for: indexPath) as! CustomTableViewCell\n        \n        cell.Label.text = String(1)\n        \n        return cell\n    }\n    \n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view.\n        TableView.register(UINib(nibName: \"CustomTableViewCell\", bundle: nil), forCellReuseIdentifier: \"CustomCell\")\n        TableView.delegate = self\n        TableView.dataSource = self\n    }\n\n\n}\n```\n","slug":"【XCode】TableViewのCellをカスタマイズする","published":1,"updated":"2021-03-14T14:34:08.118Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3cn003pmzb6dgkg8kd7","content":"<h2><span id=\"環境\">環境</span></h2><ul>\n<li>MacBook Air M1</li>\n<li>OS : 11.2(20D64)</li>\n<li>XCode : 12.4</li>\n<li>Swift : 5.3.2 </li>\n</ul>\n<h2><span id=\"参考\">参考</span></h2><ul>\n<li><a href=\"https://rara-world.com/ios-swift-tableview-custom-cell/\">https://rara-world.com/ios-swift-tableview-custom-cell/</a></li>\n</ul>\n<h2><span id></span></h2><h3><span id=\"1-新規ファイル追加でcocoa-touch-classを選択\">1. 新規ファイル追加でCocoa Touch Classを選択</span></h3><p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E6%96%B0%E8%A6%8F%E4%BD%9C%E6%88%90.png\" alt=\"新規作成\" title=\"新規作成\"></p>\n<h3><span id=\"2-作成時の設定\">2. 作成時の設定</span></h3><ul>\n<li>Class : 好きな名前(今回は<code>CustomTableViewCell</code>)</li>\n<li>Subclass of : UITableViewCell</li>\n<li>Also create XIB file : ON</li>\n<li>Language : Swift</li>\n</ul>\n<p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E4%BD%9C%E6%88%90%E6%99%82%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3.png\" alt=\"作成時オプション\" title=\"作成時オプション\"></p>\n<p>２つの新規ファイルが生成されればOK<br><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E4%BD%9C%E6%88%90%E6%B8%88%E3%81%BF%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF.png\" alt=\"作成済みチェック\" title=\"作成済みチェック\"></p>\n<h3><span id=\"3-customtableviewcellxibを編集\">3. CustomTableViewCell.xibを編集</span></h3><h4><span id=\"cellにラベルを追加\">Cellにラベルを追加</span></h4><p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E3%83%A9%E3%83%99%E3%83%AB%E8%BF%BD%E5%8A%A0.png\" alt=\"ラベル追加\" title=\"ラベル追加\"></p>\n<h4><span id=\"rostoration-idの設定\">Rostoration IDの設定</span></h4><p>任意の文字列でいい(セル生成時に使用する)<br><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/Identifier.png\" alt=\"Identifier\" title=\"Identifier\"></p>\n<h3><span id=\"4-customtableviewcellswiftでラベルの参照を設定\">4. CustomTableViewCell.swiftでラベルの参照を設定</span></h3><p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E3%83%A9%E3%83%99%E3%83%AB%E5%8F%82%E7%85%A7.gif\" alt=\"ラベル参照\" title=\"ラベル参照\"></p>\n<h3><span id=\"5-mainstoryboardを編集\">5. Main.storyboardを編集</span></h3><p>Table Viewを追加<br><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/TableVIew.png\" alt=\"TableVIew\" title=\"TableVIew\"></p>\n<h3><span id=\"6-viewcontrollerswiftを編集\">6. ViewController.swiftを編集</span></h3><h4><span id=\"mainstoryboardで指定した-table-viewの参照を設定\">Main.storyboardで指定した、Table Viewの参照を設定</span></h4><ul>\n<li>参照時の変数名を今回は<code>TableView</code>とする</li>\n</ul>\n<p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/TableView%E5%8F%82%E7%85%A7.gif\" alt=\"TableView参照\" title=\"TableView参照\"></p>\n<h4><span id=\"viewdidloadに追記\">viewDidLoad()に追記</span></h4><ul>\n<li>UITableViewに対して、delegateと使用する<code>Cell</code>の情報を設定<ul>\n<li>TableView.register : 使用するカスタムセルの情報を登録 <ul>\n<li>nibName = 作ったCellのクラス名</li>\n<li>forCellReuseIdentifier = xibで指定したidentifier名</li>\n</ul>\n</li>\n<li>TableView.delegate : </li>\n<li>TableView.dataSorce :</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</span><br><span class=\"line\">        <span class=\"comment\">// Do any additional setup after loading the view.</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//\tここから</span></span><br><span class=\"line\">        <span class=\"type\">TableView</span>.register(<span class=\"type\">UINib</span>(nibName: <span class=\"string\">&quot;CustomTableViewCell&quot;</span>, bundle: <span class=\"literal\">nil</span>), forCellReuseIdentifier: <span class=\"string\">&quot;CustomCell&quot;</span>)</span><br><span class=\"line\">        <span class=\"type\">TableView</span>.delegate <span class=\"operator\">=</span> <span class=\"keyword\">self</span></span><br><span class=\"line\">        <span class=\"type\">TableView</span>.dataSource <span class=\"operator\">=</span> <span class=\"keyword\">self</span></span><br><span class=\"line\">        <span class=\"comment\">//\tここまで</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"uitableviewdelegateuitableviewdatasourceを継承\">UITableViewDelegate,UITableViewDataSourceを継承</span></h4><ul>\n<li>どちらのメソッドも、<code>optional</code>なので、最低限のメソッドの定義をすれば、他のメソッドは定義しなくてもいい</li>\n<li>UITableViewDelegate : TableView内のデータが選択や生成、編集されたときに呼び出されるメソッドが定義されたプロトコル群</li>\n<li>UITableViewDataSource : テーブルに表示させたいデータを設定するためのプロトコル群</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewController</span>: <span class=\"title\">UIViewController</span>,<span class=\"title\">UITableViewDelegate</span>,<span class=\"title\">UITableViewDataSource</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"operator\">...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>継承すると、エラーが出るはずなので、Fixをクリックしてメソッドを2つ自動生成してもらうと、以下のようなメソッドが自動生成されるはず</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;\tUITableViewDelegateの継承によって生成された</span><br><span class=\"line\">&#x2F;&#x2F;\tTableViewに生成するセル数を設定する(Int型を返す)</span><br><span class=\"line\">func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int &#123;</span><br><span class=\"line\">\tCode</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;\tUITableViewDataSourceの継承によって生成された</span><br><span class=\"line\">&#x2F;&#x2F;\tTableViewに表示するセルのデータを設定する(UITableViewCellを返す)</span><br><span class=\"line\">func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell &#123;</span><br><span class=\"line\">\tCode</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>今回は、生成するセルを<code>10個</code>、表示するデータを各セルを<code>上から数えたときの番号</code>にする</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int &#123;</span><br><span class=\"line\">    return 10</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell &#123;</span><br><span class=\"line\">    let cell &#x3D; tableView.dequeueReusableCell(withIdentifier: &quot;CustomCell&quot;,for: indexPath) as! CustomTableViewCell</span><br><span class=\"line\">    </span><br><span class=\"line\">    cell.Label.text &#x3D; String(indexPath.row)</span><br><span class=\"line\">    </span><br><span class=\"line\">    return cell</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"実行した結果\">実行した結果</span></h2><p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E5%AE%8C%E6%88%90.png\" alt=\"完成\" title=\"完成\"></p>\n<h2><span id=\"viewcontrollerswiftの完成形\">ViewController.swiftの完成形</span></h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewController</span>: <span class=\"title\">UIViewController</span>,<span class=\"title\">UITableViewDelegate</span>,<span class=\"title\">UITableViewDataSource</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">@IBOutlet</span> <span class=\"keyword\">weak</span> <span class=\"keyword\">var</span> <span class=\"type\">TableView</span>: <span class=\"type\">UITableView</span>!</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">tableView</span><span class=\"params\">(<span class=\"keyword\">_</span> tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">10</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">tableView</span><span class=\"params\">(<span class=\"keyword\">_</span> tableView: UITableView, cellForRowAt indexPath: IndexPath)</span></span> -&gt; <span class=\"type\">UITableViewCell</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> cell <span class=\"operator\">=</span> tableView.dequeueReusableCell(withIdentifier: <span class=\"string\">&quot;CustomCell&quot;</span>,<span class=\"keyword\">for</span>: indexPath) <span class=\"keyword\">as!</span> <span class=\"type\">CustomTableViewCell</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        cell.<span class=\"type\">Label</span>.text <span class=\"operator\">=</span> <span class=\"type\">String</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> cell</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</span><br><span class=\"line\">        <span class=\"comment\">// Do any additional setup after loading the view.</span></span><br><span class=\"line\">        <span class=\"type\">TableView</span>.register(<span class=\"type\">UINib</span>(nibName: <span class=\"string\">&quot;CustomTableViewCell&quot;</span>, bundle: <span class=\"literal\">nil</span>), forCellReuseIdentifier: <span class=\"string\">&quot;CustomCell&quot;</span>)</span><br><span class=\"line\">        <span class=\"type\">TableView</span>.delegate <span class=\"operator\">=</span> <span class=\"keyword\">self</span></span><br><span class=\"line\">        <span class=\"type\">TableView</span>.dataSource <span class=\"operator\">=</span> <span class=\"keyword\">self</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h2><ul>\n<li>MacBook Air M1</li>\n<li>OS : 11.2(20D64)</li>\n<li>XCode : 12.4</li>\n<li>Swift : 5.3.2 </li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://rara-world.com/ios-swift-tableview-custom-cell/\">https://rara-world.com/ios-swift-tableview-custom-cell/</a></li>\n</ul>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h3 id=\"1-新規ファイル追加でCocoa-Touch-Classを選択\"><a href=\"#1-新規ファイル追加でCocoa-Touch-Classを選択\" class=\"headerlink\" title=\"1. 新規ファイル追加でCocoa Touch Classを選択\"></a>1. 新規ファイル追加でCocoa Touch Classを選択</h3><p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E6%96%B0%E8%A6%8F%E4%BD%9C%E6%88%90.png\" alt=\"新規作成\" title=\"新規作成\"></p>\n<h3 id=\"2-作成時の設定\"><a href=\"#2-作成時の設定\" class=\"headerlink\" title=\"2. 作成時の設定\"></a>2. 作成時の設定</h3><ul>\n<li>Class : 好きな名前(今回は<code>CustomTableViewCell</code>)</li>\n<li>Subclass of : UITableViewCell</li>\n<li>Also create XIB file : ON</li>\n<li>Language : Swift</li>\n</ul>\n<p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E4%BD%9C%E6%88%90%E6%99%82%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3.png\" alt=\"作成時オプション\" title=\"作成時オプション\"></p>\n<p>２つの新規ファイルが生成されればOK<br><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E4%BD%9C%E6%88%90%E6%B8%88%E3%81%BF%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF.png\" alt=\"作成済みチェック\" title=\"作成済みチェック\"></p>\n<h3 id=\"3-CustomTableViewCell-xibを編集\"><a href=\"#3-CustomTableViewCell-xibを編集\" class=\"headerlink\" title=\"3. CustomTableViewCell.xibを編集\"></a>3. CustomTableViewCell.xibを編集</h3><h4 id=\"Cellにラベルを追加\"><a href=\"#Cellにラベルを追加\" class=\"headerlink\" title=\"Cellにラベルを追加\"></a>Cellにラベルを追加</h4><p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E3%83%A9%E3%83%99%E3%83%AB%E8%BF%BD%E5%8A%A0.png\" alt=\"ラベル追加\" title=\"ラベル追加\"></p>\n<h4 id=\"Rostoration-IDの設定\"><a href=\"#Rostoration-IDの設定\" class=\"headerlink\" title=\"Rostoration IDの設定\"></a>Rostoration IDの設定</h4><p>任意の文字列でいい(セル生成時に使用する)<br><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/Identifier.png\" alt=\"Identifier\" title=\"Identifier\"></p>\n<h3 id=\"4-CustomTableViewCell-swiftでラベルの参照を設定\"><a href=\"#4-CustomTableViewCell-swiftでラベルの参照を設定\" class=\"headerlink\" title=\"4. CustomTableViewCell.swiftでラベルの参照を設定\"></a>4. CustomTableViewCell.swiftでラベルの参照を設定</h3><p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E3%83%A9%E3%83%99%E3%83%AB%E5%8F%82%E7%85%A7.gif\" alt=\"ラベル参照\" title=\"ラベル参照\"></p>\n<h3 id=\"5-Main-storyboardを編集\"><a href=\"#5-Main-storyboardを編集\" class=\"headerlink\" title=\"5. Main.storyboardを編集\"></a>5. Main.storyboardを編集</h3><p>Table Viewを追加<br><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/TableVIew.png\" alt=\"TableVIew\" title=\"TableVIew\"></p>\n<h3 id=\"6-ViewController-swiftを編集\"><a href=\"#6-ViewController-swiftを編集\" class=\"headerlink\" title=\"6. ViewController.swiftを編集\"></a>6. ViewController.swiftを編集</h3><h4 id=\"Main-storyboardで指定した、Table-Viewの参照を設定\"><a href=\"#Main-storyboardで指定した、Table-Viewの参照を設定\" class=\"headerlink\" title=\"Main.storyboardで指定した、Table Viewの参照を設定\"></a>Main.storyboardで指定した、Table Viewの参照を設定</h4><ul>\n<li>参照時の変数名を今回は<code>TableView</code>とする</li>\n</ul>\n<p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/TableView%E5%8F%82%E7%85%A7.gif\" alt=\"TableView参照\" title=\"TableView参照\"></p>\n<h4 id=\"viewDidLoad-に追記\"><a href=\"#viewDidLoad-に追記\" class=\"headerlink\" title=\"viewDidLoad()に追記\"></a>viewDidLoad()に追記</h4><ul>\n<li>UITableViewに対して、delegateと使用する<code>Cell</code>の情報を設定<ul>\n<li>TableView.register : 使用するカスタムセルの情報を登録 <ul>\n<li>nibName = 作ったCellのクラス名</li>\n<li>forCellReuseIdentifier = xibで指定したidentifier名</li>\n</ul>\n</li>\n<li>TableView.delegate : </li>\n<li>TableView.dataSorce :</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</span><br><span class=\"line\">        <span class=\"comment\">// Do any additional setup after loading the view.</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//\tここから</span></span><br><span class=\"line\">        <span class=\"type\">TableView</span>.register(<span class=\"type\">UINib</span>(nibName: <span class=\"string\">&quot;CustomTableViewCell&quot;</span>, bundle: <span class=\"literal\">nil</span>), forCellReuseIdentifier: <span class=\"string\">&quot;CustomCell&quot;</span>)</span><br><span class=\"line\">        <span class=\"type\">TableView</span>.delegate <span class=\"operator\">=</span> <span class=\"keyword\">self</span></span><br><span class=\"line\">        <span class=\"type\">TableView</span>.dataSource <span class=\"operator\">=</span> <span class=\"keyword\">self</span></span><br><span class=\"line\">        <span class=\"comment\">//\tここまで</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"UITableViewDelegate-UITableViewDataSourceを継承\"><a href=\"#UITableViewDelegate-UITableViewDataSourceを継承\" class=\"headerlink\" title=\"UITableViewDelegate,UITableViewDataSourceを継承\"></a>UITableViewDelegate,UITableViewDataSourceを継承</h4><ul>\n<li>どちらのメソッドも、<code>optional</code>なので、最低限のメソッドの定義をすれば、他のメソッドは定義しなくてもいい</li>\n<li>UITableViewDelegate : TableView内のデータが選択や生成、編集されたときに呼び出されるメソッドが定義されたプロトコル群</li>\n<li>UITableViewDataSource : テーブルに表示させたいデータを設定するためのプロトコル群</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewController</span>: <span class=\"title\">UIViewController</span>,<span class=\"title\">UITableViewDelegate</span>,<span class=\"title\">UITableViewDataSource</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"operator\">...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>継承すると、エラーが出るはずなので、Fixをクリックしてメソッドを2つ自動生成してもらうと、以下のようなメソッドが自動生成されるはず</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;\tUITableViewDelegateの継承によって生成された</span><br><span class=\"line\">&#x2F;&#x2F;\tTableViewに生成するセル数を設定する(Int型を返す)</span><br><span class=\"line\">func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int &#123;</span><br><span class=\"line\">\tCode</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;\tUITableViewDataSourceの継承によって生成された</span><br><span class=\"line\">&#x2F;&#x2F;\tTableViewに表示するセルのデータを設定する(UITableViewCellを返す)</span><br><span class=\"line\">func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell &#123;</span><br><span class=\"line\">\tCode</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>今回は、生成するセルを<code>10個</code>、表示するデータを各セルを<code>上から数えたときの番号</code>にする</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int &#123;</span><br><span class=\"line\">    return 10</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell &#123;</span><br><span class=\"line\">    let cell &#x3D; tableView.dequeueReusableCell(withIdentifier: &quot;CustomCell&quot;,for: indexPath) as! CustomTableViewCell</span><br><span class=\"line\">    </span><br><span class=\"line\">    cell.Label.text &#x3D; String(indexPath.row)</span><br><span class=\"line\">    </span><br><span class=\"line\">    return cell</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"実行した結果\"><a href=\"#実行した結果\" class=\"headerlink\" title=\"実行した結果\"></a>実行した結果</h2><p><img src=\"/2021/03/14/%E3%80%90XCode%E3%80%91TableView%E3%81%AECell%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/%E5%AE%8C%E6%88%90.png\" alt=\"完成\" title=\"完成\"></p>\n<h2 id=\"ViewController-swiftの完成形\"><a href=\"#ViewController-swiftの完成形\" class=\"headerlink\" title=\"ViewController.swiftの完成形\"></a>ViewController.swiftの完成形</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewController</span>: <span class=\"title\">UIViewController</span>,<span class=\"title\">UITableViewDelegate</span>,<span class=\"title\">UITableViewDataSource</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">@IBOutlet</span> <span class=\"keyword\">weak</span> <span class=\"keyword\">var</span> <span class=\"type\">TableView</span>: <span class=\"type\">UITableView</span>!</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">tableView</span><span class=\"params\">(<span class=\"keyword\">_</span> tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">10</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">tableView</span><span class=\"params\">(<span class=\"keyword\">_</span> tableView: UITableView, cellForRowAt indexPath: IndexPath)</span></span> -&gt; <span class=\"type\">UITableViewCell</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> cell <span class=\"operator\">=</span> tableView.dequeueReusableCell(withIdentifier: <span class=\"string\">&quot;CustomCell&quot;</span>,<span class=\"keyword\">for</span>: indexPath) <span class=\"keyword\">as!</span> <span class=\"type\">CustomTableViewCell</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        cell.<span class=\"type\">Label</span>.text <span class=\"operator\">=</span> <span class=\"type\">String</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> cell</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</span><br><span class=\"line\">        <span class=\"comment\">// Do any additional setup after loading the view.</span></span><br><span class=\"line\">        <span class=\"type\">TableView</span>.register(<span class=\"type\">UINib</span>(nibName: <span class=\"string\">&quot;CustomTableViewCell&quot;</span>, bundle: <span class=\"literal\">nil</span>), forCellReuseIdentifier: <span class=\"string\">&quot;CustomCell&quot;</span>)</span><br><span class=\"line\">        <span class=\"type\">TableView</span>.delegate <span class=\"operator\">=</span> <span class=\"keyword\">self</span></span><br><span class=\"line\">        <span class=\"type\">TableView</span>.dataSource <span class=\"operator\">=</span> <span class=\"keyword\">self</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"【Xcode】EntryPointを変更する方法","date":"2021-03-01T13:59:11.000Z","_content":"## もくじ\n0. 環境\n1. Entry Pointとは\n2. StoryBordから変更する\n3. コードから変更する\n4. [おまけ]初回起動時のみ特定の画面を表示させる\n\n## 0. 環境\n- MacBook Air M1\n- Xcode 12.4\n\n## 1. Entry Pointとは\n- プログラムの開始される位置\n- この記事では開始される画面の位置も含まれる\n### 画面上で見ると以下の画像の矢印部分がEntry Pointを表している\n![EntryPointの矢印](/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPointの矢印.png \"EntryPointの矢印\")\n\n### アシスタントエディタで確認すると以下赤枠部分\n![EntryPointのアシスタントエリアでの表示](/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPointのアシスタントエリアでの表示.png \"EntryPointのアシスタントエリアでの表示\")\n\n## 2. StoryBordから変更する\n\n### ドラックアンドドロップで矢印を移動させる\n![EntryPoint変更(マウス).gif](/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPoint変更(マウス).gif \"EntryPoint変更(マウス)\")\n\n### Utilites areaから移動させる\n`Attributes inspector内`の`Is Initial View Controller`にチェクを入れる\n![EntryPoint変更(Inspector)](/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPoint変更(Inspector).gif \"EntryPoint変更(Inspector)\")\n \n## 3. コードから変更する\n### 1. Main.storybordの遷移させたいViewControllerに`Storyboad ID`を設定する\n- `Identity Inspector` 内の`Sotryboard ID`を設定\n\n![Inspector.png](/2021/03/01/【Xcode】EntryPointを変更する方法/Inspector.png \"Inspector.png\")\n\n- 今回はこのように設定\n\t- 1画面目 : FirstView\n\t- 2画面目 : SecondView\n\n### 2. SceneDelegate.swift\n1. 何も変更していないデフォルトの状態だとこのようなコードになっていると思います\n\t```swift\n\timport UIKit\n\t\n\tclass SceneDelegate: UIResponder, UIWindowSceneDelegate {\n\t\n\t    var window: UIWindow?\n\t\n\t\n\t    func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {\n\t        // Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.\n\t        // If using a storyboard, the `window` property will automatically be initialized and attached to the scene.\n\t        // This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).\n\t        guard let _ = (scene as? UIWindowScene) else { return }\n\t    }\n\t\n\t    func sceneDidDisconnect(_ scene: UIScene) {\n\t        // Called as the scene is being released by the system.\n\t        // This occurs shortly after the scene enters the background, or when its session is discarded.\n\t        // Release any resources associated with this scene that can be re-created the next time the scene connects.\n\t        // The scene may re-connect later, as its session was not necessarily discarded (see `application:didDiscardSceneSessions` instead).\n\t    }\n\t\n\t    func sceneDidBecomeActive(_ scene: UIScene) {\n\t        // Called when the scene has moved from an inactive state to an active state.\n\t        // Use this method to restart any tasks that were paused (or not yet started) when the scene was inactive.\n\t    }\n\t\n\t    func sceneWillResignActive(_ scene: UIScene) {\n\t        // Called when the scene will move from an active state to an inactive state.\n\t        // This may occur due to temporary interruptions (ex. an incoming phone call).\n\t    }\n\t\n\t    func sceneWillEnterForeground(_ scene: UIScene) {\n\t        // Called as the scene transitions from the background to the foreground.\n\t        // Use this method to undo the changes made on entering the background.\n\t    }\n\t\n\t    func sceneDidEnterBackground(_ scene: UIScene) {\n\t        // Called as the scene transitions from the foreground to the background.\n\t        // Use this method to save data, release shared resources, and store enough scene-specific state information\n\t        // to restore the scene back to its current state.\n\t    }\n\t\n\t\n\t}\n\t```\n2. `scene`メソッド内に以下のコードのコードを追記します\n\t- この時、`guard let _ =`の`_`の部分を`window`に変更しています。\n\n\t```swift\n\tfunc scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {\n\t\t// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.\n\t\t// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.\n\t\t// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).\n\t\tguard let windowScene = (scene as? UIWindowScene) else { return }\n\n\t\twindow = UIWindow(windowScene: windowScene)\n\t\tlet storybard = UIStoryboard(name: \"Main\",bundle: nil)\n  \t\n\t\t//  初めて起動しているか\n\t\tif(lanchIsFIrstTme()){\n\t\t    window?.rootViewController = storybard.instantiateViewController(identifier: \"FirstView\")\n\t\t    firstLanch()\n\t\t}else{\n\t\t    window?.rootViewController = storybard.instantiateViewController(identifier: \"SecondView\")\n\t\t}\n\t\t\n\t\twindow?.makeKeyAndVisible()\n\t}\n\t```\n\n## 4. [おまけ]初回起動時のみ特定の画面を表示させる\n一つ前で実装した切り替え処理とユーザーデフォルト機能を組み合わせて、初回起動かどうかを判定する\n\n- 確認用メソッドと登録用メソッドを作成\n\t```swift\n\tprivate let STORED_KEY = \"lanched\"\n\t\n\tfunc firstLanch(){\n\t    return UserDefaults.standard.set(true,forKey: STORED_KEY)\n\t}\n\t\n\tfunc lanchIsFIrstTme() -> Bool{\n\t    return !UserDefaults.standard.bool(forKey: STORED_KEY)\n\t}\n\t```\n\n- 一つ前で実装したコードを改変\n\t```swift\n\tfunc scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {\n\t    // Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.\n\t    // If using a storyboard, the `window` property will automatically be initialized and attached to the scene.\n\t    // This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).\n\t    guard let windowScene = (scene as? UIWindowScene) else { return }\n\t\n\t    window = UIWindow(windowScene: windowScene)\n\t    let storybard = UIStoryboard(name: \"Main\",bundle: nil)\n\t    \n\t    //  初めて起動しているか\n\t    if(lanchIsFIrstTme()){\n\t        window?.rootViewController = storybard.instantiateViewController(identifier: \"FirstView\")\n\t        firstLanch()\n\t    }else{\n\t        window?.rootViewController = storybard.instantiateViewController(identifier: \"SecondView\")\n\t    }\n\t    \n\t    window?.makeKeyAndVisible()\n\t}\n\t```\n### こんな感じになればOK\n![最終確認](/2021/03/01/【Xcode】EntryPointを変更する方法/最終確認.gif \"最終確認\")\n## 参考\nhttps://stackoverflow.com/questions/10428629/programmatically-set-the-initial-view-controller-using-storyboards/47691073\n","source":"_posts/【Xcode】EntryPointを変更する方法.md","raw":"---\ntitle: 【Xcode】EntryPointを変更する方法\ndate: 2021-03-01 22:59:11\ntags:\n- Xcode\n- Swift\n---\n## もくじ\n0. 環境\n1. Entry Pointとは\n2. StoryBordから変更する\n3. コードから変更する\n4. [おまけ]初回起動時のみ特定の画面を表示させる\n\n## 0. 環境\n- MacBook Air M1\n- Xcode 12.4\n\n## 1. Entry Pointとは\n- プログラムの開始される位置\n- この記事では開始される画面の位置も含まれる\n### 画面上で見ると以下の画像の矢印部分がEntry Pointを表している\n![EntryPointの矢印](/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPointの矢印.png \"EntryPointの矢印\")\n\n### アシスタントエディタで確認すると以下赤枠部分\n![EntryPointのアシスタントエリアでの表示](/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPointのアシスタントエリアでの表示.png \"EntryPointのアシスタントエリアでの表示\")\n\n## 2. StoryBordから変更する\n\n### ドラックアンドドロップで矢印を移動させる\n![EntryPoint変更(マウス).gif](/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPoint変更(マウス).gif \"EntryPoint変更(マウス)\")\n\n### Utilites areaから移動させる\n`Attributes inspector内`の`Is Initial View Controller`にチェクを入れる\n![EntryPoint変更(Inspector)](/2021/03/01/【Xcode】EntryPointを変更する方法/EntryPoint変更(Inspector).gif \"EntryPoint変更(Inspector)\")\n \n## 3. コードから変更する\n### 1. Main.storybordの遷移させたいViewControllerに`Storyboad ID`を設定する\n- `Identity Inspector` 内の`Sotryboard ID`を設定\n\n![Inspector.png](/2021/03/01/【Xcode】EntryPointを変更する方法/Inspector.png \"Inspector.png\")\n\n- 今回はこのように設定\n\t- 1画面目 : FirstView\n\t- 2画面目 : SecondView\n\n### 2. SceneDelegate.swift\n1. 何も変更していないデフォルトの状態だとこのようなコードになっていると思います\n\t```swift\n\timport UIKit\n\t\n\tclass SceneDelegate: UIResponder, UIWindowSceneDelegate {\n\t\n\t    var window: UIWindow?\n\t\n\t\n\t    func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {\n\t        // Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.\n\t        // If using a storyboard, the `window` property will automatically be initialized and attached to the scene.\n\t        // This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).\n\t        guard let _ = (scene as? UIWindowScene) else { return }\n\t    }\n\t\n\t    func sceneDidDisconnect(_ scene: UIScene) {\n\t        // Called as the scene is being released by the system.\n\t        // This occurs shortly after the scene enters the background, or when its session is discarded.\n\t        // Release any resources associated with this scene that can be re-created the next time the scene connects.\n\t        // The scene may re-connect later, as its session was not necessarily discarded (see `application:didDiscardSceneSessions` instead).\n\t    }\n\t\n\t    func sceneDidBecomeActive(_ scene: UIScene) {\n\t        // Called when the scene has moved from an inactive state to an active state.\n\t        // Use this method to restart any tasks that were paused (or not yet started) when the scene was inactive.\n\t    }\n\t\n\t    func sceneWillResignActive(_ scene: UIScene) {\n\t        // Called when the scene will move from an active state to an inactive state.\n\t        // This may occur due to temporary interruptions (ex. an incoming phone call).\n\t    }\n\t\n\t    func sceneWillEnterForeground(_ scene: UIScene) {\n\t        // Called as the scene transitions from the background to the foreground.\n\t        // Use this method to undo the changes made on entering the background.\n\t    }\n\t\n\t    func sceneDidEnterBackground(_ scene: UIScene) {\n\t        // Called as the scene transitions from the foreground to the background.\n\t        // Use this method to save data, release shared resources, and store enough scene-specific state information\n\t        // to restore the scene back to its current state.\n\t    }\n\t\n\t\n\t}\n\t```\n2. `scene`メソッド内に以下のコードのコードを追記します\n\t- この時、`guard let _ =`の`_`の部分を`window`に変更しています。\n\n\t```swift\n\tfunc scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {\n\t\t// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.\n\t\t// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.\n\t\t// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).\n\t\tguard let windowScene = (scene as? UIWindowScene) else { return }\n\n\t\twindow = UIWindow(windowScene: windowScene)\n\t\tlet storybard = UIStoryboard(name: \"Main\",bundle: nil)\n  \t\n\t\t//  初めて起動しているか\n\t\tif(lanchIsFIrstTme()){\n\t\t    window?.rootViewController = storybard.instantiateViewController(identifier: \"FirstView\")\n\t\t    firstLanch()\n\t\t}else{\n\t\t    window?.rootViewController = storybard.instantiateViewController(identifier: \"SecondView\")\n\t\t}\n\t\t\n\t\twindow?.makeKeyAndVisible()\n\t}\n\t```\n\n## 4. [おまけ]初回起動時のみ特定の画面を表示させる\n一つ前で実装した切り替え処理とユーザーデフォルト機能を組み合わせて、初回起動かどうかを判定する\n\n- 確認用メソッドと登録用メソッドを作成\n\t```swift\n\tprivate let STORED_KEY = \"lanched\"\n\t\n\tfunc firstLanch(){\n\t    return UserDefaults.standard.set(true,forKey: STORED_KEY)\n\t}\n\t\n\tfunc lanchIsFIrstTme() -> Bool{\n\t    return !UserDefaults.standard.bool(forKey: STORED_KEY)\n\t}\n\t```\n\n- 一つ前で実装したコードを改変\n\t```swift\n\tfunc scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {\n\t    // Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.\n\t    // If using a storyboard, the `window` property will automatically be initialized and attached to the scene.\n\t    // This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).\n\t    guard let windowScene = (scene as? UIWindowScene) else { return }\n\t\n\t    window = UIWindow(windowScene: windowScene)\n\t    let storybard = UIStoryboard(name: \"Main\",bundle: nil)\n\t    \n\t    //  初めて起動しているか\n\t    if(lanchIsFIrstTme()){\n\t        window?.rootViewController = storybard.instantiateViewController(identifier: \"FirstView\")\n\t        firstLanch()\n\t    }else{\n\t        window?.rootViewController = storybard.instantiateViewController(identifier: \"SecondView\")\n\t    }\n\t    \n\t    window?.makeKeyAndVisible()\n\t}\n\t```\n### こんな感じになればOK\n![最終確認](/2021/03/01/【Xcode】EntryPointを変更する方法/最終確認.gif \"最終確認\")\n## 参考\nhttps://stackoverflow.com/questions/10428629/programmatically-set-the-initial-view-controller-using-storyboards/47691073\n","slug":"【Xcode】EntryPointを変更する方法","published":1,"updated":"2021-03-01T14:10:05.846Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3cp003rmzb65lub9esd","content":"<h2><span id=\"もくじ\">もくじ</span></h2><ol start=\"0\">\n<li>環境</li>\n<li>Entry Pointとは</li>\n<li>StoryBordから変更する</li>\n<li>コードから変更する</li>\n<li>[おまけ]初回起動時のみ特定の画面を表示させる</li>\n</ol>\n<h2><span id=\"0-環境\">0. 環境</span></h2><ul>\n<li>MacBook Air M1</li>\n<li>Xcode 12.4</li>\n</ul>\n<h2><span id=\"1-entry-pointとは\">1. Entry Pointとは</span></h2><ul>\n<li>プログラムの開始される位置</li>\n<li>この記事では開始される画面の位置も含まれる<h3><span id=\"画面上で見ると以下の画像の矢印部分がentry-pointを表している\">画面上で見ると以下の画像の矢印部分がEntry Pointを表している</span></h3><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/EntryPoint%E3%81%AE%E7%9F%A2%E5%8D%B0.png\" alt=\"EntryPointの矢印\" title=\"EntryPointの矢印\"></li>\n</ul>\n<h3><span id=\"アシスタントエディタで確認すると以下赤枠部分\">アシスタントエディタで確認すると以下赤枠部分</span></h3><p><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/EntryPoint%E3%81%AE%E3%82%A2%E3%82%B7%E3%82%B9%E3%82%BF%E3%83%B3%E3%83%88%E3%82%A8%E3%83%AA%E3%82%A2%E3%81%A7%E3%81%AE%E8%A1%A8%E7%A4%BA.png\" alt=\"EntryPointのアシスタントエリアでの表示\" title=\"EntryPointのアシスタントエリアでの表示\"></p>\n<h2><span id=\"2-storybordから変更する\">2. StoryBordから変更する</span></h2><h3><span id=\"ドラックアンドドロップで矢印を移動させる\">ドラックアンドドロップで矢印を移動させる</span></h3><p><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/EntryPoint%E5%A4%89%E6%9B%B4(%E3%83%9E%E3%82%A6%E3%82%B9).gif\" alt=\"EntryPoint変更(マウス).gif\" title=\"EntryPoint変更(マウス)\"></p>\n<h3><span id=\"utilites-areaから移動させる\">Utilites areaから移動させる</span></h3><p><code>Attributes inspector内</code>の<code>Is Initial View Controller</code>にチェクを入れる<br><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/EntryPoint%E5%A4%89%E6%9B%B4(Inspector).gif\" alt=\"EntryPoint変更(Inspector)\" title=\"EntryPoint変更(Inspector)\"></p>\n<h2><span id=\"3-コードから変更する\">3. コードから変更する</span></h2><h3><span id=\"1-mainstorybordの遷移させたいviewcontrollerにstoryboad-idを設定する\">1. Main.storybordの遷移させたいViewControllerに<code>Storyboad ID</code>を設定する</span></h3><ul>\n<li><code>Identity Inspector</code> 内の<code>Sotryboard ID</code>を設定</li>\n</ul>\n<p><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/Inspector.png\" alt=\"Inspector.png\" title=\"Inspector.png\"></p>\n<ul>\n<li>今回はこのように設定<ul>\n<li>1画面目 : FirstView</li>\n<li>2画面目 : SecondView</li>\n</ul>\n</li>\n</ul>\n<h3><span id=\"2-scenedelegateswift\">2. SceneDelegate.swift</span></h3><ol>\n<li><p>何も変更していないデフォルトの状態だとこのようなコードになっていると思います</p>\n <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SceneDelegate</span>: <span class=\"title\">UIResponder</span>, <span class=\"title\">UIWindowSceneDelegate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> window: <span class=\"type\">UIWindow</span>?</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">scene</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.</span></span><br><span class=\"line\">        <span class=\"comment\">// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.</span></span><br><span class=\"line\">        <span class=\"comment\">// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).</span></span><br><span class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> <span class=\"keyword\">_</span> <span class=\"operator\">=</span> (scene <span class=\"keyword\">as?</span> <span class=\"type\">UIWindowScene</span>) <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sceneDidDisconnect</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Called as the scene is being released by the system.</span></span><br><span class=\"line\">        <span class=\"comment\">// This occurs shortly after the scene enters the background, or when its session is discarded.</span></span><br><span class=\"line\">        <span class=\"comment\">// Release any resources associated with this scene that can be re-created the next time the scene connects.</span></span><br><span class=\"line\">        <span class=\"comment\">// The scene may re-connect later, as its session was not necessarily discarded (see `application:didDiscardSceneSessions` instead).</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sceneDidBecomeActive</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Called when the scene has moved from an inactive state to an active state.</span></span><br><span class=\"line\">        <span class=\"comment\">// Use this method to restart any tasks that were paused (or not yet started) when the scene was inactive.</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sceneWillResignActive</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Called when the scene will move from an active state to an inactive state.</span></span><br><span class=\"line\">        <span class=\"comment\">// This may occur due to temporary interruptions (ex. an incoming phone call).</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sceneWillEnterForeground</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Called as the scene transitions from the background to the foreground.</span></span><br><span class=\"line\">        <span class=\"comment\">// Use this method to undo the changes made on entering the background.</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sceneDidEnterBackground</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Called as the scene transitions from the foreground to the background.</span></span><br><span class=\"line\">        <span class=\"comment\">// Use this method to save data, release shared resources, and store enough scene-specific state information</span></span><br><span class=\"line\">        <span class=\"comment\">// to restore the scene back to its current state.</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p><code>scene</code>メソッド内に以下のコードのコードを追記します</p>\n<ul>\n<li><p>この時、<code>guard let _ =</code>の<code>_</code>の部分を<code>window</code>に変更しています。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">scene</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.</span></span><br><span class=\"line\">\t<span class=\"comment\">// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.</span></span><br><span class=\"line\">\t<span class=\"comment\">// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).</span></span><br><span class=\"line\">\t<span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> windowScene <span class=\"operator\">=</span> (scene <span class=\"keyword\">as?</span> <span class=\"type\">UIWindowScene</span>) <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\twindow <span class=\"operator\">=</span> <span class=\"type\">UIWindow</span>(windowScene: windowScene)</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> storybard <span class=\"operator\">=</span> <span class=\"type\">UIStoryboard</span>(name: <span class=\"string\">&quot;Main&quot;</span>,bundle: <span class=\"literal\">nil</span>)</span><br><span class=\"line\"> \t</span><br><span class=\"line\">\t<span class=\"comment\">//  初めて起動しているか</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(lanchIsFIrstTme())&#123;</span><br><span class=\"line\">\t    window<span class=\"operator\">?</span>.rootViewController <span class=\"operator\">=</span> storybard.instantiateViewController(identifier: <span class=\"string\">&quot;FirstView&quot;</span>)</span><br><span class=\"line\">\t    firstLanch()</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t    window<span class=\"operator\">?</span>.rootViewController <span class=\"operator\">=</span> storybard.instantiateViewController(identifier: <span class=\"string\">&quot;SecondView&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\twindow<span class=\"operator\">?</span>.makeKeyAndVisible()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"4-おまけ初回起動時のみ特定の画面を表示させる\">4. [おまけ]初回起動時のみ特定の画面を表示させる</span></h2><p>一つ前で実装した切り替え処理とユーザーデフォルト機能を組み合わせて、初回起動かどうかを判定する</p>\n</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>確認用メソッドと登録用メソッドを作成  <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">let</span> <span class=\"type\">STORED_KEY</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;lanched&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">firstLanch</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">UserDefaults</span>.standard.set(<span class=\"literal\">true</span>,forKey: <span class=\"type\">STORED_KEY</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">lanchIsFIrstTme</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"operator\">!</span><span class=\"type\">UserDefaults</span>.standard.bool(forKey: <span class=\"type\">STORED_KEY</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>一つ前で実装したコードを改変  <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">scene</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.</span></span><br><span class=\"line\">    <span class=\"comment\">// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.</span></span><br><span class=\"line\">    <span class=\"comment\">// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).</span></span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> windowScene <span class=\"operator\">=</span> (scene <span class=\"keyword\">as?</span> <span class=\"type\">UIWindowScene</span>) <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    window <span class=\"operator\">=</span> <span class=\"type\">UIWindow</span>(windowScene: windowScene)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> storybard <span class=\"operator\">=</span> <span class=\"type\">UIStoryboard</span>(name: <span class=\"string\">&quot;Main&quot;</span>,bundle: <span class=\"literal\">nil</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//  初めて起動しているか</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lanchIsFIrstTme())&#123;</span><br><span class=\"line\">        window<span class=\"operator\">?</span>.rootViewController <span class=\"operator\">=</span> storybard.instantiateViewController(identifier: <span class=\"string\">&quot;FirstView&quot;</span>)</span><br><span class=\"line\">        firstLanch()</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        window<span class=\"operator\">?</span>.rootViewController <span class=\"operator\">=</span> storybard.instantiateViewController(identifier: <span class=\"string\">&quot;SecondView&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    window<span class=\"operator\">?</span>.makeKeyAndVisible()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"こんな感じになればok\">こんな感じになればOK</span></h3><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/%E6%9C%80%E7%B5%82%E7%A2%BA%E8%AA%8D.gif\" alt=\"最終確認\" title=\"最終確認\"><h2><span id=\"参考\">参考</span></h2><a href=\"https://stackoverflow.com/questions/10428629/programmatically-set-the-initial-view-controller-using-storyboards/47691073\">https://stackoverflow.com/questions/10428629/programmatically-set-the-initial-view-controller-using-storyboards/47691073</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"もくじ\"><a href=\"#もくじ\" class=\"headerlink\" title=\"もくじ\"></a>もくじ</h2><ol start=\"0\">\n<li>環境</li>\n<li>Entry Pointとは</li>\n<li>StoryBordから変更する</li>\n<li>コードから変更する</li>\n<li>[おまけ]初回起動時のみ特定の画面を表示させる</li>\n</ol>\n<h2 id=\"0-環境\"><a href=\"#0-環境\" class=\"headerlink\" title=\"0. 環境\"></a>0. 環境</h2><ul>\n<li>MacBook Air M1</li>\n<li>Xcode 12.4</li>\n</ul>\n<h2 id=\"1-Entry-Pointとは\"><a href=\"#1-Entry-Pointとは\" class=\"headerlink\" title=\"1. Entry Pointとは\"></a>1. Entry Pointとは</h2><ul>\n<li>プログラムの開始される位置</li>\n<li>この記事では開始される画面の位置も含まれる<h3 id=\"画面上で見ると以下の画像の矢印部分がEntry-Pointを表している\"><a href=\"#画面上で見ると以下の画像の矢印部分がEntry-Pointを表している\" class=\"headerlink\" title=\"画面上で見ると以下の画像の矢印部分がEntry Pointを表している\"></a>画面上で見ると以下の画像の矢印部分がEntry Pointを表している</h3><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/EntryPoint%E3%81%AE%E7%9F%A2%E5%8D%B0.png\" alt=\"EntryPointの矢印\" title=\"EntryPointの矢印\"></li>\n</ul>\n<h3 id=\"アシスタントエディタで確認すると以下赤枠部分\"><a href=\"#アシスタントエディタで確認すると以下赤枠部分\" class=\"headerlink\" title=\"アシスタントエディタで確認すると以下赤枠部分\"></a>アシスタントエディタで確認すると以下赤枠部分</h3><p><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/EntryPoint%E3%81%AE%E3%82%A2%E3%82%B7%E3%82%B9%E3%82%BF%E3%83%B3%E3%83%88%E3%82%A8%E3%83%AA%E3%82%A2%E3%81%A7%E3%81%AE%E8%A1%A8%E7%A4%BA.png\" alt=\"EntryPointのアシスタントエリアでの表示\" title=\"EntryPointのアシスタントエリアでの表示\"></p>\n<h2 id=\"2-StoryBordから変更する\"><a href=\"#2-StoryBordから変更する\" class=\"headerlink\" title=\"2. StoryBordから変更する\"></a>2. StoryBordから変更する</h2><h3 id=\"ドラックアンドドロップで矢印を移動させる\"><a href=\"#ドラックアンドドロップで矢印を移動させる\" class=\"headerlink\" title=\"ドラックアンドドロップで矢印を移動させる\"></a>ドラックアンドドロップで矢印を移動させる</h3><p><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/EntryPoint%E5%A4%89%E6%9B%B4(%E3%83%9E%E3%82%A6%E3%82%B9).gif\" alt=\"EntryPoint変更(マウス).gif\" title=\"EntryPoint変更(マウス)\"></p>\n<h3 id=\"Utilites-areaから移動させる\"><a href=\"#Utilites-areaから移動させる\" class=\"headerlink\" title=\"Utilites areaから移動させる\"></a>Utilites areaから移動させる</h3><p><code>Attributes inspector内</code>の<code>Is Initial View Controller</code>にチェクを入れる<br><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/EntryPoint%E5%A4%89%E6%9B%B4(Inspector).gif\" alt=\"EntryPoint変更(Inspector)\" title=\"EntryPoint変更(Inspector)\"></p>\n<h2 id=\"3-コードから変更する\"><a href=\"#3-コードから変更する\" class=\"headerlink\" title=\"3. コードから変更する\"></a>3. コードから変更する</h2><h3 id=\"1-Main-storybordの遷移させたいViewControllerにStoryboad-IDを設定する\"><a href=\"#1-Main-storybordの遷移させたいViewControllerにStoryboad-IDを設定する\" class=\"headerlink\" title=\"1. Main.storybordの遷移させたいViewControllerにStoryboad IDを設定する\"></a>1. Main.storybordの遷移させたいViewControllerに<code>Storyboad ID</code>を設定する</h3><ul>\n<li><code>Identity Inspector</code> 内の<code>Sotryboard ID</code>を設定</li>\n</ul>\n<p><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/Inspector.png\" alt=\"Inspector.png\" title=\"Inspector.png\"></p>\n<ul>\n<li>今回はこのように設定<ul>\n<li>1画面目 : FirstView</li>\n<li>2画面目 : SecondView</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-SceneDelegate-swift\"><a href=\"#2-SceneDelegate-swift\" class=\"headerlink\" title=\"2. SceneDelegate.swift\"></a>2. SceneDelegate.swift</h3><ol>\n<li><p>何も変更していないデフォルトの状態だとこのようなコードになっていると思います</p>\n <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SceneDelegate</span>: <span class=\"title\">UIResponder</span>, <span class=\"title\">UIWindowSceneDelegate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> window: <span class=\"type\">UIWindow</span>?</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">scene</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.</span></span><br><span class=\"line\">        <span class=\"comment\">// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.</span></span><br><span class=\"line\">        <span class=\"comment\">// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).</span></span><br><span class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> <span class=\"keyword\">_</span> <span class=\"operator\">=</span> (scene <span class=\"keyword\">as?</span> <span class=\"type\">UIWindowScene</span>) <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sceneDidDisconnect</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Called as the scene is being released by the system.</span></span><br><span class=\"line\">        <span class=\"comment\">// This occurs shortly after the scene enters the background, or when its session is discarded.</span></span><br><span class=\"line\">        <span class=\"comment\">// Release any resources associated with this scene that can be re-created the next time the scene connects.</span></span><br><span class=\"line\">        <span class=\"comment\">// The scene may re-connect later, as its session was not necessarily discarded (see `application:didDiscardSceneSessions` instead).</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sceneDidBecomeActive</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Called when the scene has moved from an inactive state to an active state.</span></span><br><span class=\"line\">        <span class=\"comment\">// Use this method to restart any tasks that were paused (or not yet started) when the scene was inactive.</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sceneWillResignActive</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Called when the scene will move from an active state to an inactive state.</span></span><br><span class=\"line\">        <span class=\"comment\">// This may occur due to temporary interruptions (ex. an incoming phone call).</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sceneWillEnterForeground</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Called as the scene transitions from the background to the foreground.</span></span><br><span class=\"line\">        <span class=\"comment\">// Use this method to undo the changes made on entering the background.</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sceneDidEnterBackground</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Called as the scene transitions from the foreground to the background.</span></span><br><span class=\"line\">        <span class=\"comment\">// Use this method to save data, release shared resources, and store enough scene-specific state information</span></span><br><span class=\"line\">        <span class=\"comment\">// to restore the scene back to its current state.</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p><code>scene</code>メソッド内に以下のコードのコードを追記します</p>\n<ul>\n<li><p>この時、<code>guard let _ =</code>の<code>_</code>の部分を<code>window</code>に変更しています。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">scene</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.</span></span><br><span class=\"line\">\t<span class=\"comment\">// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.</span></span><br><span class=\"line\">\t<span class=\"comment\">// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).</span></span><br><span class=\"line\">\t<span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> windowScene <span class=\"operator\">=</span> (scene <span class=\"keyword\">as?</span> <span class=\"type\">UIWindowScene</span>) <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\twindow <span class=\"operator\">=</span> <span class=\"type\">UIWindow</span>(windowScene: windowScene)</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> storybard <span class=\"operator\">=</span> <span class=\"type\">UIStoryboard</span>(name: <span class=\"string\">&quot;Main&quot;</span>,bundle: <span class=\"literal\">nil</span>)</span><br><span class=\"line\"> \t</span><br><span class=\"line\">\t<span class=\"comment\">//  初めて起動しているか</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(lanchIsFIrstTme())&#123;</span><br><span class=\"line\">\t    window<span class=\"operator\">?</span>.rootViewController <span class=\"operator\">=</span> storybard.instantiateViewController(identifier: <span class=\"string\">&quot;FirstView&quot;</span>)</span><br><span class=\"line\">\t    firstLanch()</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t    window<span class=\"operator\">?</span>.rootViewController <span class=\"operator\">=</span> storybard.instantiateViewController(identifier: <span class=\"string\">&quot;SecondView&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\twindow<span class=\"operator\">?</span>.makeKeyAndVisible()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-おまけ-初回起動時のみ特定の画面を表示させる\"><a href=\"#4-おまけ-初回起動時のみ特定の画面を表示させる\" class=\"headerlink\" title=\"4. [おまけ]初回起動時のみ特定の画面を表示させる\"></a>4. [おまけ]初回起動時のみ特定の画面を表示させる</h2><p>一つ前で実装した切り替え処理とユーザーデフォルト機能を組み合わせて、初回起動かどうかを判定する</p>\n</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>確認用メソッドと登録用メソッドを作成  <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">let</span> <span class=\"type\">STORED_KEY</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;lanched&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">firstLanch</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">UserDefaults</span>.standard.set(<span class=\"literal\">true</span>,forKey: <span class=\"type\">STORED_KEY</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">lanchIsFIrstTme</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"operator\">!</span><span class=\"type\">UserDefaults</span>.standard.bool(forKey: <span class=\"type\">STORED_KEY</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>一つ前で実装したコードを改変  <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">scene</span><span class=\"params\">(<span class=\"keyword\">_</span> scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.</span></span><br><span class=\"line\">    <span class=\"comment\">// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.</span></span><br><span class=\"line\">    <span class=\"comment\">// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).</span></span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> windowScene <span class=\"operator\">=</span> (scene <span class=\"keyword\">as?</span> <span class=\"type\">UIWindowScene</span>) <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    window <span class=\"operator\">=</span> <span class=\"type\">UIWindow</span>(windowScene: windowScene)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> storybard <span class=\"operator\">=</span> <span class=\"type\">UIStoryboard</span>(name: <span class=\"string\">&quot;Main&quot;</span>,bundle: <span class=\"literal\">nil</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//  初めて起動しているか</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lanchIsFIrstTme())&#123;</span><br><span class=\"line\">        window<span class=\"operator\">?</span>.rootViewController <span class=\"operator\">=</span> storybard.instantiateViewController(identifier: <span class=\"string\">&quot;FirstView&quot;</span>)</span><br><span class=\"line\">        firstLanch()</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        window<span class=\"operator\">?</span>.rootViewController <span class=\"operator\">=</span> storybard.instantiateViewController(identifier: <span class=\"string\">&quot;SecondView&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    window<span class=\"operator\">?</span>.makeKeyAndVisible()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"こんな感じになればOK\"><a href=\"#こんな感じになればOK\" class=\"headerlink\" title=\"こんな感じになればOK\"></a>こんな感じになればOK</h3><img src=\"/2021/03/01/%E3%80%90Xcode%E3%80%91EntryPoint%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/%E6%9C%80%E7%B5%82%E7%A2%BA%E8%AA%8D.gif\" alt=\"最終確認\" title=\"最終確認\"><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><a href=\"https://stackoverflow.com/questions/10428629/programmatically-set-the-initial-view-controller-using-storyboards/47691073\">https://stackoverflow.com/questions/10428629/programmatically-set-the-initial-view-controller-using-storyboards/47691073</a></li>\n</ul>\n"},{"title":"インラインCSSと内部CSSいついて","date":"2021-03-02T15:12:06.000Z","_content":"# 1.インラインCSS : body内の各種タグの中に記述する\n- 一つ一つのタグに設定する必要がある\n- インラインCSSと呼ばれる書き方で、直接タグの中で`style`属性を指定する\n\t```html\n\tstyle=属性:\"属性値\"\n\t```\n- `color属性`で色を変える例\n\t```html\n\t<p style=\"color:blue\">今回は、新しくリリースするプロダクトの紹介をします</p>\n\t```\n\n- `複数の属性指定`したい場合、`;`を入力することで指定できる\n\t```html\n\t<p style=\"color:blue;font-size:300%\">今回は、新しくリリースするプロダクトの紹介をします</p>\n\t```\n# 2.内部CSS : headタグ内に記述する\n- `head`タグの内部に記述するCSS\n- 具体的には`head`ブロック内に`style`ブロックを作成し、そこにスタイルを記述する\n```html\n<html>\n <head>\n  <style>\n   <!--ここにスタイルを記述する-->\n  </style>\t\n </head>\n <body>\n\n </body>\n</html>\n```\n\n## スタイルの記述には２通りの方法がある\n1. タグ全体に適応する\n2. 指定した領域のみに適応する\n\n## 1. タグ全体に適応する\n- `style`ブロック内に`タグ名`のブロックを作り、そこにスタイルを記述する\n- 複数のスタイルを記述する場合、`;`で区切る\n```html\n<style>\n<!--pタグ内の全てのテキストにここに記述したレイアウトが適応される-->\n p{\t\n  color:blue;\n  font-size:150%;\n }\n</style>\n```\n\n## 2. 指定した領域のみに適応する\n1. `class`属性を使用する\n\t- 複数のタグに適応できる\n2. `id`属性を使用する\n\t- １つのタグのみに適応できる\n3. `span`属性を使用する\n\t- 特定の文字列適応する\n\n### 1. `class`属性を使用する\n- `class`属性にクラス名を指定し、`style`ブロックに`.クラス名`でスタイルを記述する\t\n- 同一のクラス名を他のタグにも割り当てることができる\n```html\n<html>\n <head>\n  <style>\n   .A{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1 class=\"A\">クラスでスタイルを指定しています</p>\n  <p class=\"A\">クラスでスタイルを指定しています</p>\n  <p> クラス名を指定していません</p>\n </body>\n</html>\n```\n\n###  2. `id`属性を使用する\n- `id`属性を定義してid名を指定して、`style`ブロックに`#id名`でスタイルを記述する\t\n- 1つのタグにしか適応できない\n```html\n<html>\n <head>\n  <style>\n   #B{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1 id=\"B\">クラスでスタイルを指定しています</p>\n  <p><クラス名を指定していません/p>\n  <p> クラス名を指定していません</p>\n </body>\n</html>\n```\n\n### 3. `span`属性を使用する\n- `span`タグ(\\<span\\>\\</span\\>)を定義して`class`属性にクラス名を指定して、`style`ブロックに`.クラス名`でスタイルを記述する\n- `class` `id`との違いは、タグに対するレイアウトではなく、文字列に対するレイアウトである点\n```html\n<html>\n <head>\n  <style>\n   .C{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1>クラスでスタイルを指定しています</p>\n  <p>クラス名を<span class=\"C\">指定</span>していません</p>\n  <p>クラス名を指定していません</p>\n </body>\n</html>\n```\n\n","source":"_posts/インラインCSSと内部CSSいついて.md","raw":"---\ntitle: インラインCSSと内部CSSいついて\ndate: 2021-03-03 00:12:06\ntags:\n- CSS\n---\n# 1.インラインCSS : body内の各種タグの中に記述する\n- 一つ一つのタグに設定する必要がある\n- インラインCSSと呼ばれる書き方で、直接タグの中で`style`属性を指定する\n\t```html\n\tstyle=属性:\"属性値\"\n\t```\n- `color属性`で色を変える例\n\t```html\n\t<p style=\"color:blue\">今回は、新しくリリースするプロダクトの紹介をします</p>\n\t```\n\n- `複数の属性指定`したい場合、`;`を入力することで指定できる\n\t```html\n\t<p style=\"color:blue;font-size:300%\">今回は、新しくリリースするプロダクトの紹介をします</p>\n\t```\n# 2.内部CSS : headタグ内に記述する\n- `head`タグの内部に記述するCSS\n- 具体的には`head`ブロック内に`style`ブロックを作成し、そこにスタイルを記述する\n```html\n<html>\n <head>\n  <style>\n   <!--ここにスタイルを記述する-->\n  </style>\t\n </head>\n <body>\n\n </body>\n</html>\n```\n\n## スタイルの記述には２通りの方法がある\n1. タグ全体に適応する\n2. 指定した領域のみに適応する\n\n## 1. タグ全体に適応する\n- `style`ブロック内に`タグ名`のブロックを作り、そこにスタイルを記述する\n- 複数のスタイルを記述する場合、`;`で区切る\n```html\n<style>\n<!--pタグ内の全てのテキストにここに記述したレイアウトが適応される-->\n p{\t\n  color:blue;\n  font-size:150%;\n }\n</style>\n```\n\n## 2. 指定した領域のみに適応する\n1. `class`属性を使用する\n\t- 複数のタグに適応できる\n2. `id`属性を使用する\n\t- １つのタグのみに適応できる\n3. `span`属性を使用する\n\t- 特定の文字列適応する\n\n### 1. `class`属性を使用する\n- `class`属性にクラス名を指定し、`style`ブロックに`.クラス名`でスタイルを記述する\t\n- 同一のクラス名を他のタグにも割り当てることができる\n```html\n<html>\n <head>\n  <style>\n   .A{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1 class=\"A\">クラスでスタイルを指定しています</p>\n  <p class=\"A\">クラスでスタイルを指定しています</p>\n  <p> クラス名を指定していません</p>\n </body>\n</html>\n```\n\n###  2. `id`属性を使用する\n- `id`属性を定義してid名を指定して、`style`ブロックに`#id名`でスタイルを記述する\t\n- 1つのタグにしか適応できない\n```html\n<html>\n <head>\n  <style>\n   #B{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1 id=\"B\">クラスでスタイルを指定しています</p>\n  <p><クラス名を指定していません/p>\n  <p> クラス名を指定していません</p>\n </body>\n</html>\n```\n\n### 3. `span`属性を使用する\n- `span`タグ(\\<span\\>\\</span\\>)を定義して`class`属性にクラス名を指定して、`style`ブロックに`.クラス名`でスタイルを記述する\n- `class` `id`との違いは、タグに対するレイアウトではなく、文字列に対するレイアウトである点\n```html\n<html>\n <head>\n  <style>\n   .C{\n    color:blue;\n    font-size:150%;\n    }\n  </style>\t\n </head>\n <body>\n  <h1>クラスでスタイルを指定しています</p>\n  <p>クラス名を<span class=\"C\">指定</span>していません</p>\n  <p>クラス名を指定していません</p>\n </body>\n</html>\n```\n\n","slug":"インラインCSSと内部CSSいついて","published":1,"updated":"2021-03-02T15:12:19.351Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3cq003tmzb6hnpb224p","content":"<h1><span id=\"1インラインcss-body内の各種タグの中に記述する\">1.インラインCSS : body内の各種タグの中に記述する</span></h1><ul>\n<li>一つ一つのタグに設定する必要がある</li>\n<li>インラインCSSと呼ばれる書き方で、直接タグの中で<code>style</code>属性を指定する  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">style=属性:&quot;属性値&quot;</span><br></pre></td></tr></table></figure></li>\n<li><code>color属性</code>で色を変える例  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:blue&quot;</span>&gt;</span>今回は、新しくリリースするプロダクトの紹介をします<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><code>複数の属性指定</code>したい場合、<code>;</code>を入力することで指定できる  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:blue;font-size:300%&quot;</span>&gt;</span>今回は、新しくリリースするプロダクトの紹介をします<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"2内部css-headタグ内に記述する\">2.内部CSS : headタグ内に記述する</span></h1></li>\n<li><code>head</code>タグの内部に記述するCSS</li>\n<li>具体的には<code>head</code>ブロック内に<code>style</code>ブロックを作成し、そこにスタイルを記述する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"comment\">&lt;!--ここにスタイルを記述する--&gt;</span></span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"スタイルの記述には2通りの方法がある\">スタイルの記述には２通りの方法がある</span></h2></li>\n</ul>\n<ol>\n<li>タグ全体に適応する</li>\n<li>指定した領域のみに適応する</li>\n</ol>\n<h2><span id=\"1-タグ全体に適応する\">1. タグ全体に適応する</span></h2><ul>\n<li><code>style</code>ブロック内に<code>タグ名</code>のブロックを作り、そこにスタイルを記述する</li>\n<li>複数のスタイルを記述する場合、<code>;</code>で区切る<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--pタグ内の全てのテキストにここに記述したレイアウトが適応される--&gt;</span></span></span><br><span class=\"line\"> p&#123;\t</span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"2-指定した領域のみに適応する\">2. 指定した領域のみに適応する</span></h2></li>\n</ul>\n<ol>\n<li><code>class</code>属性を使用する<ul>\n<li>複数のタグに適応できる</li>\n</ul>\n</li>\n<li><code>id</code>属性を使用する<ul>\n<li>１つのタグのみに適応できる</li>\n</ul>\n</li>\n<li><code>span</code>属性を使用する<ul>\n<li>特定の文字列適応する</li>\n</ul>\n</li>\n</ol>\n<h3><span id=\"1-class属性を使用する\">1. <code>class</code>属性を使用する</span></h3><ul>\n<li><code>class</code>属性にクラス名を指定し、<code>style</code>ブロックに<code>.クラス名</code>でスタイルを記述する    </li>\n<li>同一のクラス名を他のタグにも割り当てることができる<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-class\">.A</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;A&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;A&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"2-id属性を使用する\">2. <code>id</code>属性を使用する</span></h3></li>\n<li><code>id</code>属性を定義してid名を指定して、<code>style</code>ブロックに<code>#id名</code>でスタイルを記述する    </li>\n<li>1つのタグにしか適応できない<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-id\">#B</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;B&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&lt;クラス名を指定していません/p&gt;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"3-span属性を使用する\">3. <code>span</code>属性を使用する</span></h3></li>\n<li><code>span</code>タグ(&lt;span&gt;&lt;/span&gt;)を定義して<code>class</code>属性にクラス名を指定して、<code>style</code>ブロックに<code>.クラス名</code>でスタイルを記述する</li>\n<li><code>class</code> <code>id</code>との違いは、タグに対するレイアウトではなく、文字列に対するレイアウトである点<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-class\">.C</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>クラス名を<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;C&quot;</span>&gt;</span>指定<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-インラインCSS-body内の各種タグの中に記述する\"><a href=\"#1-インラインCSS-body内の各種タグの中に記述する\" class=\"headerlink\" title=\"1.インラインCSS : body内の各種タグの中に記述する\"></a>1.インラインCSS : body内の各種タグの中に記述する</h1><ul>\n<li>一つ一つのタグに設定する必要がある</li>\n<li>インラインCSSと呼ばれる書き方で、直接タグの中で<code>style</code>属性を指定する  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">style=属性:&quot;属性値&quot;</span><br></pre></td></tr></table></figure></li>\n<li><code>color属性</code>で色を変える例  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:blue&quot;</span>&gt;</span>今回は、新しくリリースするプロダクトの紹介をします<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><code>複数の属性指定</code>したい場合、<code>;</code>を入力することで指定できる  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:blue;font-size:300%&quot;</span>&gt;</span>今回は、新しくリリースするプロダクトの紹介をします<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"2-内部CSS-headタグ内に記述する\"><a href=\"#2-内部CSS-headタグ内に記述する\" class=\"headerlink\" title=\"2.内部CSS : headタグ内に記述する\"></a>2.内部CSS : headタグ内に記述する</h1></li>\n<li><code>head</code>タグの内部に記述するCSS</li>\n<li>具体的には<code>head</code>ブロック内に<code>style</code>ブロックを作成し、そこにスタイルを記述する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"comment\">&lt;!--ここにスタイルを記述する--&gt;</span></span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"スタイルの記述には２通りの方法がある\"><a href=\"#スタイルの記述には２通りの方法がある\" class=\"headerlink\" title=\"スタイルの記述には２通りの方法がある\"></a>スタイルの記述には２通りの方法がある</h2></li>\n</ul>\n<ol>\n<li>タグ全体に適応する</li>\n<li>指定した領域のみに適応する</li>\n</ol>\n<h2 id=\"1-タグ全体に適応する\"><a href=\"#1-タグ全体に適応する\" class=\"headerlink\" title=\"1. タグ全体に適応する\"></a>1. タグ全体に適応する</h2><ul>\n<li><code>style</code>ブロック内に<code>タグ名</code>のブロックを作り、そこにスタイルを記述する</li>\n<li>複数のスタイルを記述する場合、<code>;</code>で区切る<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--pタグ内の全てのテキストにここに記述したレイアウトが適応される--&gt;</span></span></span><br><span class=\"line\"> p&#123;\t</span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-指定した領域のみに適応する\"><a href=\"#2-指定した領域のみに適応する\" class=\"headerlink\" title=\"2. 指定した領域のみに適応する\"></a>2. 指定した領域のみに適応する</h2></li>\n</ul>\n<ol>\n<li><code>class</code>属性を使用する<ul>\n<li>複数のタグに適応できる</li>\n</ul>\n</li>\n<li><code>id</code>属性を使用する<ul>\n<li>１つのタグのみに適応できる</li>\n</ul>\n</li>\n<li><code>span</code>属性を使用する<ul>\n<li>特定の文字列適応する</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-class属性を使用する\"><a href=\"#1-class属性を使用する\" class=\"headerlink\" title=\"1. class属性を使用する\"></a>1. <code>class</code>属性を使用する</h3><ul>\n<li><code>class</code>属性にクラス名を指定し、<code>style</code>ブロックに<code>.クラス名</code>でスタイルを記述する    </li>\n<li>同一のクラス名を他のタグにも割り当てることができる<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-class\">.A</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;A&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;A&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-id属性を使用する\"><a href=\"#2-id属性を使用する\" class=\"headerlink\" title=\"2. id属性を使用する\"></a>2. <code>id</code>属性を使用する</h3></li>\n<li><code>id</code>属性を定義してid名を指定して、<code>style</code>ブロックに<code>#id名</code>でスタイルを記述する    </li>\n<li>1つのタグにしか適応できない<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-id\">#B</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;B&quot;</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&lt;クラス名を指定していません/p&gt;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-span属性を使用する\"><a href=\"#3-span属性を使用する\" class=\"headerlink\" title=\"3. span属性を使用する\"></a>3. <code>span</code>属性を使用する</h3></li>\n<li><code>span</code>タグ(&lt;span&gt;&lt;/span&gt;)を定義して<code>class</code>属性にクラス名を指定して、<code>style</code>ブロックに<code>.クラス名</code>でスタイルを記述する</li>\n<li><code>class</code> <code>id</code>との違いは、タグに対するレイアウトではなく、文字列に対するレイアウトである点<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">   <span class=\"selector-class\">.C</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span><span class=\"selector-pseudo\">:blue</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">font-size</span><span class=\"selector-pseudo\">:150</span>%;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\t</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>クラスでスタイルを指定しています<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>クラス名を<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;C&quot;</span>&gt;</span>指定<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>クラス名を指定していません<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"【Zsh】Zsh拡張フレームワーク「Prezto」","date":"2021-03-09T13:16:00.000Z","_content":"## 参考\n- https://github.com/sorin-ionescu/prezto\n- https://qiita.com/s_of_p/items/33c9b18f0dc47ce29024\n- https://qiita.com/yasudanaoya/items/8b928cfadbf702108ba3\n\n## インストール方法\n### 1. Zshを起動する\n```shell-session\n$ zsh\n```\n\n### 2. リポジトリをクローンする\n- `${ZDOTDIR:-$HOME}`とは？\n\t- `$ZDOTDIR` : `.zshrc`の保存場所を設定する環境変数\n\t- `$HOME` : ホームディレクトリ\n\t- `:-` : 左辺の値が設定されていor空文字列であれば、右辺に設定されてる値が使用される\n```shell-session\n$ git clone --recursive https://github.com/sorin-ionescu/prezto.git \"${ZDOTDIR:-$HOME}/.zprezto\"\n```\n\n### 3. 今まで使っていた設定ファイルを移動させる\n```shell-session\n$ mkdir zsh_orig && mv zshmv .zlogin .zlogout .zprofile .zshenv .zshrc zsh_orig\n```\n\n### 4. 各コンフィグファイルへのシンボリックリンクを作成する\n```shell-session\n$ setopt EXTENDED_GLOB\nfor rcfile in \"${ZDOTDIR:-$HOME}\"/.zprezto/runcoms/^README.md(.N); do\n  ln -s \"$rcfile\" \"${ZDOTDIR:-$HOME}/.${rcfile:t}\"\ndone\n```\n\n### 5. zshをデフォルトシェルに設定\n- chsh : ログインシェルを変更する\n```shell-session\n$ chsh -s /bin/zsh\n```\n\n## テーマの設定\n### テーマ一覧を見てみる\n```\n$ prompt -s\n```\n\n### テーマを設定する\n```\n$ prompt -s テーマ名\n```\n#### Macの場合\n`prompt -s`だと、そのセッションではテーマが変更されるが、再起動ログインし直すとデフォルトのテーマになってしまうので、設定`~/.zshrc`に追記しておく必要がある\n```\n$ prompt -s powerline\nSet and save not yet implemented.  Please ensure your ~/.zshrc\ncontains something similar to the following:\n\n  autoload -Uz promptinit\n  promptinit\n  prompt powerline\n```\n\n#### powerlineを使用する場合、特殊なフォントが必要\n1. 以下GitHubのリポジトリをダウンロード\nhttps://github.com/powerline/fonts\n\n- 適当なディレクトリに移動後\n\t```\n\tgit clone https://github.com/powerline/fonts.git\n\t```\n\n2. `install.sh`を叩く\n\t```\n\t$ cd fonts\n\t$ ./install.sh\n\t```\n\n3. 使用しているターミナルでフォントを設定\n- 文字列に`Powerline`が入っていれば使えるはず\n\n","source":"_posts/【Zsh】Zsh拡張フレームワーク「Prezto」.md","raw":"---\ntitle: 【Zsh】Zsh拡張フレームワーク「Prezto」\ndate: 2021-03-09 22:16:00\ntags:\n- Zsh\n---\n## 参考\n- https://github.com/sorin-ionescu/prezto\n- https://qiita.com/s_of_p/items/33c9b18f0dc47ce29024\n- https://qiita.com/yasudanaoya/items/8b928cfadbf702108ba3\n\n## インストール方法\n### 1. Zshを起動する\n```shell-session\n$ zsh\n```\n\n### 2. リポジトリをクローンする\n- `${ZDOTDIR:-$HOME}`とは？\n\t- `$ZDOTDIR` : `.zshrc`の保存場所を設定する環境変数\n\t- `$HOME` : ホームディレクトリ\n\t- `:-` : 左辺の値が設定されていor空文字列であれば、右辺に設定されてる値が使用される\n```shell-session\n$ git clone --recursive https://github.com/sorin-ionescu/prezto.git \"${ZDOTDIR:-$HOME}/.zprezto\"\n```\n\n### 3. 今まで使っていた設定ファイルを移動させる\n```shell-session\n$ mkdir zsh_orig && mv zshmv .zlogin .zlogout .zprofile .zshenv .zshrc zsh_orig\n```\n\n### 4. 各コンフィグファイルへのシンボリックリンクを作成する\n```shell-session\n$ setopt EXTENDED_GLOB\nfor rcfile in \"${ZDOTDIR:-$HOME}\"/.zprezto/runcoms/^README.md(.N); do\n  ln -s \"$rcfile\" \"${ZDOTDIR:-$HOME}/.${rcfile:t}\"\ndone\n```\n\n### 5. zshをデフォルトシェルに設定\n- chsh : ログインシェルを変更する\n```shell-session\n$ chsh -s /bin/zsh\n```\n\n## テーマの設定\n### テーマ一覧を見てみる\n```\n$ prompt -s\n```\n\n### テーマを設定する\n```\n$ prompt -s テーマ名\n```\n#### Macの場合\n`prompt -s`だと、そのセッションではテーマが変更されるが、再起動ログインし直すとデフォルトのテーマになってしまうので、設定`~/.zshrc`に追記しておく必要がある\n```\n$ prompt -s powerline\nSet and save not yet implemented.  Please ensure your ~/.zshrc\ncontains something similar to the following:\n\n  autoload -Uz promptinit\n  promptinit\n  prompt powerline\n```\n\n#### powerlineを使用する場合、特殊なフォントが必要\n1. 以下GitHubのリポジトリをダウンロード\nhttps://github.com/powerline/fonts\n\n- 適当なディレクトリに移動後\n\t```\n\tgit clone https://github.com/powerline/fonts.git\n\t```\n\n2. `install.sh`を叩く\n\t```\n\t$ cd fonts\n\t$ ./install.sh\n\t```\n\n3. 使用しているターミナルでフォントを設定\n- 文字列に`Powerline`が入っていれば使えるはず\n\n","slug":"【Zsh】Zsh拡張フレームワーク「Prezto」","published":1,"updated":"2021-03-09T13:16:10.307Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3cq003wmzb6hu9u3qjy","content":"<h2><span id=\"参考\">参考</span></h2><ul>\n<li><a href=\"https://github.com/sorin-ionescu/prezto\">https://github.com/sorin-ionescu/prezto</a></li>\n<li><a href=\"https://qiita.com/s_of_p/items/33c9b18f0dc47ce29024\">https://qiita.com/s_of_p/items/33c9b18f0dc47ce29024</a></li>\n<li><a href=\"https://qiita.com/yasudanaoya/items/8b928cfadbf702108ba3\">https://qiita.com/yasudanaoya/items/8b928cfadbf702108ba3</a></li>\n</ul>\n<h2><span id=\"インストール方法\">インストール方法</span></h2><h3><span id=\"1-zshを起動する\">1. Zshを起動する</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ zsh</span><br></pre></td></tr></table></figure>\n<h3><span id=\"2-リポジトリをクローンする\">2. リポジトリをクローンする</span></h3><ul>\n<li><code>$&#123;ZDOTDIR:-$HOME&#125;</code>とは？<ul>\n<li><code>$ZDOTDIR</code> : <code>.zshrc</code>の保存場所を設定する環境変数</li>\n<li><code>$HOME</code> : ホームディレクトリ</li>\n<li><code>:-</code> : 左辺の値が設定されていor空文字列であれば、右辺に設定されてる値が使用される<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone --recursive https:&#x2F;&#x2F;github.com&#x2F;sorin-ionescu&#x2F;prezto.git &quot;$&#123;ZDOTDIR:-$HOME&#125;&#x2F;.zprezto&quot;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"3-今まで使っていた設定ファイルを移動させる\">3. 今まで使っていた設定ファイルを移動させる</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir zsh_orig &amp;&amp; mv zshmv .zlogin .zlogout .zprofile .zshenv .zshrc zsh_orig</span><br></pre></td></tr></table></figure>\n<h3><span id=\"4-各コンフィグファイルへのシンボリックリンクを作成する\">4. 各コンフィグファイルへのシンボリックリンクを作成する</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ setopt EXTENDED_GLOB</span><br><span class=\"line\">for rcfile in &quot;$&#123;ZDOTDIR:-$HOME&#125;&quot;&#x2F;.zprezto&#x2F;runcoms&#x2F;^README.md(.N); do</span><br><span class=\"line\">  ln -s &quot;$rcfile&quot; &quot;$&#123;ZDOTDIR:-$HOME&#125;&#x2F;.$&#123;rcfile:t&#125;&quot;</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h3><span id=\"5-zshをデフォルトシェルに設定\">5. zshをデフォルトシェルに設定</span></h3></li>\n</ul>\n</li>\n<li>chsh : ログインシェルを変更する<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ chsh -s &#x2F;bin&#x2F;zsh</span><br></pre></td></tr></table></figure>\n<h2><span id=\"テーマの設定\">テーマの設定</span></h2><h3><span id=\"テーマ一覧を見てみる\">テーマ一覧を見てみる</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ prompt -s</span><br></pre></td></tr></table></figure>\n<h3><span id=\"テーマを設定する\">テーマを設定する</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ prompt -s テーマ名</span><br></pre></td></tr></table></figure>\n<h4><span id=\"macの場合\">Macの場合</span></h4><code>prompt -s</code>だと、そのセッションではテーマが変更されるが、再起動ログインし直すとデフォルトのテーマになってしまうので、設定<code>~/.zshrc</code>に追記しておく必要がある<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ prompt -s powerline</span><br><span class=\"line\">Set and save not yet implemented.  Please ensure your ~&#x2F;.zshrc</span><br><span class=\"line\">contains something similar to the following:</span><br><span class=\"line\"></span><br><span class=\"line\">  autoload -Uz promptinit</span><br><span class=\"line\">  promptinit</span><br><span class=\"line\">  prompt powerline</span><br></pre></td></tr></table></figure>\n<h4><span id=\"powerlineを使用する場合-特殊なフォントが必要\">powerlineを使用する場合、特殊なフォントが必要</span></h4></li>\n</ul>\n<ol>\n<li>以下GitHubのリポジトリをダウンロード<br><a href=\"https://github.com/powerline/fonts\">https://github.com/powerline/fonts</a></li>\n</ol>\n<ul>\n<li>適当なディレクトリに移動後  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;powerline&#x2F;fonts.git</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"2\">\n<li><code>install.sh</code>を叩く <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd fonts</span><br><span class=\"line\">$ .&#x2F;install.sh</span><br></pre></td></tr></table></figure></li>\n<li>使用しているターミナルでフォントを設定</li>\n</ol>\n<ul>\n<li>文字列に<code>Powerline</code>が入っていれば使えるはず</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://github.com/sorin-ionescu/prezto\">https://github.com/sorin-ionescu/prezto</a></li>\n<li><a href=\"https://qiita.com/s_of_p/items/33c9b18f0dc47ce29024\">https://qiita.com/s_of_p/items/33c9b18f0dc47ce29024</a></li>\n<li><a href=\"https://qiita.com/yasudanaoya/items/8b928cfadbf702108ba3\">https://qiita.com/yasudanaoya/items/8b928cfadbf702108ba3</a></li>\n</ul>\n<h2 id=\"インストール方法\"><a href=\"#インストール方法\" class=\"headerlink\" title=\"インストール方法\"></a>インストール方法</h2><h3 id=\"1-Zshを起動する\"><a href=\"#1-Zshを起動する\" class=\"headerlink\" title=\"1. Zshを起動する\"></a>1. Zshを起動する</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ zsh</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-リポジトリをクローンする\"><a href=\"#2-リポジトリをクローンする\" class=\"headerlink\" title=\"2. リポジトリをクローンする\"></a>2. リポジトリをクローンする</h3><ul>\n<li><code>$&#123;ZDOTDIR:-$HOME&#125;</code>とは？<ul>\n<li><code>$ZDOTDIR</code> : <code>.zshrc</code>の保存場所を設定する環境変数</li>\n<li><code>$HOME</code> : ホームディレクトリ</li>\n<li><code>:-</code> : 左辺の値が設定されていor空文字列であれば、右辺に設定されてる値が使用される<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone --recursive https:&#x2F;&#x2F;github.com&#x2F;sorin-ionescu&#x2F;prezto.git &quot;$&#123;ZDOTDIR:-$HOME&#125;&#x2F;.zprezto&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-今まで使っていた設定ファイルを移動させる\"><a href=\"#3-今まで使っていた設定ファイルを移動させる\" class=\"headerlink\" title=\"3. 今まで使っていた設定ファイルを移動させる\"></a>3. 今まで使っていた設定ファイルを移動させる</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir zsh_orig &amp;&amp; mv zshmv .zlogin .zlogout .zprofile .zshenv .zshrc zsh_orig</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-各コンフィグファイルへのシンボリックリンクを作成する\"><a href=\"#4-各コンフィグファイルへのシンボリックリンクを作成する\" class=\"headerlink\" title=\"4. 各コンフィグファイルへのシンボリックリンクを作成する\"></a>4. 各コンフィグファイルへのシンボリックリンクを作成する</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ setopt EXTENDED_GLOB</span><br><span class=\"line\">for rcfile in &quot;$&#123;ZDOTDIR:-$HOME&#125;&quot;&#x2F;.zprezto&#x2F;runcoms&#x2F;^README.md(.N); do</span><br><span class=\"line\">  ln -s &quot;$rcfile&quot; &quot;$&#123;ZDOTDIR:-$HOME&#125;&#x2F;.$&#123;rcfile:t&#125;&quot;</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-zshをデフォルトシェルに設定\"><a href=\"#5-zshをデフォルトシェルに設定\" class=\"headerlink\" title=\"5. zshをデフォルトシェルに設定\"></a>5. zshをデフォルトシェルに設定</h3></li>\n</ul>\n</li>\n<li>chsh : ログインシェルを変更する<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ chsh -s &#x2F;bin&#x2F;zsh</span><br></pre></td></tr></table></figure>\n<h2 id=\"テーマの設定\"><a href=\"#テーマの設定\" class=\"headerlink\" title=\"テーマの設定\"></a>テーマの設定</h2><h3 id=\"テーマ一覧を見てみる\"><a href=\"#テーマ一覧を見てみる\" class=\"headerlink\" title=\"テーマ一覧を見てみる\"></a>テーマ一覧を見てみる</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ prompt -s</span><br></pre></td></tr></table></figure>\n<h3 id=\"テーマを設定する\"><a href=\"#テーマを設定する\" class=\"headerlink\" title=\"テーマを設定する\"></a>テーマを設定する</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ prompt -s テーマ名</span><br></pre></td></tr></table></figure>\n<h4 id=\"Macの場合\"><a href=\"#Macの場合\" class=\"headerlink\" title=\"Macの場合\"></a>Macの場合</h4><code>prompt -s</code>だと、そのセッションではテーマが変更されるが、再起動ログインし直すとデフォルトのテーマになってしまうので、設定<code>~/.zshrc</code>に追記しておく必要がある<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ prompt -s powerline</span><br><span class=\"line\">Set and save not yet implemented.  Please ensure your ~&#x2F;.zshrc</span><br><span class=\"line\">contains something similar to the following:</span><br><span class=\"line\"></span><br><span class=\"line\">  autoload -Uz promptinit</span><br><span class=\"line\">  promptinit</span><br><span class=\"line\">  prompt powerline</span><br></pre></td></tr></table></figure>\n<h4 id=\"powerlineを使用する場合、特殊なフォントが必要\"><a href=\"#powerlineを使用する場合、特殊なフォントが必要\" class=\"headerlink\" title=\"powerlineを使用する場合、特殊なフォントが必要\"></a>powerlineを使用する場合、特殊なフォントが必要</h4></li>\n</ul>\n<ol>\n<li>以下GitHubのリポジトリをダウンロード<br><a href=\"https://github.com/powerline/fonts\">https://github.com/powerline/fonts</a></li>\n</ol>\n<ul>\n<li>適当なディレクトリに移動後  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;powerline&#x2F;fonts.git</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"2\">\n<li><code>install.sh</code>を叩く <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd fonts</span><br><span class=\"line\">$ .&#x2F;install.sh</span><br></pre></td></tr></table></figure></li>\n<li>使用しているターミナルでフォントを設定</li>\n</ol>\n<ul>\n<li>文字列に<code>Powerline</code>が入っていれば使えるはず</li>\n</ul>\n"},{"title":"テキストレイアウトについて","date":"2021-02-05T14:11:53.000Z","_content":"# 参考URL\n[w3schools.com](https://www.w3schools.com/html/html_formatting.asp)\n\n# strong(太文字)\n- `<b></b>`で表現をすることもできるが、HTML5からは、`<strong></strong>`タグが推奨されている\n\t- 人が目視で確認する時に、`<strong></strong>`の方が読みやすいから\n\n```html\nこれは<strong>太文字</strong>だよ\n```\n\n# em(イタリック)タグ\n- `<i></i>`で表現することもできるが、HTML5からは、`<em></em>`タグが推奨されている\n\t- em = Enphasize\n\n```html\nこれは<em>イタリック文字</em>だよ\n```\n\n# ins(下線)タグ\n- `<u></u>`で表現でこともできるが、HTML5からは、`<ins></ins>`タグが推奨されている\n\t- ins = insert\n\n```html\n<p>これは<ins>下線</ins>だよ</p>\n```\n\n# sup(上付き文字)タグ\n- sup = Superscript\n```html\n<p>これは<sup>上付き文字</sup>だよ</p>\n```\n\n# sub(下付き文字)タグ\n- sub = Subscript\n```html\n<p>これは<sub>下付き文字</sub>だよ</p>\n```\n\n# del(打ち消し)タグ\n- del = delete\n```html\n<p>これは<del>打ち消し</del>だよ</p>\n```\n\n# hr(区切り線)タグ\n- 自己完結型(`</hr>`がいらない)\n- 勝手に改行が入る\n- hr = Horizontal Rule\n```html\nここから下に区切り線が入る<hr>ここから上に区切り線が入る\n```\n\n# mark(ハイライト)タグ\n- mark = marking \n```html\n<p>これは<mark>ハイライト</mark>だよ</p>\n```\n","source":"_posts/テキストレイアウトについて.md","raw":"---\ntitle: テキストレイアウトについて\ndate: 2021-02-05 23:11:53\ntags:\tHTML\n---\n# 参考URL\n[w3schools.com](https://www.w3schools.com/html/html_formatting.asp)\n\n# strong(太文字)\n- `<b></b>`で表現をすることもできるが、HTML5からは、`<strong></strong>`タグが推奨されている\n\t- 人が目視で確認する時に、`<strong></strong>`の方が読みやすいから\n\n```html\nこれは<strong>太文字</strong>だよ\n```\n\n# em(イタリック)タグ\n- `<i></i>`で表現することもできるが、HTML5からは、`<em></em>`タグが推奨されている\n\t- em = Enphasize\n\n```html\nこれは<em>イタリック文字</em>だよ\n```\n\n# ins(下線)タグ\n- `<u></u>`で表現でこともできるが、HTML5からは、`<ins></ins>`タグが推奨されている\n\t- ins = insert\n\n```html\n<p>これは<ins>下線</ins>だよ</p>\n```\n\n# sup(上付き文字)タグ\n- sup = Superscript\n```html\n<p>これは<sup>上付き文字</sup>だよ</p>\n```\n\n# sub(下付き文字)タグ\n- sub = Subscript\n```html\n<p>これは<sub>下付き文字</sub>だよ</p>\n```\n\n# del(打ち消し)タグ\n- del = delete\n```html\n<p>これは<del>打ち消し</del>だよ</p>\n```\n\n# hr(区切り線)タグ\n- 自己完結型(`</hr>`がいらない)\n- 勝手に改行が入る\n- hr = Horizontal Rule\n```html\nここから下に区切り線が入る<hr>ここから上に区切り線が入る\n```\n\n# mark(ハイライト)タグ\n- mark = marking \n```html\n<p>これは<mark>ハイライト</mark>だよ</p>\n```\n","slug":"テキストレイアウトについて","published":1,"updated":"2021-02-05T14:13:35.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3dp0068mzb6835jeh4y","content":"<h1><span id=\"参考url\">参考URL</span></h1><p><a href=\"https://www.w3schools.com/html/html_formatting.asp\">w3schools.com</a></p>\n<h1><span id=\"strong太文字\">strong(太文字)</span></h1><ul>\n<li><code>&lt;b&gt;&lt;/b&gt;</code>で表現をすることもできるが、HTML5からは、<code>&lt;strong&gt;&lt;/strong&gt;</code>タグが推奨されている<ul>\n<li>人が目視で確認する時に、<code>&lt;strong&gt;&lt;/strong&gt;</code>の方が読みやすいから</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これは<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>太文字<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>だよ</span><br></pre></td></tr></table></figure>\n<h1><span id=\"emイタリックタグ\">em(イタリック)タグ</span></h1><ul>\n<li><code>&lt;i&gt;&lt;/i&gt;</code>で表現することもできるが、HTML5からは、<code>&lt;em&gt;&lt;/em&gt;</code>タグが推奨されている<ul>\n<li>em = Enphasize</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これは<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>イタリック文字<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span>だよ</span><br></pre></td></tr></table></figure>\n<h1><span id=\"ins下線タグ\">ins(下線)タグ</span></h1><ul>\n<li><code>&lt;u&gt;&lt;/u&gt;</code>で表現でこともできるが、HTML5からは、<code>&lt;ins&gt;&lt;/ins&gt;</code>タグが推奨されている<ul>\n<li>ins = insert</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは<span class=\"tag\">&lt;<span class=\"name\">ins</span>&gt;</span>下線<span class=\"tag\">&lt;/<span class=\"name\">ins</span>&gt;</span>だよ<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"sup上付き文字タグ\">sup(上付き文字)タグ</span></h1><ul>\n<li>sup = Superscript<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは<span class=\"tag\">&lt;<span class=\"name\">sup</span>&gt;</span>上付き文字<span class=\"tag\">&lt;/<span class=\"name\">sup</span>&gt;</span>だよ<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"sub下付き文字タグ\">sub(下付き文字)タグ</span></h1></li>\n<li>sub = Subscript<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは<span class=\"tag\">&lt;<span class=\"name\">sub</span>&gt;</span>下付き文字<span class=\"tag\">&lt;/<span class=\"name\">sub</span>&gt;</span>だよ<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"del打ち消しタグ\">del(打ち消し)タグ</span></h1></li>\n<li>del = delete<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは<span class=\"tag\">&lt;<span class=\"name\">del</span>&gt;</span>打ち消し<span class=\"tag\">&lt;/<span class=\"name\">del</span>&gt;</span>だよ<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"hr区切り線タグ\">hr(区切り線)タグ</span></h1></li>\n<li>自己完結型(<code>&lt;/hr&gt;</code>がいらない)</li>\n<li>勝手に改行が入る</li>\n<li>hr = Horizontal Rule<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ここから下に区切り線が入る<span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span>ここから上に区切り線が入る</span><br></pre></td></tr></table></figure>\n<h1><span id=\"markハイライトタグ\">mark(ハイライト)タグ</span></h1></li>\n<li>mark = marking <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは<span class=\"tag\">&lt;<span class=\"name\">mark</span>&gt;</span>ハイライト<span class=\"tag\">&lt;/<span class=\"name\">mark</span>&gt;</span>だよ<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"参考URL\"><a href=\"#参考URL\" class=\"headerlink\" title=\"参考URL\"></a>参考URL</h1><p><a href=\"https://www.w3schools.com/html/html_formatting.asp\">w3schools.com</a></p>\n<h1 id=\"strong-太文字\"><a href=\"#strong-太文字\" class=\"headerlink\" title=\"strong(太文字)\"></a>strong(太文字)</h1><ul>\n<li><code>&lt;b&gt;&lt;/b&gt;</code>で表現をすることもできるが、HTML5からは、<code>&lt;strong&gt;&lt;/strong&gt;</code>タグが推奨されている<ul>\n<li>人が目視で確認する時に、<code>&lt;strong&gt;&lt;/strong&gt;</code>の方が読みやすいから</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これは<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>太文字<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>だよ</span><br></pre></td></tr></table></figure>\n<h1 id=\"em-イタリック-タグ\"><a href=\"#em-イタリック-タグ\" class=\"headerlink\" title=\"em(イタリック)タグ\"></a>em(イタリック)タグ</h1><ul>\n<li><code>&lt;i&gt;&lt;/i&gt;</code>で表現することもできるが、HTML5からは、<code>&lt;em&gt;&lt;/em&gt;</code>タグが推奨されている<ul>\n<li>em = Enphasize</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これは<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>イタリック文字<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span>だよ</span><br></pre></td></tr></table></figure>\n<h1 id=\"ins-下線-タグ\"><a href=\"#ins-下線-タグ\" class=\"headerlink\" title=\"ins(下線)タグ\"></a>ins(下線)タグ</h1><ul>\n<li><code>&lt;u&gt;&lt;/u&gt;</code>で表現でこともできるが、HTML5からは、<code>&lt;ins&gt;&lt;/ins&gt;</code>タグが推奨されている<ul>\n<li>ins = insert</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは<span class=\"tag\">&lt;<span class=\"name\">ins</span>&gt;</span>下線<span class=\"tag\">&lt;/<span class=\"name\">ins</span>&gt;</span>だよ<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"sup-上付き文字-タグ\"><a href=\"#sup-上付き文字-タグ\" class=\"headerlink\" title=\"sup(上付き文字)タグ\"></a>sup(上付き文字)タグ</h1><ul>\n<li>sup = Superscript<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは<span class=\"tag\">&lt;<span class=\"name\">sup</span>&gt;</span>上付き文字<span class=\"tag\">&lt;/<span class=\"name\">sup</span>&gt;</span>だよ<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"sub-下付き文字-タグ\"><a href=\"#sub-下付き文字-タグ\" class=\"headerlink\" title=\"sub(下付き文字)タグ\"></a>sub(下付き文字)タグ</h1></li>\n<li>sub = Subscript<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは<span class=\"tag\">&lt;<span class=\"name\">sub</span>&gt;</span>下付き文字<span class=\"tag\">&lt;/<span class=\"name\">sub</span>&gt;</span>だよ<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"del-打ち消し-タグ\"><a href=\"#del-打ち消し-タグ\" class=\"headerlink\" title=\"del(打ち消し)タグ\"></a>del(打ち消し)タグ</h1></li>\n<li>del = delete<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは<span class=\"tag\">&lt;<span class=\"name\">del</span>&gt;</span>打ち消し<span class=\"tag\">&lt;/<span class=\"name\">del</span>&gt;</span>だよ<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"hr-区切り線-タグ\"><a href=\"#hr-区切り線-タグ\" class=\"headerlink\" title=\"hr(区切り線)タグ\"></a>hr(区切り線)タグ</h1></li>\n<li>自己完結型(<code>&lt;/hr&gt;</code>がいらない)</li>\n<li>勝手に改行が入る</li>\n<li>hr = Horizontal Rule<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ここから下に区切り線が入る<span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span>ここから上に区切り線が入る</span><br></pre></td></tr></table></figure>\n<h1 id=\"mark-ハイライト-タグ\"><a href=\"#mark-ハイライト-タグ\" class=\"headerlink\" title=\"mark(ハイライト)タグ\"></a>mark(ハイライト)タグ</h1></li>\n<li>mark = marking <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは<span class=\"tag\">&lt;<span class=\"name\">mark</span>&gt;</span>ハイライト<span class=\"tag\">&lt;/<span class=\"name\">mark</span>&gt;</span>だよ<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"リストについて","date":"2021-02-06T14:55:25.000Z","_content":"# ul(番号なしリスト)タグ\n- ul = Unorderd List\n- `<ul></ul>`で指定するのはリストの`タイトル`\n\n## li(項目)タグ\n- li = List Item\n- `<li></li>`リスト内の項目を記述する\n\n```html\n<ul>曜日\n\t<li>月</li>\n\t<li>火</li>\n\t<li>水</li>\n\t<li>木</li>\n\t<li>金</li>\n</ul>\n```\n\n# ol(番号付きリスト)タグ\n- ol = Ordered List\n- 基本は`ul`(番号なしリスト)と同じだが、オプションをつけることができる\n\n## オプション\n複数のオプションを同時に指定も可能\n- `<ol start=\"番号\">` : 振られる番号のスタート数字を変更する\n- `<ol reversed>`     : 番号を逆順にする \n- `<ol type=\"\">`      : 番号の表現を変える\n\t- 1,A,l,a,i\n\n## li(項目)タグ\n- li = List Item\n- `<li></li>`リスト内の項目を記述する\n\n```html\n<ol start=\"4\" reversed>曜日\n\t<li>月</li>\n\t<li>火</li>\n\t<li>水</li>\n\t<li>木</li>\n\t<li>金</li>\n</ol>\n```\n","source":"_posts/リストについて.md","raw":"---\ntitle: リストについて\ndate: 2021-02-06 23:55:25\ntags: HTML\n---\n# ul(番号なしリスト)タグ\n- ul = Unorderd List\n- `<ul></ul>`で指定するのはリストの`タイトル`\n\n## li(項目)タグ\n- li = List Item\n- `<li></li>`リスト内の項目を記述する\n\n```html\n<ul>曜日\n\t<li>月</li>\n\t<li>火</li>\n\t<li>水</li>\n\t<li>木</li>\n\t<li>金</li>\n</ul>\n```\n\n# ol(番号付きリスト)タグ\n- ol = Ordered List\n- 基本は`ul`(番号なしリスト)と同じだが、オプションをつけることができる\n\n## オプション\n複数のオプションを同時に指定も可能\n- `<ol start=\"番号\">` : 振られる番号のスタート数字を変更する\n- `<ol reversed>`     : 番号を逆順にする \n- `<ol type=\"\">`      : 番号の表現を変える\n\t- 1,A,l,a,i\n\n## li(項目)タグ\n- li = List Item\n- `<li></li>`リスト内の項目を記述する\n\n```html\n<ol start=\"4\" reversed>曜日\n\t<li>月</li>\n\t<li>火</li>\n\t<li>水</li>\n\t<li>木</li>\n\t<li>金</li>\n</ol>\n```\n","slug":"リストについて","published":1,"updated":"2021-02-06T14:56:42.789Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3dt0069mzb69tjmabte","content":"<h1><span id=\"ul番号なしリストタグ\">ul(番号なしリスト)タグ</span></h1><ul>\n<li>ul = Unorderd List</li>\n<li><code>&lt;ul&gt;&lt;/ul&gt;</code>で指定するのはリストの<code>タイトル</code></li>\n</ul>\n<h2><span id=\"li項目タグ\">li(項目)タグ</span></h2><ul>\n<li>li = List Item</li>\n<li><code>&lt;li&gt;&lt;/li&gt;</code>リスト内の項目を記述する</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span>曜日</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>月<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>火<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>水<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>木<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>金<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"ol番号付きリストタグ\">ol(番号付きリスト)タグ</span></h1><ul>\n<li>ol = Ordered List</li>\n<li>基本は<code>ul</code>(番号なしリスト)と同じだが、オプションをつけることができる</li>\n</ul>\n<h2><span id=\"オプション\">オプション</span></h2><p>複数のオプションを同時に指定も可能</p>\n<ul>\n<li><code>&lt;ol start=&quot;番号&quot;&gt;</code> : 振られる番号のスタート数字を変更する</li>\n<li><code>&lt;ol reversed&gt;</code>     : 番号を逆順にする </li>\n<li><code>&lt;ol type=&quot;&quot;&gt;</code>      : 番号の表現を変える<ul>\n<li>1,A,l,a,i</li>\n</ul>\n</li>\n</ul>\n<h2><span id=\"li項目タグ\">li(項目)タグ</span></h2><ul>\n<li>li = List Item</li>\n<li><code>&lt;li&gt;&lt;/li&gt;</code>リスト内の項目を記述する</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span> <span class=\"attr\">start</span>=<span class=\"string\">&quot;4&quot;</span> <span class=\"attr\">reversed</span>&gt;</span>曜日</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>月<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>火<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>水<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>木<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>金<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ul-番号なしリスト-タグ\"><a href=\"#ul-番号なしリスト-タグ\" class=\"headerlink\" title=\"ul(番号なしリスト)タグ\"></a>ul(番号なしリスト)タグ</h1><ul>\n<li>ul = Unorderd List</li>\n<li><code>&lt;ul&gt;&lt;/ul&gt;</code>で指定するのはリストの<code>タイトル</code></li>\n</ul>\n<h2 id=\"li-項目-タグ\"><a href=\"#li-項目-タグ\" class=\"headerlink\" title=\"li(項目)タグ\"></a>li(項目)タグ</h2><ul>\n<li>li = List Item</li>\n<li><code>&lt;li&gt;&lt;/li&gt;</code>リスト内の項目を記述する</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span>曜日</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>月<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>火<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>水<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>木<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>金<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"ol-番号付きリスト-タグ\"><a href=\"#ol-番号付きリスト-タグ\" class=\"headerlink\" title=\"ol(番号付きリスト)タグ\"></a>ol(番号付きリスト)タグ</h1><ul>\n<li>ol = Ordered List</li>\n<li>基本は<code>ul</code>(番号なしリスト)と同じだが、オプションをつけることができる</li>\n</ul>\n<h2 id=\"オプション\"><a href=\"#オプション\" class=\"headerlink\" title=\"オプション\"></a>オプション</h2><p>複数のオプションを同時に指定も可能</p>\n<ul>\n<li><code>&lt;ol start=&quot;番号&quot;&gt;</code> : 振られる番号のスタート数字を変更する</li>\n<li><code>&lt;ol reversed&gt;</code>     : 番号を逆順にする </li>\n<li><code>&lt;ol type=&quot;&quot;&gt;</code>      : 番号の表現を変える<ul>\n<li>1,A,l,a,i</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"li-項目-タグ-1\"><a href=\"#li-項目-タグ-1\" class=\"headerlink\" title=\"li(項目)タグ\"></a>li(項目)タグ</h2><ul>\n<li>li = List Item</li>\n<li><code>&lt;li&gt;&lt;/li&gt;</code>リスト内の項目を記述する</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span> <span class=\"attr\">start</span>=<span class=\"string\">&quot;4&quot;</span> <span class=\"attr\">reversed</span>&gt;</span>曜日</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>月<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>火<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>水<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>木<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>金<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"テーブルについて","date":"2021-02-09T23:46:10.000Z","_content":"# table(テーブル)を生成する方法\n- `<table></table>`タグを使用して、テーブルセクションを作成する\n```html\n<table>\n\tテーブルの内容の記述\n</table>\n```\n# テーブルの内容を追加する\n行とデータを別々に記述する必要がある\n- `<tr></tr>`タグで`行`を生成\n\t- tr = table row\n- `<td></td>`タグで行内の要素指定\n\t- td = table data\n\n```htnl\nラーメン値段表\t<!--タイトルのつもり-->\n<table>\n\t<tr>\n\t\t<td>塩ラーメン</td>\n\t\t<td>299</td>\n\t</tr>\n\t<tr>\n\t\t<td>豚骨ラーメン</td>\n\t\t<td>399</td>\n\t</tr>\n\t<tr>\n\t\t<td>醤油ラーメン</td>\n\t\t<td>499</td>\n\t</tr>\n\t<tr>\n\t\t<td>味噌ラーメン</td>\n\t\t<td>599</td>\n\t</tr>\n</table>\n```\n\n# もう少しリッチな表現を入れる\n## 枠線をつける\n- `<table>`タグに`border`属性を記述する\n```html\nラーメン値段表\t<!--タイトルのつもり-->\n<table border>\n\t<tr>\n\t\t<td>塩ラーメン</td>\n\t\t<td>299</td>\n\t</tr>\n\t<tr>\n\t\t<td>豚骨ラーメン</td>\n\t\t<td>399</td>\n\t</tr>\n\t<tr>\n\t\t<td>醤油ラーメン</td>\n\t\t<td>499</td>\n\t</tr>\n\t<tr>\n\t\t<td>味噌ラーメン</td>\n\t\t<td>599</td>\n\t</tr>\n</table>\n```\n## 見出しをつける\n- `<thead></thead>`タグでヘッダーセクションを生成する\n\t- thead = table head\n- `<tr></tr>`タグで行セクションを生成する\n- `<th></th>`タグでヘッダー情報を記述する \n- ヘッダーと本文を区別するために本文部分は`<tbody></tbody>`セクションで囲む\n\n```html\nラーメン値段表\t<!--タイトルのつもり-->\n<table>\n\t<thead>\n\t<tr>\n\t\t<th>ラーメン名</th>\n\t\t<th>価格</th>\n\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>塩ラーメン</td>\n\t\t\t<td>299</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>豚骨ラーメン</td>\n\t\t\t<td>399</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>醤油ラーメン</td>\n\t\t\t<td>499</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>味噌ラーメン</td>\n\t\t\t<td>599</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n```\n","source":"_posts/テーブルについて.md","raw":"---\ntitle: テーブルについて\ndate: 2021-02-10 08:46:10\ntags: HTML\n---\n# table(テーブル)を生成する方法\n- `<table></table>`タグを使用して、テーブルセクションを作成する\n```html\n<table>\n\tテーブルの内容の記述\n</table>\n```\n# テーブルの内容を追加する\n行とデータを別々に記述する必要がある\n- `<tr></tr>`タグで`行`を生成\n\t- tr = table row\n- `<td></td>`タグで行内の要素指定\n\t- td = table data\n\n```htnl\nラーメン値段表\t<!--タイトルのつもり-->\n<table>\n\t<tr>\n\t\t<td>塩ラーメン</td>\n\t\t<td>299</td>\n\t</tr>\n\t<tr>\n\t\t<td>豚骨ラーメン</td>\n\t\t<td>399</td>\n\t</tr>\n\t<tr>\n\t\t<td>醤油ラーメン</td>\n\t\t<td>499</td>\n\t</tr>\n\t<tr>\n\t\t<td>味噌ラーメン</td>\n\t\t<td>599</td>\n\t</tr>\n</table>\n```\n\n# もう少しリッチな表現を入れる\n## 枠線をつける\n- `<table>`タグに`border`属性を記述する\n```html\nラーメン値段表\t<!--タイトルのつもり-->\n<table border>\n\t<tr>\n\t\t<td>塩ラーメン</td>\n\t\t<td>299</td>\n\t</tr>\n\t<tr>\n\t\t<td>豚骨ラーメン</td>\n\t\t<td>399</td>\n\t</tr>\n\t<tr>\n\t\t<td>醤油ラーメン</td>\n\t\t<td>499</td>\n\t</tr>\n\t<tr>\n\t\t<td>味噌ラーメン</td>\n\t\t<td>599</td>\n\t</tr>\n</table>\n```\n## 見出しをつける\n- `<thead></thead>`タグでヘッダーセクションを生成する\n\t- thead = table head\n- `<tr></tr>`タグで行セクションを生成する\n- `<th></th>`タグでヘッダー情報を記述する \n- ヘッダーと本文を区別するために本文部分は`<tbody></tbody>`セクションで囲む\n\n```html\nラーメン値段表\t<!--タイトルのつもり-->\n<table>\n\t<thead>\n\t<tr>\n\t\t<th>ラーメン名</th>\n\t\t<th>価格</th>\n\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>塩ラーメン</td>\n\t\t\t<td>299</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>豚骨ラーメン</td>\n\t\t\t<td>399</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>醤油ラーメン</td>\n\t\t\t<td>499</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>味噌ラーメン</td>\n\t\t\t<td>599</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n```\n","slug":"テーブルについて","published":1,"updated":"2021-02-09T23:46:30.587Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3du006bmzb64veb1fjp","content":"<h1><span id=\"tableテーブルを生成する方法\">table(テーブル)を生成する方法</span></h1><ul>\n<li><code>&lt;table&gt;&lt;/table&gt;</code>タグを使用して、テーブルセクションを作成する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">\tテーブルの内容の記述</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"テーブルの内容を追加する\">テーブルの内容を追加する</span></h1>行とデータを別々に記述する必要がある</li>\n<li><code>&lt;tr&gt;&lt;/tr&gt;</code>タグで<code>行</code>を生成<ul>\n<li>tr = table row</li>\n</ul>\n</li>\n<li><code>&lt;td&gt;&lt;/td&gt;</code>タグで行内の要素指定<ul>\n<li>td = table data</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ラーメン値段表\t&lt;!--タイトルのつもり--&gt;</span><br><span class=\"line\">&lt;table&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;塩ラーメン&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;299&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t&lt;&#x2F;tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;豚骨ラーメン&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;399&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t&lt;&#x2F;tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;醤油ラーメン&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;499&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t&lt;&#x2F;tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;味噌ラーメン&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;599&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t&lt;&#x2F;tr&gt;</span><br><span class=\"line\">&lt;&#x2F;table&gt;</span><br></pre></td></tr></table></figure>\n<h1><span id=\"もう少しリッチな表現を入れる\">もう少しリッチな表現を入れる</span></h1><h2><span id=\"枠線をつける\">枠線をつける</span></h2><ul>\n<li><code>&lt;table&gt;</code>タグに<code>border</code>属性を記述する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ラーメン値段表\t<span class=\"comment\">&lt;!--タイトルのつもり--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>塩ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>299<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>豚骨ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>399<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>醤油ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>499<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>味噌ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>599<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"見出しをつける\">見出しをつける</span></h2></li>\n<li><code>&lt;thead&gt;&lt;/thead&gt;</code>タグでヘッダーセクションを生成する<ul>\n<li>thead = table head</li>\n</ul>\n</li>\n<li><code>&lt;tr&gt;&lt;/tr&gt;</code>タグで行セクションを生成する</li>\n<li><code>&lt;th&gt;&lt;/th&gt;</code>タグでヘッダー情報を記述する </li>\n<li>ヘッダーと本文を区別するために本文部分は<code>&lt;tbody&gt;&lt;/tbody&gt;</code>セクションで囲む</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ラーメン値段表\t<span class=\"comment\">&lt;!--タイトルのつもり--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>ラーメン名<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>価格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>塩ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>299<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>豚骨ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>399<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>醤油ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>499<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>味噌ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>599<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"table-テーブル-を生成する方法\"><a href=\"#table-テーブル-を生成する方法\" class=\"headerlink\" title=\"table(テーブル)を生成する方法\"></a>table(テーブル)を生成する方法</h1><ul>\n<li><code>&lt;table&gt;&lt;/table&gt;</code>タグを使用して、テーブルセクションを作成する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">\tテーブルの内容の記述</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"テーブルの内容を追加する\"><a href=\"#テーブルの内容を追加する\" class=\"headerlink\" title=\"テーブルの内容を追加する\"></a>テーブルの内容を追加する</h1>行とデータを別々に記述する必要がある</li>\n<li><code>&lt;tr&gt;&lt;/tr&gt;</code>タグで<code>行</code>を生成<ul>\n<li>tr = table row</li>\n</ul>\n</li>\n<li><code>&lt;td&gt;&lt;/td&gt;</code>タグで行内の要素指定<ul>\n<li>td = table data</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ラーメン値段表\t&lt;!--タイトルのつもり--&gt;</span><br><span class=\"line\">&lt;table&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;塩ラーメン&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;299&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t&lt;&#x2F;tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;豚骨ラーメン&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;399&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t&lt;&#x2F;tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;醤油ラーメン&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;499&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t&lt;&#x2F;tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;味噌ラーメン&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;599&lt;&#x2F;td&gt;</span><br><span class=\"line\">\t&lt;&#x2F;tr&gt;</span><br><span class=\"line\">&lt;&#x2F;table&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"もう少しリッチな表現を入れる\"><a href=\"#もう少しリッチな表現を入れる\" class=\"headerlink\" title=\"もう少しリッチな表現を入れる\"></a>もう少しリッチな表現を入れる</h1><h2 id=\"枠線をつける\"><a href=\"#枠線をつける\" class=\"headerlink\" title=\"枠線をつける\"></a>枠線をつける</h2><ul>\n<li><code>&lt;table&gt;</code>タグに<code>border</code>属性を記述する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ラーメン値段表\t<span class=\"comment\">&lt;!--タイトルのつもり--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>塩ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>299<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>豚骨ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>399<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>醤油ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>499<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>味噌ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>599<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"見出しをつける\"><a href=\"#見出しをつける\" class=\"headerlink\" title=\"見出しをつける\"></a>見出しをつける</h2></li>\n<li><code>&lt;thead&gt;&lt;/thead&gt;</code>タグでヘッダーセクションを生成する<ul>\n<li>thead = table head</li>\n</ul>\n</li>\n<li><code>&lt;tr&gt;&lt;/tr&gt;</code>タグで行セクションを生成する</li>\n<li><code>&lt;th&gt;&lt;/th&gt;</code>タグでヘッダー情報を記述する </li>\n<li>ヘッダーと本文を区別するために本文部分は<code>&lt;tbody&gt;&lt;/tbody&gt;</code>セクションで囲む</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ラーメン値段表\t<span class=\"comment\">&lt;!--タイトルのつもり--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>ラーメン名<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>価格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>塩ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>299<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>豚骨ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>399<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>醤油ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>499<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>味噌ラーメン<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>599<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"リンクについて","date":"2021-02-09T23:33:10.000Z","_content":"# a hrefを使用してリンクする\n- a = Anker\n- href = hiper reference\n\t- hrefにURL or パス\t\n\n# リンクの種類\n`href`属性にURLを指定する\n- 絶対リンク\n- 相対リンク\n\nタグを使うことでリンクさせる\n- アンカーリンク\n\n# 絶対リンク\n- `ホームディレクトリからのパス`or`http://xxx`に移動する\n```html\n<a href=\"http://www.wikipedia.org\">\n```\n\n# 相対リンク\n- 今のディレクトリからの相対的なリンクに移動する\n```html\n<a href=\"table.html\">table.htmlへのリンク</a>\n```\n\n# アンカーリンク\n- ページ内で移動する(スクロール位置を移動する)\n- `a`タグの`href`に任意の`識別子`を指定\n- `p`タグの`id`属性に`a`タグで指定した`識別子`と同じ`識別子`を指定\n```html\n<p id=\"top\"><a href=\"http://www.google.com\">google検索</a></p>\n\t<p><a href=\"table.html\">テーブル.htmlへのリンク</a></p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p><a href=\"#top\">トップへ戻る</a></p>\n```\n\n# 画像にリンクを設置する\n- `img`タグを`<a href=\"\">`で囲む\n```html\n<a href=\"http://www.google.com\">\n\t<img src=\"image.png\">\n</a>\n```\n\n","source":"_posts/リンクについて.md","raw":"---\ntitle: リンクについて\ndate: 2021-02-10 08:33:10\ntags: HTML\n---\n# a hrefを使用してリンクする\n- a = Anker\n- href = hiper reference\n\t- hrefにURL or パス\t\n\n# リンクの種類\n`href`属性にURLを指定する\n- 絶対リンク\n- 相対リンク\n\nタグを使うことでリンクさせる\n- アンカーリンク\n\n# 絶対リンク\n- `ホームディレクトリからのパス`or`http://xxx`に移動する\n```html\n<a href=\"http://www.wikipedia.org\">\n```\n\n# 相対リンク\n- 今のディレクトリからの相対的なリンクに移動する\n```html\n<a href=\"table.html\">table.htmlへのリンク</a>\n```\n\n# アンカーリンク\n- ページ内で移動する(スクロール位置を移動する)\n- `a`タグの`href`に任意の`識別子`を指定\n- `p`タグの`id`属性に`a`タグで指定した`識別子`と同じ`識別子`を指定\n```html\n<p id=\"top\"><a href=\"http://www.google.com\">google検索</a></p>\n\t<p><a href=\"table.html\">テーブル.htmlへのリンク</a></p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p>スペース</p>\n\t<p><a href=\"#top\">トップへ戻る</a></p>\n```\n\n# 画像にリンクを設置する\n- `img`タグを`<a href=\"\">`で囲む\n```html\n<a href=\"http://www.google.com\">\n\t<img src=\"image.png\">\n</a>\n```\n\n","slug":"リンクについて","published":1,"updated":"2021-03-01T14:21:21.337Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3dv006dmzb6ba0ee5e3","content":"<h1><span id=\"a-hrefを使用してリンクする\">a hrefを使用してリンクする</span></h1><ul>\n<li>a = Anker</li>\n<li>href = hiper reference<ul>\n<li>hrefにURL or パス    </li>\n</ul>\n</li>\n</ul>\n<h1><span id=\"リンクの種類\">リンクの種類</span></h1><p><code>href</code>属性にURLを指定する</p>\n<ul>\n<li>絶対リンク</li>\n<li>相対リンク</li>\n</ul>\n<p>タグを使うことでリンクさせる</p>\n<ul>\n<li>アンカーリンク</li>\n</ul>\n<h1><span id=\"絶対リンク\">絶対リンク</span></h1><ul>\n<li><code>ホームディレクトリからのパス</code>or<code>http://xxx</code>に移動する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://www.wikipedia.org&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"相対リンク\">相対リンク</span></h1></li>\n<li>今のディレクトリからの相対的なリンクに移動する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;table.html&quot;</span>&gt;</span>table.htmlへのリンク<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"アンカーリンク\">アンカーリンク</span></h1></li>\n<li>ページ内で移動する(スクロール位置を移動する)</li>\n<li><code>a</code>タグの<code>href</code>に任意の<code>識別子</code>を指定</li>\n<li><code>p</code>タグの<code>id</code>属性に<code>a</code>タグで指定した<code>識別子</code>と同じ<code>識別子</code>を指定<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;top&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://www.google.com&quot;</span>&gt;</span>google検索<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;table.html&quot;</span>&gt;</span>テーブル.htmlへのリンク<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#top&quot;</span>&gt;</span>トップへ戻る<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"画像にリンクを設置する\">画像にリンクを設置する</span></h1></li>\n<li><code>img</code>タグを<code>&lt;a href=&quot;&quot;&gt;</code>で囲む<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://www.google.com&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;image.png&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"a-hrefを使用してリンクする\"><a href=\"#a-hrefを使用してリンクする\" class=\"headerlink\" title=\"a hrefを使用してリンクする\"></a>a hrefを使用してリンクする</h1><ul>\n<li>a = Anker</li>\n<li>href = hiper reference<ul>\n<li>hrefにURL or パス    </li>\n</ul>\n</li>\n</ul>\n<h1 id=\"リンクの種類\"><a href=\"#リンクの種類\" class=\"headerlink\" title=\"リンクの種類\"></a>リンクの種類</h1><p><code>href</code>属性にURLを指定する</p>\n<ul>\n<li>絶対リンク</li>\n<li>相対リンク</li>\n</ul>\n<p>タグを使うことでリンクさせる</p>\n<ul>\n<li>アンカーリンク</li>\n</ul>\n<h1 id=\"絶対リンク\"><a href=\"#絶対リンク\" class=\"headerlink\" title=\"絶対リンク\"></a>絶対リンク</h1><ul>\n<li><code>ホームディレクトリからのパス</code>or<code>http://xxx</code>に移動する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://www.wikipedia.org&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"相対リンク\"><a href=\"#相対リンク\" class=\"headerlink\" title=\"相対リンク\"></a>相対リンク</h1></li>\n<li>今のディレクトリからの相対的なリンクに移動する<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;table.html&quot;</span>&gt;</span>table.htmlへのリンク<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"アンカーリンク\"><a href=\"#アンカーリンク\" class=\"headerlink\" title=\"アンカーリンク\"></a>アンカーリンク</h1></li>\n<li>ページ内で移動する(スクロール位置を移動する)</li>\n<li><code>a</code>タグの<code>href</code>に任意の<code>識別子</code>を指定</li>\n<li><code>p</code>タグの<code>id</code>属性に<code>a</code>タグで指定した<code>識別子</code>と同じ<code>識別子</code>を指定<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;top&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://www.google.com&quot;</span>&gt;</span>google検索<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;table.html&quot;</span>&gt;</span>テーブル.htmlへのリンク<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>スペース<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#top&quot;</span>&gt;</span>トップへ戻る<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"画像にリンクを設置する\"><a href=\"#画像にリンクを設置する\" class=\"headerlink\" title=\"画像にリンクを設置する\"></a>画像にリンクを設置する</h1></li>\n<li><code>img</code>タグを<code>&lt;a href=&quot;&quot;&gt;</code>で囲む<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://www.google.com&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;image.png&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"画像を扱う","date":"2021-02-08T13:15:06.000Z","_content":"# img(画像)タグ\n- 自己完結型のタグ\n- 画像へのパスはホットリンクを使うこともできる\n\t- ホットリンク = 動的に他のウェブ上の画像をリンクする\n\n```html\n<img src=\"画像へのパス\">\n```\n\n## サイズ変更(ピクセル数を指定)\n- `width=\"\"`   : 幅を指定\n- `height=\"\"`  : 高さを指定\n\n## 小ネタ\n- 上下でイメージを配置したい場合、`<p></p>`を使うといい\t\t\n\n```html\n<p><img src=\"image.png\" width=\"100\" height=\"40\"></p>\n<img src=\"https://1.bp.blogspot.com/-QNMuJ-k-bYU/X68bIi2gjjI/AAAAAAABcUs/39kmQwXcZPM3w4s8O1vrcIswGqd2r6EWgCNcBGAsYHQ/s400/fantasy_unicorn_rainbow.png\">\n```\n","source":"_posts/画像を扱う.md","raw":"---\ntitle: 画像を扱う\ndate: 2021-02-08 22:15:06\ntags: HTML\n---\n# img(画像)タグ\n- 自己完結型のタグ\n- 画像へのパスはホットリンクを使うこともできる\n\t- ホットリンク = 動的に他のウェブ上の画像をリンクする\n\n```html\n<img src=\"画像へのパス\">\n```\n\n## サイズ変更(ピクセル数を指定)\n- `width=\"\"`   : 幅を指定\n- `height=\"\"`  : 高さを指定\n\n## 小ネタ\n- 上下でイメージを配置したい場合、`<p></p>`を使うといい\t\t\n\n```html\n<p><img src=\"image.png\" width=\"100\" height=\"40\"></p>\n<img src=\"https://1.bp.blogspot.com/-QNMuJ-k-bYU/X68bIi2gjjI/AAAAAAABcUs/39kmQwXcZPM3w4s8O1vrcIswGqd2r6EWgCNcBGAsYHQ/s400/fantasy_unicorn_rainbow.png\">\n```\n","slug":"画像を扱う","published":1,"updated":"2021-02-08T13:15:22.493Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3dv006fmzb62ist5ue1","content":"<h1><span id=\"img画像タグ\">img(画像)タグ</span></h1><ul>\n<li>自己完結型のタグ</li>\n<li>画像へのパスはホットリンクを使うこともできる<ul>\n<li>ホットリンク = 動的に他のウェブ上の画像をリンクする</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;画像へのパス&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"サイズ変更ピクセル数を指定\">サイズ変更(ピクセル数を指定)</span></h2><ul>\n<li><code>width=&quot;&quot;</code>   : 幅を指定</li>\n<li><code>height=&quot;&quot;</code>  : 高さを指定</li>\n</ul>\n<h2><span id=\"小ネタ\">小ネタ</span></h2><ul>\n<li>上下でイメージを配置したい場合、<code>&lt;p&gt;&lt;/p&gt;</code>を使うといい        </li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;image.png&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;40&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://1.bp.blogspot.com/-QNMuJ-k-bYU/X68bIi2gjjI/AAAAAAABcUs/39kmQwXcZPM3w4s8O1vrcIswGqd2r6EWgCNcBGAsYHQ/s400/fantasy_unicorn_rainbow.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"img-画像-タグ\"><a href=\"#img-画像-タグ\" class=\"headerlink\" title=\"img(画像)タグ\"></a>img(画像)タグ</h1><ul>\n<li>自己完結型のタグ</li>\n<li>画像へのパスはホットリンクを使うこともできる<ul>\n<li>ホットリンク = 動的に他のウェブ上の画像をリンクする</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;画像へのパス&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"サイズ変更-ピクセル数を指定\"><a href=\"#サイズ変更-ピクセル数を指定\" class=\"headerlink\" title=\"サイズ変更(ピクセル数を指定)\"></a>サイズ変更(ピクセル数を指定)</h2><ul>\n<li><code>width=&quot;&quot;</code>   : 幅を指定</li>\n<li><code>height=&quot;&quot;</code>  : 高さを指定</li>\n</ul>\n<h2 id=\"小ネタ\"><a href=\"#小ネタ\" class=\"headerlink\" title=\"小ネタ\"></a>小ネタ</h2><ul>\n<li>上下でイメージを配置したい場合、<code>&lt;p&gt;&lt;/p&gt;</code>を使うといい        </li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;image.png&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;40&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://1.bp.blogspot.com/-QNMuJ-k-bYU/X68bIi2gjjI/AAAAAAABcUs/39kmQwXcZPM3w4s8O1vrcIswGqd2r6EWgCNcBGAsYHQ/s400/fantasy_unicorn_rainbow.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"段落と改行について","date":"2021-02-07T14:06:16.000Z","_content":"#\tp(Paragraf)タグ\n段落を表現するためのタグ\n\n```html\n<p>これは１つ目の段落です</p>\n<p>これは２つ目の段落です</p>\n```\n\n# br(Line Break)タグ\n改行を表現するためのタグ\n\n```html\n改行したい場合<br>を入れる\n```\n\n# 使用例\n## コード\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>タイトル</title>\n\t</head>\n\t<body>\n\t\t<p>これは１つ目の段落です。好きな食べ物はラーメンです。<br>ここには改行が入ることが望ましいです</p>\n\t\t<p>これは2つ目の段落です。嫌いな食べ物はカマキリです。</p>\n\t\t何も指定指定ない１\n\t\t何も指定指定ない2\n\t\t何も指定指定ない3\n\t\t何も指定指定ない4\n\t\t<p>あ<br>い<br>う<br>え<br>お</p>\n\t</body>\n</html>\n```\n\n## 結果\n```\nこれは１つ目の段落です。好きな食べ物はラーメンです。\nここには改行が入ることが望ましいです\n\nこれは2つ目の段落です。嫌いな食べ物はカマキリです。\n\n何も指定指定ない１ 何も指定指定ない2 何も指定指定ない3 何も指定指定ない4\n\nあ\nい\nう\nえ\nお\n``` \n","source":"_posts/段落と改行について.md","raw":"---\ntitle: 段落と改行について\ndate: 2021-02-07 23:06:16\ntags: HTML\n---\n#\tp(Paragraf)タグ\n段落を表現するためのタグ\n\n```html\n<p>これは１つ目の段落です</p>\n<p>これは２つ目の段落です</p>\n```\n\n# br(Line Break)タグ\n改行を表現するためのタグ\n\n```html\n改行したい場合<br>を入れる\n```\n\n# 使用例\n## コード\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>タイトル</title>\n\t</head>\n\t<body>\n\t\t<p>これは１つ目の段落です。好きな食べ物はラーメンです。<br>ここには改行が入ることが望ましいです</p>\n\t\t<p>これは2つ目の段落です。嫌いな食べ物はカマキリです。</p>\n\t\t何も指定指定ない１\n\t\t何も指定指定ない2\n\t\t何も指定指定ない3\n\t\t何も指定指定ない4\n\t\t<p>あ<br>い<br>う<br>え<br>お</p>\n\t</body>\n</html>\n```\n\n## 結果\n```\nこれは１つ目の段落です。好きな食べ物はラーメンです。\nここには改行が入ることが望ましいです\n\nこれは2つ目の段落です。嫌いな食べ物はカマキリです。\n\n何も指定指定ない１ 何も指定指定ない2 何も指定指定ない3 何も指定指定ない4\n\nあ\nい\nう\nえ\nお\n``` \n","slug":"段落と改行について","published":1,"updated":"2021-02-07T14:06:35.419Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3dv006hmzb69jdu3lx0","content":"<h1><span id=\"pparagrafタグ\">p(Paragraf)タグ</span></h1><p>段落を表現するためのタグ</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは１つ目の段落です<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは２つ目の段落です<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"brline-breakタグ\">br(Line Break)タグ</span></h1><p>改行を表現するためのタグ</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">改行したい場合<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>を入れる</span><br></pre></td></tr></table></figure>\n<h1><span id=\"使用例\">使用例</span></h1><h2><span id=\"コード\">コード</span></h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>タイトル<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは１つ目の段落です。好きな食べ物はラーメンです。<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>ここには改行が入ることが望ましいです<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは2つ目の段落です。嫌いな食べ物はカマキリです。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t何も指定指定ない１</span><br><span class=\"line\">\t\t何も指定指定ない2</span><br><span class=\"line\">\t\t何も指定指定ない3</span><br><span class=\"line\">\t\t何も指定指定ない4</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>あ<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>い<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>う<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>え<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>お<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"結果\">結果</span></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これは１つ目の段落です。好きな食べ物はラーメンです。</span><br><span class=\"line\">ここには改行が入ることが望ましいです</span><br><span class=\"line\"></span><br><span class=\"line\">これは2つ目の段落です。嫌いな食べ物はカマキリです。</span><br><span class=\"line\"></span><br><span class=\"line\">何も指定指定ない１ 何も指定指定ない2 何も指定指定ない3 何も指定指定ない4</span><br><span class=\"line\"></span><br><span class=\"line\">あ</span><br><span class=\"line\">い</span><br><span class=\"line\">う</span><br><span class=\"line\">え</span><br><span class=\"line\">お</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"p-Paragraf-タグ\"><a href=\"#p-Paragraf-タグ\" class=\"headerlink\" title=\"p(Paragraf)タグ\"></a>p(Paragraf)タグ</h1><p>段落を表現するためのタグ</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは１つ目の段落です<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは２つ目の段落です<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"br-Line-Break-タグ\"><a href=\"#br-Line-Break-タグ\" class=\"headerlink\" title=\"br(Line Break)タグ\"></a>br(Line Break)タグ</h1><p>改行を表現するためのタグ</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">改行したい場合<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>を入れる</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用例\"><a href=\"#使用例\" class=\"headerlink\" title=\"使用例\"></a>使用例</h1><h2 id=\"コード\"><a href=\"#コード\" class=\"headerlink\" title=\"コード\"></a>コード</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>タイトル<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは１つ目の段落です。好きな食べ物はラーメンです。<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>ここには改行が入ることが望ましいです<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>これは2つ目の段落です。嫌いな食べ物はカマキリです。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t何も指定指定ない１</span><br><span class=\"line\">\t\t何も指定指定ない2</span><br><span class=\"line\">\t\t何も指定指定ない3</span><br><span class=\"line\">\t\t何も指定指定ない4</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>あ<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>い<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>う<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>え<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>お<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"結果\"><a href=\"#結果\" class=\"headerlink\" title=\"結果\"></a>結果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これは１つ目の段落です。好きな食べ物はラーメンです。</span><br><span class=\"line\">ここには改行が入ることが望ましいです</span><br><span class=\"line\"></span><br><span class=\"line\">これは2つ目の段落です。嫌いな食べ物はカマキリです。</span><br><span class=\"line\"></span><br><span class=\"line\">何も指定指定ない１ 何も指定指定ない2 何も指定指定ない3 何も指定指定ない4</span><br><span class=\"line\"></span><br><span class=\"line\">あ</span><br><span class=\"line\">い</span><br><span class=\"line\">う</span><br><span class=\"line\">え</span><br><span class=\"line\">お</span><br></pre></td></tr></table></figure>\n"},{"title":"自作ソート【Swift】","date":"2021-02-24T09:44:14.000Z","_content":"## 目的\n- ソートアルゴリズムの基本を身につける\n- Swiftになれる\n\n## 要件\n- 数字をソートアルゴリズムを使ってソートする(Swiftのソート関数は使わない)\n- 日本語ひらがな、アルファベット小文字の1文字をソートする\n- インプットは数字の場合と、文字の場合がある (ただし、文字と数字の組み合わせはない、どちらか1種類のみの羅列が入力される)\n- 最後に昇順 or 降順の指定がある\n- ユーザーは決まった手順を守るとは限らないので、その場合の例外の対応方法の組み込み (無理矢理処理しても、エラーを返してもいい)k\n\n## コード\n```swift\nimport UIKit\n\nlet testValue1:String = \"24,6723,23,111,43,1,昇順\"\nlet testValue2:String = \"え,い,う,か,と,昇順\"\nlet testValue3:String = \"-2,-22347999,あ,2,い,3,-1,ああ,昇順\"\n\nenum OrderType:String{\n    case none = \"例外\"\n    case ascending = \"昇順\"\n    case descending = \"降順\"\n}\n\nenum ValueType:String{\n    case Iregular = \"例外\"\n    case Number = \"数字\"\n    case Charactor = \"ローマ字\"\n    case Japanese = \"日本語\"\n}\n\n//  ============= メイン処理 ==============\n//  入力された文字列を分割\nvar inputValueList = testValue3.split(separator: \",\")\n\n//  ソートタイプのチェック\nvar orderType:OrderType = OrderType(rawValue: String(inputValueList.last ?? \"\")) ?? OrderType.none\n\nif(orderType == OrderType.none){\n    print(\"ソート方法を指定してください\")\n    print(\"指定がないため、昇順ソートを行います\")\n    \n    orderType = OrderType.ascending\n}else{\n    //  ソート指定は邪魔なので取り除く\n    inputValueList.removeLast()\n}\n\n//  入力文字列のタイプを判定\nlet valueType = CheckValueType(targetValueList: inputValueList)\n\n//  ソート処理\nvar sortedNumberList:Array<Substring> = Array<Substring>()\nsortedNumberList = Sort(targetNumberList:inputValueList)\n\n//  何をソートしたか表示\nswitch valueType {\ncase .Number:\n    print(ValueType.Number.rawValue + \"ソート完了\")\ncase .Charactor:\n    print(ValueType.Charactor.rawValue + \"ソート完了\")\ncase .Japanese:\n    print(ValueType.Japanese.rawValue + \"ソート完了\")\ncase .Iregular:\n    print(ValueType.Iregular.rawValue + \"ソート完了\")\n}\n\n//  ソートタイプによって出力を切り替え\nswitch orderType {\ncase .ascending:\n    print(sortedNumberList)\ncase .descending:\n    print(Array(sortedNumberList.reversed()))\ncase .none:\n    print(\"ソート失敗\")\n}\n\n//  =====================================\n\n//  ============== メソッド ===============\n//  値のタイプを判定\nfunc CheckValueType(targetValueList:Array<Substring>)-> ValueType{\n    var retVal : ValueType = ValueType.Iregular\n    let targetValueCount = targetValueList.count\n    \n    var numberCount = 0\n    var charCount = 0\n    var japaneseCount = 0\n    \n    //  数字の並びかチェック\n    for i in 0...inputValueList.count - 1{\n        let str:Int = Int(inputValueList[i].cString(using: .shiftJIS)!.first!)\n        if(str >= 48 && str <= 57){         //  数字\n            numberCount += 1\n        }else if(str >= 97 && str <= 122){  //  小文字\n            charCount += 1\n        }else if(str >= 65 && str <= 90){   //  大文字\n            charCount += 1\n        }else if(str == -125){              //  ひらがな\n            japaneseCount += 1\n        }else if(str == -126){              //  カタカナ\n            japaneseCount += 1\n        }\n    }\n    \n    \n    if(numberCount == targetValueCount){\n        retVal = ValueType.Number\n    }else if(charCount == targetValueCount){\n        retVal = ValueType.Charactor\n    }else if(japaneseCount == targetValueCount){\n        retVal = ValueType.Japanese\n    }else{\n        retVal = ValueType.Iregular\n    }\n    \n    return retVal\n}\n\n//  ソート処理\nfunc Sort(targetNumberList:Array<Substring>)->Array<Substring>{\n    \n    var sortList = targetNumberList\n    var isChange = false\n    \n    for index in 0...sortList.count - 1{\n        \n        if(index + 1 == sortList.count)\n        {\n            break\n        }\n        \n        let firstList = sortList[index].cString(using: .shiftJIS)!\n        var firstSign = 1\n        var firstJapaneseSign = 0\n        \n        let firstCheckValue = firstList.first!\n        if(firstCheckValue == 45 )   //  マイナス符号\n        {\n            firstSign = -1\n        }\n        \n        if(firstCheckValue == -125 ||  //  ひらがな\n            firstCheckValue == -126)    //  カタカナ\n        {\n            firstJapaneseSign = Int(firstCheckValue) * -1\n        }\n        \n        \n        var first:Int = 0\n        \n        for fc in firstList{\n            first += Int(fc) * firstSign\n        }\n        \n        if(firstJapaneseSign != 0){\n            first  *= firstJapaneseSign\n        }\n        \n        \n        let secondList = sortList[index+1].cString(using: .shiftJIS)!\n        \n        var secondSign = 1\n        var secondJapaneseCheckSign = 0\n        \n        let secondCheckValue = secondList.first!\n        if(secondCheckValue == 45)   //  マイナス符号\n        {\n            secondSign = -1\n        }\n        \n        if(secondCheckValue == -125 ||  //  ひらがな\n            secondCheckValue == -126)    //  カタカナ\n        {\n            secondJapaneseCheckSign = Int(secondCheckValue) * -1\n        }\n        var second:Int = 0\n        \n        for sc in secondList{\n            second += Int(sc) * secondSign\n        }\n        \n        if(secondJapaneseCheckSign != 0){\n            second *= secondJapaneseCheckSign\n        }\n\n        \n        let firstValue = sortList[index]\n        let secondValue = sortList[index+1]\n        \n        if(first > second)\n        {\n            isChange = true\n\n            sortList[index] = secondValue\n            sortList[index + 1] = firstValue\n        }\n    }\n    \n    if(isChange){\n        sortList = Sort(targetNumberList: sortList)\n    }\n    \n    return sortList\n}\n//  =======================================\n```\n\n## 備考（感想）\n- 文字コード変換する時に全てShiftJISのコードで変換されてしまった(未解決)\n- 今回使ったソートアルゴリズムは「バブルソート」\n-\t小数に対応していない\n","source":"_posts/自作ソート【Swift】.md","raw":"---\ntitle: 自作ソート【Swift】\ndate: 2021-02-24 18:44:14\ntags:\n- Swift\n---\n## 目的\n- ソートアルゴリズムの基本を身につける\n- Swiftになれる\n\n## 要件\n- 数字をソートアルゴリズムを使ってソートする(Swiftのソート関数は使わない)\n- 日本語ひらがな、アルファベット小文字の1文字をソートする\n- インプットは数字の場合と、文字の場合がある (ただし、文字と数字の組み合わせはない、どちらか1種類のみの羅列が入力される)\n- 最後に昇順 or 降順の指定がある\n- ユーザーは決まった手順を守るとは限らないので、その場合の例外の対応方法の組み込み (無理矢理処理しても、エラーを返してもいい)k\n\n## コード\n```swift\nimport UIKit\n\nlet testValue1:String = \"24,6723,23,111,43,1,昇順\"\nlet testValue2:String = \"え,い,う,か,と,昇順\"\nlet testValue3:String = \"-2,-22347999,あ,2,い,3,-1,ああ,昇順\"\n\nenum OrderType:String{\n    case none = \"例外\"\n    case ascending = \"昇順\"\n    case descending = \"降順\"\n}\n\nenum ValueType:String{\n    case Iregular = \"例外\"\n    case Number = \"数字\"\n    case Charactor = \"ローマ字\"\n    case Japanese = \"日本語\"\n}\n\n//  ============= メイン処理 ==============\n//  入力された文字列を分割\nvar inputValueList = testValue3.split(separator: \",\")\n\n//  ソートタイプのチェック\nvar orderType:OrderType = OrderType(rawValue: String(inputValueList.last ?? \"\")) ?? OrderType.none\n\nif(orderType == OrderType.none){\n    print(\"ソート方法を指定してください\")\n    print(\"指定がないため、昇順ソートを行います\")\n    \n    orderType = OrderType.ascending\n}else{\n    //  ソート指定は邪魔なので取り除く\n    inputValueList.removeLast()\n}\n\n//  入力文字列のタイプを判定\nlet valueType = CheckValueType(targetValueList: inputValueList)\n\n//  ソート処理\nvar sortedNumberList:Array<Substring> = Array<Substring>()\nsortedNumberList = Sort(targetNumberList:inputValueList)\n\n//  何をソートしたか表示\nswitch valueType {\ncase .Number:\n    print(ValueType.Number.rawValue + \"ソート完了\")\ncase .Charactor:\n    print(ValueType.Charactor.rawValue + \"ソート完了\")\ncase .Japanese:\n    print(ValueType.Japanese.rawValue + \"ソート完了\")\ncase .Iregular:\n    print(ValueType.Iregular.rawValue + \"ソート完了\")\n}\n\n//  ソートタイプによって出力を切り替え\nswitch orderType {\ncase .ascending:\n    print(sortedNumberList)\ncase .descending:\n    print(Array(sortedNumberList.reversed()))\ncase .none:\n    print(\"ソート失敗\")\n}\n\n//  =====================================\n\n//  ============== メソッド ===============\n//  値のタイプを判定\nfunc CheckValueType(targetValueList:Array<Substring>)-> ValueType{\n    var retVal : ValueType = ValueType.Iregular\n    let targetValueCount = targetValueList.count\n    \n    var numberCount = 0\n    var charCount = 0\n    var japaneseCount = 0\n    \n    //  数字の並びかチェック\n    for i in 0...inputValueList.count - 1{\n        let str:Int = Int(inputValueList[i].cString(using: .shiftJIS)!.first!)\n        if(str >= 48 && str <= 57){         //  数字\n            numberCount += 1\n        }else if(str >= 97 && str <= 122){  //  小文字\n            charCount += 1\n        }else if(str >= 65 && str <= 90){   //  大文字\n            charCount += 1\n        }else if(str == -125){              //  ひらがな\n            japaneseCount += 1\n        }else if(str == -126){              //  カタカナ\n            japaneseCount += 1\n        }\n    }\n    \n    \n    if(numberCount == targetValueCount){\n        retVal = ValueType.Number\n    }else if(charCount == targetValueCount){\n        retVal = ValueType.Charactor\n    }else if(japaneseCount == targetValueCount){\n        retVal = ValueType.Japanese\n    }else{\n        retVal = ValueType.Iregular\n    }\n    \n    return retVal\n}\n\n//  ソート処理\nfunc Sort(targetNumberList:Array<Substring>)->Array<Substring>{\n    \n    var sortList = targetNumberList\n    var isChange = false\n    \n    for index in 0...sortList.count - 1{\n        \n        if(index + 1 == sortList.count)\n        {\n            break\n        }\n        \n        let firstList = sortList[index].cString(using: .shiftJIS)!\n        var firstSign = 1\n        var firstJapaneseSign = 0\n        \n        let firstCheckValue = firstList.first!\n        if(firstCheckValue == 45 )   //  マイナス符号\n        {\n            firstSign = -1\n        }\n        \n        if(firstCheckValue == -125 ||  //  ひらがな\n            firstCheckValue == -126)    //  カタカナ\n        {\n            firstJapaneseSign = Int(firstCheckValue) * -1\n        }\n        \n        \n        var first:Int = 0\n        \n        for fc in firstList{\n            first += Int(fc) * firstSign\n        }\n        \n        if(firstJapaneseSign != 0){\n            first  *= firstJapaneseSign\n        }\n        \n        \n        let secondList = sortList[index+1].cString(using: .shiftJIS)!\n        \n        var secondSign = 1\n        var secondJapaneseCheckSign = 0\n        \n        let secondCheckValue = secondList.first!\n        if(secondCheckValue == 45)   //  マイナス符号\n        {\n            secondSign = -1\n        }\n        \n        if(secondCheckValue == -125 ||  //  ひらがな\n            secondCheckValue == -126)    //  カタカナ\n        {\n            secondJapaneseCheckSign = Int(secondCheckValue) * -1\n        }\n        var second:Int = 0\n        \n        for sc in secondList{\n            second += Int(sc) * secondSign\n        }\n        \n        if(secondJapaneseCheckSign != 0){\n            second *= secondJapaneseCheckSign\n        }\n\n        \n        let firstValue = sortList[index]\n        let secondValue = sortList[index+1]\n        \n        if(first > second)\n        {\n            isChange = true\n\n            sortList[index] = secondValue\n            sortList[index + 1] = firstValue\n        }\n    }\n    \n    if(isChange){\n        sortList = Sort(targetNumberList: sortList)\n    }\n    \n    return sortList\n}\n//  =======================================\n```\n\n## 備考（感想）\n- 文字コード変換する時に全てShiftJISのコードで変換されてしまった(未解決)\n- 今回使ったソートアルゴリズムは「バブルソート」\n-\t小数に対応していない\n","slug":"自作ソート【Swift】","published":1,"updated":"2021-02-24T09:52:00.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3dw006jmzb6bcrj1eqb","content":"<h2><span id=\"目的\">目的</span></h2><ul>\n<li>ソートアルゴリズムの基本を身につける</li>\n<li>Swiftになれる</li>\n</ul>\n<h2><span id=\"要件\">要件</span></h2><ul>\n<li>数字をソートアルゴリズムを使ってソートする(Swiftのソート関数は使わない)</li>\n<li>日本語ひらがな、アルファベット小文字の1文字をソートする</li>\n<li>インプットは数字の場合と、文字の場合がある (ただし、文字と数字の組み合わせはない、どちらか1種類のみの羅列が入力される)</li>\n<li>最後に昇順 or 降順の指定がある</li>\n<li>ユーザーは決まった手順を守るとは限らないので、その場合の例外の対応方法の組み込み (無理矢理処理しても、エラーを返してもいい)k</li>\n</ul>\n<h2><span id=\"コード\">コード</span></h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> testValue1:<span class=\"type\">String</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;24,6723,23,111,43,1,昇順&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> testValue2:<span class=\"type\">String</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;え,い,う,か,と,昇順&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> testValue3:<span class=\"type\">String</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;-2,-22347999,あ,2,い,3,-1,ああ,昇順&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">OrderType</span>:<span class=\"title\">String</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> none <span class=\"operator\">=</span> <span class=\"string\">&quot;例外&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> ascending <span class=\"operator\">=</span> <span class=\"string\">&quot;昇順&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> descending <span class=\"operator\">=</span> <span class=\"string\">&quot;降順&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">ValueType</span>:<span class=\"title\">String</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Iregular</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;例外&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Number</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;数字&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Charactor</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;ローマ字&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Japanese</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;日本語&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ============= メイン処理 ==============</span></span><br><span class=\"line\"><span class=\"comment\">//  入力された文字列を分割</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> inputValueList <span class=\"operator\">=</span> testValue3.split(separator: <span class=\"string\">&quot;,&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ソートタイプのチェック</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> orderType:<span class=\"type\">OrderType</span> <span class=\"operator\">=</span> <span class=\"type\">OrderType</span>(rawValue: <span class=\"type\">String</span>(inputValueList.last <span class=\"operator\">??</span> <span class=\"string\">&quot;&quot;</span>)) <span class=\"operator\">??</span> <span class=\"type\">OrderType</span>.none</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(orderType <span class=\"operator\">==</span> <span class=\"type\">OrderType</span>.none)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;ソート方法を指定してください&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;指定がないため、昇順ソートを行います&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    orderType <span class=\"operator\">=</span> <span class=\"type\">OrderType</span>.ascending</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//  ソート指定は邪魔なので取り除く</span></span><br><span class=\"line\">    inputValueList.removeLast()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  入力文字列のタイプを判定</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> valueType <span class=\"operator\">=</span> <span class=\"type\">CheckValueType</span>(targetValueList: inputValueList)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ソート処理</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sortedNumberList:<span class=\"type\">Array</span>&lt;<span class=\"type\">Substring</span>&gt; <span class=\"operator\">=</span> <span class=\"type\">Array</span>&lt;<span class=\"type\">Substring</span>&gt;()</span><br><span class=\"line\">sortedNumberList <span class=\"operator\">=</span> <span class=\"type\">Sort</span>(targetNumberList:inputValueList)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  何をソートしたか表示</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> valueType &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> .<span class=\"type\">Number</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"type\">ValueType</span>.<span class=\"type\">Number</span>.rawValue <span class=\"operator\">+</span> <span class=\"string\">&quot;ソート完了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> .<span class=\"type\">Charactor</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"type\">ValueType</span>.<span class=\"type\">Charactor</span>.rawValue <span class=\"operator\">+</span> <span class=\"string\">&quot;ソート完了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> .<span class=\"type\">Japanese</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"type\">ValueType</span>.<span class=\"type\">Japanese</span>.rawValue <span class=\"operator\">+</span> <span class=\"string\">&quot;ソート完了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> .<span class=\"type\">Iregular</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"type\">ValueType</span>.<span class=\"type\">Iregular</span>.rawValue <span class=\"operator\">+</span> <span class=\"string\">&quot;ソート完了&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ソートタイプによって出力を切り替え</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> orderType &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> .ascending:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(sortedNumberList)</span><br><span class=\"line\"><span class=\"keyword\">case</span> .descending:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"type\">Array</span>(sortedNumberList.reversed()))</span><br><span class=\"line\"><span class=\"keyword\">case</span> .none:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;ソート失敗&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  =====================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ============== メソッド ===============</span></span><br><span class=\"line\"><span class=\"comment\">//  値のタイプを判定</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">CheckValueType</span><span class=\"params\">(targetValueList:Array&lt;Substring&gt;)</span></span>-&gt; <span class=\"type\">ValueType</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> retVal : <span class=\"type\">ValueType</span> <span class=\"operator\">=</span> <span class=\"type\">ValueType</span>.<span class=\"type\">Iregular</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> targetValueCount <span class=\"operator\">=</span> targetValueList.count</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> numberCount <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> charCount <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> japaneseCount <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//  数字の並びかチェック</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>inputValueList.count <span class=\"operator\">-</span> <span class=\"number\">1</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> str:<span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"type\">Int</span>(inputValueList[i].cString(using: .shiftJIS)<span class=\"operator\">!</span>.first<span class=\"operator\">!</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(str <span class=\"operator\">&gt;=</span> <span class=\"number\">48</span> <span class=\"operator\">&amp;&amp;</span> str <span class=\"operator\">&lt;=</span> <span class=\"number\">57</span>)&#123;         <span class=\"comment\">//  数字</span></span><br><span class=\"line\">            numberCount <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(str <span class=\"operator\">&gt;=</span> <span class=\"number\">97</span> <span class=\"operator\">&amp;&amp;</span> str <span class=\"operator\">&lt;=</span> <span class=\"number\">122</span>)&#123;  <span class=\"comment\">//  小文字</span></span><br><span class=\"line\">            charCount <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(str <span class=\"operator\">&gt;=</span> <span class=\"number\">65</span> <span class=\"operator\">&amp;&amp;</span> str <span class=\"operator\">&lt;=</span> <span class=\"number\">90</span>)&#123;   <span class=\"comment\">//  大文字</span></span><br><span class=\"line\">            charCount <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(str <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">125</span>)&#123;              <span class=\"comment\">//  ひらがな</span></span><br><span class=\"line\">            japaneseCount <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(str <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">126</span>)&#123;              <span class=\"comment\">//  カタカナ</span></span><br><span class=\"line\">            japaneseCount <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numberCount <span class=\"operator\">==</span> targetValueCount)&#123;</span><br><span class=\"line\">        retVal <span class=\"operator\">=</span> <span class=\"type\">ValueType</span>.<span class=\"type\">Number</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(charCount <span class=\"operator\">==</span> targetValueCount)&#123;</span><br><span class=\"line\">        retVal <span class=\"operator\">=</span> <span class=\"type\">ValueType</span>.<span class=\"type\">Charactor</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(japaneseCount <span class=\"operator\">==</span> targetValueCount)&#123;</span><br><span class=\"line\">        retVal <span class=\"operator\">=</span> <span class=\"type\">ValueType</span>.<span class=\"type\">Japanese</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        retVal <span class=\"operator\">=</span> <span class=\"type\">ValueType</span>.<span class=\"type\">Iregular</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> retVal</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ソート処理</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Sort</span><span class=\"params\">(targetNumberList:Array&lt;Substring&gt;)</span></span>-&gt;<span class=\"type\">Array</span>&lt;<span class=\"type\">Substring</span>&gt;&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> sortList <span class=\"operator\">=</span> targetNumberList</span><br><span class=\"line\">    <span class=\"keyword\">var</span> isChange <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>sortList.count <span class=\"operator\">-</span> <span class=\"number\">1</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index <span class=\"operator\">+</span> <span class=\"number\">1</span> <span class=\"operator\">==</span> sortList.count)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> firstList <span class=\"operator\">=</span> sortList[index].cString(using: .shiftJIS)<span class=\"operator\">!</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> firstSign <span class=\"operator\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> firstJapaneseSign <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> firstCheckValue <span class=\"operator\">=</span> firstList.first<span class=\"operator\">!</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(firstCheckValue <span class=\"operator\">==</span> <span class=\"number\">45</span> )   <span class=\"comment\">//  マイナス符号</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            firstSign <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(firstCheckValue <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">125</span> <span class=\"operator\">||</span>  <span class=\"comment\">//  ひらがな</span></span><br><span class=\"line\">            firstCheckValue <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">126</span>)    <span class=\"comment\">//  カタカナ</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            firstJapaneseSign <span class=\"operator\">=</span> <span class=\"type\">Int</span>(firstCheckValue) <span class=\"operator\">*</span> <span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">var</span> first:<span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> fc <span class=\"keyword\">in</span> firstList&#123;</span><br><span class=\"line\">            first <span class=\"operator\">+=</span> <span class=\"type\">Int</span>(fc) <span class=\"operator\">*</span> firstSign</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(firstJapaneseSign <span class=\"operator\">!=</span> <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            first  <span class=\"operator\">*=</span> firstJapaneseSign</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> secondList <span class=\"operator\">=</span> sortList[index<span class=\"operator\">+</span><span class=\"number\">1</span>].cString(using: .shiftJIS)<span class=\"operator\">!</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">var</span> secondSign <span class=\"operator\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> secondJapaneseCheckSign <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> secondCheckValue <span class=\"operator\">=</span> secondList.first<span class=\"operator\">!</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(secondCheckValue <span class=\"operator\">==</span> <span class=\"number\">45</span>)   <span class=\"comment\">//  マイナス符号</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            secondSign <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(secondCheckValue <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">125</span> <span class=\"operator\">||</span>  <span class=\"comment\">//  ひらがな</span></span><br><span class=\"line\">            secondCheckValue <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">126</span>)    <span class=\"comment\">//  カタカナ</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            secondJapaneseCheckSign <span class=\"operator\">=</span> <span class=\"type\">Int</span>(secondCheckValue) <span class=\"operator\">*</span> <span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> second:<span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> sc <span class=\"keyword\">in</span> secondList&#123;</span><br><span class=\"line\">            second <span class=\"operator\">+=</span> <span class=\"type\">Int</span>(sc) <span class=\"operator\">*</span> secondSign</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(secondJapaneseCheckSign <span class=\"operator\">!=</span> <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            second <span class=\"operator\">*=</span> secondJapaneseCheckSign</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> firstValue <span class=\"operator\">=</span> sortList[index]</span><br><span class=\"line\">        <span class=\"keyword\">let</span> secondValue <span class=\"operator\">=</span> sortList[index<span class=\"operator\">+</span><span class=\"number\">1</span>]</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(first <span class=\"operator\">&gt;</span> second)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            isChange <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">            sortList[index] <span class=\"operator\">=</span> secondValue</span><br><span class=\"line\">            sortList[index <span class=\"operator\">+</span> <span class=\"number\">1</span>] <span class=\"operator\">=</span> firstValue</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    if(isChange)&#123;</span><br><span class=\"line\">        sortList <span class=\"operator\">=</span> <span class=\"type\">Sort</span>(targetNumberList: sortList)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> sortList</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//  =======================================</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"備考感想\">備考（感想）</span></h2><ul>\n<li>文字コード変換する時に全てShiftJISのコードで変換されてしまった(未解決)</li>\n<li>今回使ったソートアルゴリズムは「バブルソート」</li>\n<li>   小数に対応していない</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><ul>\n<li>ソートアルゴリズムの基本を身につける</li>\n<li>Swiftになれる</li>\n</ul>\n<h2 id=\"要件\"><a href=\"#要件\" class=\"headerlink\" title=\"要件\"></a>要件</h2><ul>\n<li>数字をソートアルゴリズムを使ってソートする(Swiftのソート関数は使わない)</li>\n<li>日本語ひらがな、アルファベット小文字の1文字をソートする</li>\n<li>インプットは数字の場合と、文字の場合がある (ただし、文字と数字の組み合わせはない、どちらか1種類のみの羅列が入力される)</li>\n<li>最後に昇順 or 降順の指定がある</li>\n<li>ユーザーは決まった手順を守るとは限らないので、その場合の例外の対応方法の組み込み (無理矢理処理しても、エラーを返してもいい)k</li>\n</ul>\n<h2 id=\"コード\"><a href=\"#コード\" class=\"headerlink\" title=\"コード\"></a>コード</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> testValue1:<span class=\"type\">String</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;24,6723,23,111,43,1,昇順&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> testValue2:<span class=\"type\">String</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;え,い,う,か,と,昇順&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> testValue3:<span class=\"type\">String</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;-2,-22347999,あ,2,い,3,-1,ああ,昇順&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">OrderType</span>:<span class=\"title\">String</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> none <span class=\"operator\">=</span> <span class=\"string\">&quot;例外&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> ascending <span class=\"operator\">=</span> <span class=\"string\">&quot;昇順&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> descending <span class=\"operator\">=</span> <span class=\"string\">&quot;降順&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">ValueType</span>:<span class=\"title\">String</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Iregular</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;例外&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Number</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;数字&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Charactor</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;ローマ字&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Japanese</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;日本語&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ============= メイン処理 ==============</span></span><br><span class=\"line\"><span class=\"comment\">//  入力された文字列を分割</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> inputValueList <span class=\"operator\">=</span> testValue3.split(separator: <span class=\"string\">&quot;,&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ソートタイプのチェック</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> orderType:<span class=\"type\">OrderType</span> <span class=\"operator\">=</span> <span class=\"type\">OrderType</span>(rawValue: <span class=\"type\">String</span>(inputValueList.last <span class=\"operator\">??</span> <span class=\"string\">&quot;&quot;</span>)) <span class=\"operator\">??</span> <span class=\"type\">OrderType</span>.none</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(orderType <span class=\"operator\">==</span> <span class=\"type\">OrderType</span>.none)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;ソート方法を指定してください&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;指定がないため、昇順ソートを行います&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    orderType <span class=\"operator\">=</span> <span class=\"type\">OrderType</span>.ascending</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//  ソート指定は邪魔なので取り除く</span></span><br><span class=\"line\">    inputValueList.removeLast()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  入力文字列のタイプを判定</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> valueType <span class=\"operator\">=</span> <span class=\"type\">CheckValueType</span>(targetValueList: inputValueList)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ソート処理</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sortedNumberList:<span class=\"type\">Array</span>&lt;<span class=\"type\">Substring</span>&gt; <span class=\"operator\">=</span> <span class=\"type\">Array</span>&lt;<span class=\"type\">Substring</span>&gt;()</span><br><span class=\"line\">sortedNumberList <span class=\"operator\">=</span> <span class=\"type\">Sort</span>(targetNumberList:inputValueList)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  何をソートしたか表示</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> valueType &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> .<span class=\"type\">Number</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"type\">ValueType</span>.<span class=\"type\">Number</span>.rawValue <span class=\"operator\">+</span> <span class=\"string\">&quot;ソート完了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> .<span class=\"type\">Charactor</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"type\">ValueType</span>.<span class=\"type\">Charactor</span>.rawValue <span class=\"operator\">+</span> <span class=\"string\">&quot;ソート完了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> .<span class=\"type\">Japanese</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"type\">ValueType</span>.<span class=\"type\">Japanese</span>.rawValue <span class=\"operator\">+</span> <span class=\"string\">&quot;ソート完了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> .<span class=\"type\">Iregular</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"type\">ValueType</span>.<span class=\"type\">Iregular</span>.rawValue <span class=\"operator\">+</span> <span class=\"string\">&quot;ソート完了&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ソートタイプによって出力を切り替え</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> orderType &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> .ascending:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(sortedNumberList)</span><br><span class=\"line\"><span class=\"keyword\">case</span> .descending:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"type\">Array</span>(sortedNumberList.reversed()))</span><br><span class=\"line\"><span class=\"keyword\">case</span> .none:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;ソート失敗&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  =====================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ============== メソッド ===============</span></span><br><span class=\"line\"><span class=\"comment\">//  値のタイプを判定</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">CheckValueType</span><span class=\"params\">(targetValueList:Array&lt;Substring&gt;)</span></span>-&gt; <span class=\"type\">ValueType</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> retVal : <span class=\"type\">ValueType</span> <span class=\"operator\">=</span> <span class=\"type\">ValueType</span>.<span class=\"type\">Iregular</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> targetValueCount <span class=\"operator\">=</span> targetValueList.count</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> numberCount <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> charCount <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> japaneseCount <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//  数字の並びかチェック</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>inputValueList.count <span class=\"operator\">-</span> <span class=\"number\">1</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> str:<span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"type\">Int</span>(inputValueList[i].cString(using: .shiftJIS)<span class=\"operator\">!</span>.first<span class=\"operator\">!</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(str <span class=\"operator\">&gt;=</span> <span class=\"number\">48</span> <span class=\"operator\">&amp;&amp;</span> str <span class=\"operator\">&lt;=</span> <span class=\"number\">57</span>)&#123;         <span class=\"comment\">//  数字</span></span><br><span class=\"line\">            numberCount <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(str <span class=\"operator\">&gt;=</span> <span class=\"number\">97</span> <span class=\"operator\">&amp;&amp;</span> str <span class=\"operator\">&lt;=</span> <span class=\"number\">122</span>)&#123;  <span class=\"comment\">//  小文字</span></span><br><span class=\"line\">            charCount <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(str <span class=\"operator\">&gt;=</span> <span class=\"number\">65</span> <span class=\"operator\">&amp;&amp;</span> str <span class=\"operator\">&lt;=</span> <span class=\"number\">90</span>)&#123;   <span class=\"comment\">//  大文字</span></span><br><span class=\"line\">            charCount <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(str <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">125</span>)&#123;              <span class=\"comment\">//  ひらがな</span></span><br><span class=\"line\">            japaneseCount <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(str <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">126</span>)&#123;              <span class=\"comment\">//  カタカナ</span></span><br><span class=\"line\">            japaneseCount <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numberCount <span class=\"operator\">==</span> targetValueCount)&#123;</span><br><span class=\"line\">        retVal <span class=\"operator\">=</span> <span class=\"type\">ValueType</span>.<span class=\"type\">Number</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(charCount <span class=\"operator\">==</span> targetValueCount)&#123;</span><br><span class=\"line\">        retVal <span class=\"operator\">=</span> <span class=\"type\">ValueType</span>.<span class=\"type\">Charactor</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(japaneseCount <span class=\"operator\">==</span> targetValueCount)&#123;</span><br><span class=\"line\">        retVal <span class=\"operator\">=</span> <span class=\"type\">ValueType</span>.<span class=\"type\">Japanese</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        retVal <span class=\"operator\">=</span> <span class=\"type\">ValueType</span>.<span class=\"type\">Iregular</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> retVal</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  ソート処理</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Sort</span><span class=\"params\">(targetNumberList:Array&lt;Substring&gt;)</span></span>-&gt;<span class=\"type\">Array</span>&lt;<span class=\"type\">Substring</span>&gt;&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> sortList <span class=\"operator\">=</span> targetNumberList</span><br><span class=\"line\">    <span class=\"keyword\">var</span> isChange <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"number\">0</span><span class=\"operator\">...</span>sortList.count <span class=\"operator\">-</span> <span class=\"number\">1</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index <span class=\"operator\">+</span> <span class=\"number\">1</span> <span class=\"operator\">==</span> sortList.count)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> firstList <span class=\"operator\">=</span> sortList[index].cString(using: .shiftJIS)<span class=\"operator\">!</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> firstSign <span class=\"operator\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> firstJapaneseSign <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> firstCheckValue <span class=\"operator\">=</span> firstList.first<span class=\"operator\">!</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(firstCheckValue <span class=\"operator\">==</span> <span class=\"number\">45</span> )   <span class=\"comment\">//  マイナス符号</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            firstSign <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(firstCheckValue <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">125</span> <span class=\"operator\">||</span>  <span class=\"comment\">//  ひらがな</span></span><br><span class=\"line\">            firstCheckValue <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">126</span>)    <span class=\"comment\">//  カタカナ</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            firstJapaneseSign <span class=\"operator\">=</span> <span class=\"type\">Int</span>(firstCheckValue) <span class=\"operator\">*</span> <span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">var</span> first:<span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> fc <span class=\"keyword\">in</span> firstList&#123;</span><br><span class=\"line\">            first <span class=\"operator\">+=</span> <span class=\"type\">Int</span>(fc) <span class=\"operator\">*</span> firstSign</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(firstJapaneseSign <span class=\"operator\">!=</span> <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            first  <span class=\"operator\">*=</span> firstJapaneseSign</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> secondList <span class=\"operator\">=</span> sortList[index<span class=\"operator\">+</span><span class=\"number\">1</span>].cString(using: .shiftJIS)<span class=\"operator\">!</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">var</span> secondSign <span class=\"operator\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> secondJapaneseCheckSign <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> secondCheckValue <span class=\"operator\">=</span> secondList.first<span class=\"operator\">!</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(secondCheckValue <span class=\"operator\">==</span> <span class=\"number\">45</span>)   <span class=\"comment\">//  マイナス符号</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            secondSign <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(secondCheckValue <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">125</span> <span class=\"operator\">||</span>  <span class=\"comment\">//  ひらがな</span></span><br><span class=\"line\">            secondCheckValue <span class=\"operator\">==</span> <span class=\"operator\">-</span><span class=\"number\">126</span>)    <span class=\"comment\">//  カタカナ</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            secondJapaneseCheckSign <span class=\"operator\">=</span> <span class=\"type\">Int</span>(secondCheckValue) <span class=\"operator\">*</span> <span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> second:<span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> sc <span class=\"keyword\">in</span> secondList&#123;</span><br><span class=\"line\">            second <span class=\"operator\">+=</span> <span class=\"type\">Int</span>(sc) <span class=\"operator\">*</span> secondSign</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(secondJapaneseCheckSign <span class=\"operator\">!=</span> <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            second <span class=\"operator\">*=</span> secondJapaneseCheckSign</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> firstValue <span class=\"operator\">=</span> sortList[index]</span><br><span class=\"line\">        <span class=\"keyword\">let</span> secondValue <span class=\"operator\">=</span> sortList[index<span class=\"operator\">+</span><span class=\"number\">1</span>]</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(first <span class=\"operator\">&gt;</span> second)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            isChange <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">            sortList[index] <span class=\"operator\">=</span> secondValue</span><br><span class=\"line\">            sortList[index <span class=\"operator\">+</span> <span class=\"number\">1</span>] <span class=\"operator\">=</span> firstValue</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    if(isChange)&#123;</span><br><span class=\"line\">        sortList <span class=\"operator\">=</span> <span class=\"type\">Sort</span>(targetNumberList: sortList)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> sortList</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//  =======================================</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"備考（感想）\"><a href=\"#備考（感想）\" class=\"headerlink\" title=\"備考（感想）\"></a>備考（感想）</h2><ul>\n<li>文字コード変換する時に全てShiftJISのコードで変換されてしまった(未解決)</li>\n<li>今回使ったソートアルゴリズムは「バブルソート」</li>\n<li>   小数に対応していない</li>\n</ul>\n"},{"title":"入力補完プラグイン「Deoplete」の導入方法","date":"2021-02-18T00:21:32.000Z","_content":"# vimにdeopleteを入れる\n\nインストールに前提条件の多いPluginなので詰まるところが多かった\n\n# 環境\n- M1 Mac \n- macOS Big Sur(11.2)\n- vim 8.2\n\n## 公式の手順\n- [Shougo/deoplete](https://github.com/Shougo/deoplete.nvim)\n\n# 日本語訳\n## 最初に\n注意: `deoplete` は`Vim`で使用する場合でも `Neovim` (最新のものを推奨) が必要  \n`Vimを使用する場合`Vimバージョン8.1以上 で `Python 3.6.1以上` と`timers`が有効になっている必要がある。\n\n注意: deopleteはmsgpackパッケージ1.0.0+を必要とします。pipでmsgpackパッケージをインストール/アップグレードしてください。  \n[msgpack/msgpack-python](https://github.com/msgpack/msgpack-python)\n\n注意: どうしても古い msgpack を使う必要がある場合は、代わりに deoplete ver.5.2 を使ってください。  \n[Shougo/deoplete.vim](https://github.com/Shougo/deoplete.nvim/releases/tag/5.2)\n\n## 要件\n- neovimをインストールしておく\n\t```\n\tpip3 install --user pyvim\n\t```\n\n- neovimでpython3が有効かを確認\n\t- nvimを起動して以下のコマンドで`1`が出るか確認\n\t```\n\t:echo has(\"python3\")\n\t```\n \n## .vimrcに記述\n1. 今回はプラグイン管理ツールの`Vundle`を使用する\n\t```\n\tPlugin 'Shougo/deoplete.nvim'\n\tPlugin 'roxma/nvim-yarp'\n\tPlugin 'roxma/vim-hug-neovim-rpc'\n\t```\n\t```\n\t\" deopleteをVim起動時に有効にする\n\tlet g:deoplete#enable_at_startup = 1\n\t```\n\n2. `:PluginInstall`でインストール \n\n## トラブル対応\n###  ファイルを開くとエラーが表示される\n```\n[deoplete] deoplete failed to load. Try the :UpdateRemotePlugins command and restart Neovim. See also :checkhealth.\n```\n- 参考サイト\n[deoplete.nvimのエラー解消](https://blog.fakiyer.com/entry/2018/11/20/101826)\n","source":"_posts/入力補完プラグイン「Deoplete」の導入方法.md","raw":"---\ntitle: 入力補完プラグイン「Deoplete」の導入方法\ndate: 2021-02-18 09:21:32\ntags: \n- Vim\n- VimPlugin\n---\n# vimにdeopleteを入れる\n\nインストールに前提条件の多いPluginなので詰まるところが多かった\n\n# 環境\n- M1 Mac \n- macOS Big Sur(11.2)\n- vim 8.2\n\n## 公式の手順\n- [Shougo/deoplete](https://github.com/Shougo/deoplete.nvim)\n\n# 日本語訳\n## 最初に\n注意: `deoplete` は`Vim`で使用する場合でも `Neovim` (最新のものを推奨) が必要  \n`Vimを使用する場合`Vimバージョン8.1以上 で `Python 3.6.1以上` と`timers`が有効になっている必要がある。\n\n注意: deopleteはmsgpackパッケージ1.0.0+を必要とします。pipでmsgpackパッケージをインストール/アップグレードしてください。  \n[msgpack/msgpack-python](https://github.com/msgpack/msgpack-python)\n\n注意: どうしても古い msgpack を使う必要がある場合は、代わりに deoplete ver.5.2 を使ってください。  \n[Shougo/deoplete.vim](https://github.com/Shougo/deoplete.nvim/releases/tag/5.2)\n\n## 要件\n- neovimをインストールしておく\n\t```\n\tpip3 install --user pyvim\n\t```\n\n- neovimでpython3が有効かを確認\n\t- nvimを起動して以下のコマンドで`1`が出るか確認\n\t```\n\t:echo has(\"python3\")\n\t```\n \n## .vimrcに記述\n1. 今回はプラグイン管理ツールの`Vundle`を使用する\n\t```\n\tPlugin 'Shougo/deoplete.nvim'\n\tPlugin 'roxma/nvim-yarp'\n\tPlugin 'roxma/vim-hug-neovim-rpc'\n\t```\n\t```\n\t\" deopleteをVim起動時に有効にする\n\tlet g:deoplete#enable_at_startup = 1\n\t```\n\n2. `:PluginInstall`でインストール \n\n## トラブル対応\n###  ファイルを開くとエラーが表示される\n```\n[deoplete] deoplete failed to load. Try the :UpdateRemotePlugins command and restart Neovim. See also :checkhealth.\n```\n- 参考サイト\n[deoplete.nvimのエラー解消](https://blog.fakiyer.com/entry/2018/11/20/101826)\n","slug":"入力補完プラグイン「Deoplete」の導入方法","published":1,"updated":"2021-02-21T02:44:33.141Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknezh3ee006lmzb60cg5dp8d","content":"<h1><span id=\"vimにdeopleteを入れる\">vimにdeopleteを入れる</span></h1><p>インストールに前提条件の多いPluginなので詰まるところが多かった</p>\n<h1><span id=\"環境\">環境</span></h1><ul>\n<li>M1 Mac </li>\n<li>macOS Big Sur(11.2)</li>\n<li>vim 8.2</li>\n</ul>\n<h2><span id=\"公式の手順\">公式の手順</span></h2><ul>\n<li><a href=\"https://github.com/Shougo/deoplete.nvim\">Shougo/deoplete</a></li>\n</ul>\n<h1><span id=\"日本語訳\">日本語訳</span></h1><h2><span id=\"最初に\">最初に</span></h2><p>注意: <code>deoplete</code> は<code>Vim</code>で使用する場合でも <code>Neovim</code> (最新のものを推奨) が必要<br><code>Vimを使用する場合</code>Vimバージョン8.1以上 で <code>Python 3.6.1以上</code> と<code>timers</code>が有効になっている必要がある。</p>\n<p>注意: deopleteはmsgpackパッケージ1.0.0+を必要とします。pipでmsgpackパッケージをインストール/アップグレードしてください。<br><a href=\"https://github.com/msgpack/msgpack-python\">msgpack/msgpack-python</a></p>\n<p>注意: どうしても古い msgpack を使う必要がある場合は、代わりに deoplete ver.5.2 を使ってください。<br><a href=\"https://github.com/Shougo/deoplete.nvim/releases/tag/5.2\">Shougo/deoplete.vim</a></p>\n<h2><span id=\"要件\">要件</span></h2><ul>\n<li>neovimをインストールしておく  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install --user pyvim</span><br></pre></td></tr></table></figure></li>\n<li>neovimでpython3が有効かを確認<ul>\n<li>nvimを起動して以下のコマンドで<code>1</code>が出るか確認<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:echo has(&quot;python3&quot;)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n<h2><span id=\"vimrcに記述\">.vimrcに記述</span></h2><ol>\n<li>今回はプラグイン管理ツールの<code>Vundle</code>を使用する <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin &#39;Shougo&#x2F;deoplete.nvim&#39;</span><br><span class=\"line\">Plugin &#39;roxma&#x2F;nvim-yarp&#39;</span><br><span class=\"line\">Plugin &#39;roxma&#x2F;vim-hug-neovim-rpc&#39;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; deopleteをVim起動時に有効にする</span><br><span class=\"line\">let g:deoplete#enable_at_startup &#x3D; 1</span><br></pre></td></tr></table></figure></li>\n<li><code>:PluginInstall</code>でインストール </li>\n</ol>\n<h2><span id=\"トラブル対応\">トラブル対応</span></h2><h3><span id=\"ファイルを開くとエラーが表示される\">ファイルを開くとエラーが表示される</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[deoplete] deoplete failed to load. Try the :UpdateRemotePlugins command and restart Neovim. See also :checkhealth.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>参考サイト<br><a href=\"https://blog.fakiyer.com/entry/2018/11/20/101826\">deoplete.nvimのエラー解消</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vimにdeopleteを入れる\"><a href=\"#vimにdeopleteを入れる\" class=\"headerlink\" title=\"vimにdeopleteを入れる\"></a>vimにdeopleteを入れる</h1><p>インストールに前提条件の多いPluginなので詰まるところが多かった</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>M1 Mac </li>\n<li>macOS Big Sur(11.2)</li>\n<li>vim 8.2</li>\n</ul>\n<h2 id=\"公式の手順\"><a href=\"#公式の手順\" class=\"headerlink\" title=\"公式の手順\"></a>公式の手順</h2><ul>\n<li><a href=\"https://github.com/Shougo/deoplete.nvim\">Shougo/deoplete</a></li>\n</ul>\n<h1 id=\"日本語訳\"><a href=\"#日本語訳\" class=\"headerlink\" title=\"日本語訳\"></a>日本語訳</h1><h2 id=\"最初に\"><a href=\"#最初に\" class=\"headerlink\" title=\"最初に\"></a>最初に</h2><p>注意: <code>deoplete</code> は<code>Vim</code>で使用する場合でも <code>Neovim</code> (最新のものを推奨) が必要<br><code>Vimを使用する場合</code>Vimバージョン8.1以上 で <code>Python 3.6.1以上</code> と<code>timers</code>が有効になっている必要がある。</p>\n<p>注意: deopleteはmsgpackパッケージ1.0.0+を必要とします。pipでmsgpackパッケージをインストール/アップグレードしてください。<br><a href=\"https://github.com/msgpack/msgpack-python\">msgpack/msgpack-python</a></p>\n<p>注意: どうしても古い msgpack を使う必要がある場合は、代わりに deoplete ver.5.2 を使ってください。<br><a href=\"https://github.com/Shougo/deoplete.nvim/releases/tag/5.2\">Shougo/deoplete.vim</a></p>\n<h2 id=\"要件\"><a href=\"#要件\" class=\"headerlink\" title=\"要件\"></a>要件</h2><ul>\n<li>neovimをインストールしておく  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install --user pyvim</span><br></pre></td></tr></table></figure></li>\n<li>neovimでpython3が有効かを確認<ul>\n<li>nvimを起動して以下のコマンドで<code>1</code>が出るか確認<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:echo has(&quot;python3&quot;)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"vimrcに記述\"><a href=\"#vimrcに記述\" class=\"headerlink\" title=\".vimrcに記述\"></a>.vimrcに記述</h2><ol>\n<li>今回はプラグイン管理ツールの<code>Vundle</code>を使用する <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin &#39;Shougo&#x2F;deoplete.nvim&#39;</span><br><span class=\"line\">Plugin &#39;roxma&#x2F;nvim-yarp&#39;</span><br><span class=\"line\">Plugin &#39;roxma&#x2F;vim-hug-neovim-rpc&#39;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; deopleteをVim起動時に有効にする</span><br><span class=\"line\">let g:deoplete#enable_at_startup &#x3D; 1</span><br></pre></td></tr></table></figure></li>\n<li><code>:PluginInstall</code>でインストール </li>\n</ol>\n<h2 id=\"トラブル対応\"><a href=\"#トラブル対応\" class=\"headerlink\" title=\"トラブル対応\"></a>トラブル対応</h2><h3 id=\"ファイルを開くとエラーが表示される\"><a href=\"#ファイルを開くとエラーが表示される\" class=\"headerlink\" title=\"ファイルを開くとエラーが表示される\"></a>ファイルを開くとエラーが表示される</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[deoplete] deoplete failed to load. Try the :UpdateRemotePlugins command and restart Neovim. See also :checkhealth.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>参考サイト<br><a href=\"https://blog.fakiyer.com/entry/2018/11/20/101826\">deoplete.nvimのエラー解消</a></li>\n</ul>\n"},{"title":"【Shell】1つのコマンドで複数行入力する","date":"2021-04-15T19:52:14.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# echoコマンド\n通常`echo`コマンドを使用すると、1行をファイルに追記できます。\n\n\n新規ファイルに文字列を記述する場合\n```bash\n$ echo \"テスト\" > t.txt\n```\n\n既存のファイルに追記する\n```bash\n$ echo \"テスト\" >> t.txt\n```\n\n# 複数行をいっぺんに入力する「ヒアドキュメント」\nヒアドキュメントは特定の文字列が入力されるまで、まとめて入力としして扱う機能です。\n\n```bash\n$ cat << '終了文字列' > ファイル名\n```\n\n## 使用例\nt.txtに`EOF`が入力されるまで入力された文字列を追記する\n\n```bash\n$ cat << 'EOF' > t.txt\n```\n","source":"_posts/【Shell】1つのコマンドで複数行入力する.md","raw":"---\ntitle: 【Shell】1つのコマンドで複数行入力する\ndate: 2021-04-16 04:52:14\ntags:\n- Shell\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# echoコマンド\n通常`echo`コマンドを使用すると、1行をファイルに追記できます。\n\n\n新規ファイルに文字列を記述する場合\n```bash\n$ echo \"テスト\" > t.txt\n```\n\n既存のファイルに追記する\n```bash\n$ echo \"テスト\" >> t.txt\n```\n\n# 複数行をいっぺんに入力する「ヒアドキュメント」\nヒアドキュメントは特定の文字列が入力されるまで、まとめて入力としして扱う機能です。\n\n```bash\n$ cat << '終了文字列' > ファイル名\n```\n\n## 使用例\nt.txtに`EOF`が入力されるまで入力された文字列を追記する\n\n```bash\n$ cat << 'EOF' > t.txt\n```\n","slug":"【Shell】1つのコマンドで複数行入力する","published":1,"updated":"2021-04-12T21:09:30.451Z","_id":"cknf38imh00006tb680rrfw9k","comments":1,"layout":"post","photos":[],"link":"","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#echo%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\">echoコマンド</a></li>\n<li><a href=\"#%E8%A4%87%E6%95%B0%E8%A1%8C%E3%82%92%E3%81%84%E3%81%A3%E3%81%BA%E3%82%93%E3%81%AB%E5%85%A5%E5%8A%9B%E3%81%99%E3%82%8B%E3%83%92%E3%82%A2%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88\">複数行をいっぺんに入力する「ヒアドキュメント」</a><ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"echoコマンド\">echoコマンド</span></h1><p>通常<code>echo</code>コマンドを使用すると、1行をファイルに追記できます。</p>\n<p>新規ファイルに文字列を記述する場合</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;テスト&quot;</span> &gt; t.txt</span><br></pre></td></tr></table></figure>\n<p>既存のファイルに追記する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;テスト&quot;</span> &gt;&gt; t.txt</span><br></pre></td></tr></table></figure>\n<h1><span id=\"複数行をいっぺんに入力するヒアドキュメント\">複数行をいっぺんに入力する「ヒアドキュメント」</span></h1><p>ヒアドキュメントは特定の文字列が入力されるまで、まとめて入力としして扱う機能です。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat &lt;&lt; <span class=\"string\">&#x27;終了文字列&#x27;</span> &gt; ファイル名</span><br></pre></td></tr></table></figure>\n<h2><span id=\"使用例\">使用例</span></h2><p>t.txtに<code>EOF</code>が入力されるまで入力された文字列を追記する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat &lt;&lt; <span class=\"string\">&#x27;EOF&#x27;</span> &gt; t.txt</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#echo%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\">echoコマンド</a></li>\n<li><a href=\"#%E8%A4%87%E6%95%B0%E8%A1%8C%E3%82%92%E3%81%84%E3%81%A3%E3%81%BA%E3%82%93%E3%81%AB%E5%85%A5%E5%8A%9B%E3%81%99%E3%82%8B%E3%83%92%E3%82%A2%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88\">複数行をいっぺんに入力する「ヒアドキュメント」</a><ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"echoコマンド\"><a href=\"#echoコマンド\" class=\"headerlink\" title=\"echoコマンド\"></a>echoコマンド</h1><p>通常<code>echo</code>コマンドを使用すると、1行をファイルに追記できます。</p>\n<p>新規ファイルに文字列を記述する場合</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;テスト&quot;</span> &gt; t.txt</span><br></pre></td></tr></table></figure>\n<p>既存のファイルに追記する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;テスト&quot;</span> &gt;&gt; t.txt</span><br></pre></td></tr></table></figure>\n<h1 id=\"複数行をいっぺんに入力する「ヒアドキュメント」\"><a href=\"#複数行をいっぺんに入力する「ヒアドキュメント」\" class=\"headerlink\" title=\"複数行をいっぺんに入力する「ヒアドキュメント」\"></a>複数行をいっぺんに入力する「ヒアドキュメント」</h1><p>ヒアドキュメントは特定の文字列が入力されるまで、まとめて入力としして扱う機能です。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat &lt;&lt; <span class=\"string\">&#x27;終了文字列&#x27;</span> &gt; ファイル名</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用例\"><a href=\"#使用例\" class=\"headerlink\" title=\"使用例\"></a>使用例</h2><p>t.txtに<code>EOF</code>が入力されるまで入力された文字列を追記する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat &lt;&lt; <span class=\"string\">&#x27;EOF&#x27;</span> &gt; t.txt</span><br></pre></td></tr></table></figure>"},{"title":"【Shell】長いコマンドをわかりやすく入力する","date":"2021-04-16T20:47:37.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 長いコマンドを読みやすくする\nサブコマンドやスイッチを指定することでコマンドが長くなることがあります。そのままでは、読みにくくなってしまうので、`バックスラッシュ(\\)`を使うことで、複数の行に分割することができます。\n\nバックスラッシュは日本語環境では(\\)で表示されることがあります。\n\n## 使用例\n`\\`を入力数前にスペースを入力する必要があります。\n```\n$ git log \\\n\t--oneline \\\n\t--graph\n```\n\n","source":"_posts/【Shell】長いコマンドをわかりやすく入力する.md","raw":"---\ntitle: 【Shell】長いコマンドをわかりやすく入力する\ndate: 2021-04-17 05:47:37\ntags:\n- Shell\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 長いコマンドを読みやすくする\nサブコマンドやスイッチを指定することでコマンドが長くなることがあります。そのままでは、読みにくくなってしまうので、`バックスラッシュ(\\)`を使うことで、複数の行に分割することができます。\n\nバックスラッシュは日本語環境では(\\)で表示されることがあります。\n\n## 使用例\n`\\`を入力数前にスペースを入力する必要があります。\n```\n$ git log \\\n\t--oneline \\\n\t--graph\n```\n\n","slug":"【Shell】長いコマンドをわかりやすく入力する","published":1,"updated":"2021-04-12T21:09:08.804Z","_id":"cknf38in300016tb6b5ffbdwk","comments":1,"layout":"post","photos":[],"link":"","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E9%95%B7%E3%81%84%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E8%AA%AD%E3%81%BF%E3%82%84%E3%81%99%E3%81%8F%E3%81%99%E3%82%8B\">長いコマンドを読みやすくする</a><ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"長いコマンドを読みやすくする\">長いコマンドを読みやすくする</span></h1><p>サブコマンドやスイッチを指定することでコマンドが長くなることがあります。そのままでは、読みにくくなってしまうので、<code>バックスラッシュ(\\)</code>を使うことで、複数の行に分割することができます。</p>\n<p>バックスラッシュは日本語環境では()で表示されることがあります。</p>\n<h2><span id=\"使用例\">使用例</span></h2><p><code>\\</code>を入力数前にスペースを入力する必要があります。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log \\</span><br><span class=\"line\">\t--oneline \\</span><br><span class=\"line\">\t--graph</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E9%95%B7%E3%81%84%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E8%AA%AD%E3%81%BF%E3%82%84%E3%81%99%E3%81%8F%E3%81%99%E3%82%8B\">長いコマンドを読みやすくする</a><ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"長いコマンドを読みやすくする\"><a href=\"#長いコマンドを読みやすくする\" class=\"headerlink\" title=\"長いコマンドを読みやすくする\"></a>長いコマンドを読みやすくする</h1><p>サブコマンドやスイッチを指定することでコマンドが長くなることがあります。そのままでは、読みにくくなってしまうので、<code>バックスラッシュ(\\)</code>を使うことで、複数の行に分割することができます。</p>\n<p>バックスラッシュは日本語環境では()で表示されることがあります。</p>\n<h2 id=\"使用例\"><a href=\"#使用例\" class=\"headerlink\" title=\"使用例\"></a>使用例</h2><p><code>\\</code>を入力数前にスペースを入力する必要があります。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log \\</span><br><span class=\"line\">\t--oneline \\</span><br><span class=\"line\">\t--graph</span><br></pre></td></tr></table></figure>"},{"title":"【Gif】Gitで使えるgrepコマンド","date":"2021-04-14T21:57:38.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 特定のコミットメッセージのコミットを探す\n特定の文字列にマッチするコミットメッセージだけを表示させるには、`git log --grep`スイッチを使います。\n\n## 使用例\n`Fix`の文字列が含まれているコミットを見つける\n- `--grep=検索したい文字列`\n```bash\n$ git log --grep=Fix\n\ncommit b93d9bcf41deefc93306cbc1d77b049ac044db6f\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Sat Apr 3 10:18:57 2021 +0900\n\n    Fix EnemyInfo.cs to Load Json\n\ncommit 9dab8e9f4d6c49c912b138a6e0a7d53f210762c7\nAuthor: daiki_iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 30 08:54:42 2021 +0900\n\n    Fix EnemyManager.cs Downcast Error\n\ncommit 9140b13f20ee6aa20a1c7d519fce99f1dca447cf\nAuthor: daiki_iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 30 08:54:01 2021 +0900\n\n    Fix Mat_Orca.mat\n\n```\n\n# 特定の文字列を含むファイルを探す\n特定の文字列を含むファイルを探している場合は、`git grep`コマンドを使います。\n\n## 使用例\n`Orca`を含むファイルを探す\n- 検索するファイル名を指定する必要はなく、リポジトリ内のすべてのファイルから検索してくれる\n- 表示される内容 = ファイル名:指定した文字列を含んでいる１行\n```bash\n$ git grep Orca\n\nGitHubでブログを作成する.md:title: GitHubでブログを作成する(Hexo)\nGitHubでブログを作成する.md:- [GitHub]\nGitHubでブログを作成する.md:## 3. HexoにGit操作用ツールを追加\nGitHubでブログを作成する.md:# GitHubでブログ用のリポジトリを作成する\nGitHubでブログを作成する.md:username = GitHubのユーザー名\n```\n","source":"_posts/【Gif】Gitで使えるgrepコマンド.md","raw":"---\ntitle: 【Gif】Gitで使えるgrepコマンド\ndate: 2021-04-15 06:57:38\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 特定のコミットメッセージのコミットを探す\n特定の文字列にマッチするコミットメッセージだけを表示させるには、`git log --grep`スイッチを使います。\n\n## 使用例\n`Fix`の文字列が含まれているコミットを見つける\n- `--grep=検索したい文字列`\n```bash\n$ git log --grep=Fix\n\ncommit b93d9bcf41deefc93306cbc1d77b049ac044db6f\nAuthor: Daiki-Iijima <daiki.applecreate@gmail.com>\nDate:   Sat Apr 3 10:18:57 2021 +0900\n\n    Fix EnemyInfo.cs to Load Json\n\ncommit 9dab8e9f4d6c49c912b138a6e0a7d53f210762c7\nAuthor: daiki_iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 30 08:54:42 2021 +0900\n\n    Fix EnemyManager.cs Downcast Error\n\ncommit 9140b13f20ee6aa20a1c7d519fce99f1dca447cf\nAuthor: daiki_iijima <daiki.applecreate@gmail.com>\nDate:   Tue Mar 30 08:54:01 2021 +0900\n\n    Fix Mat_Orca.mat\n\n```\n\n# 特定の文字列を含むファイルを探す\n特定の文字列を含むファイルを探している場合は、`git grep`コマンドを使います。\n\n## 使用例\n`Orca`を含むファイルを探す\n- 検索するファイル名を指定する必要はなく、リポジトリ内のすべてのファイルから検索してくれる\n- 表示される内容 = ファイル名:指定した文字列を含んでいる１行\n```bash\n$ git grep Orca\n\nGitHubでブログを作成する.md:title: GitHubでブログを作成する(Hexo)\nGitHubでブログを作成する.md:- [GitHub]\nGitHubでブログを作成する.md:## 3. HexoにGit操作用ツールを追加\nGitHubでブログを作成する.md:# GitHubでブログ用のリポジトリを作成する\nGitHubでブログを作成する.md:username = GitHubのユーザー名\n```\n","slug":"【Gif】Gitで使えるgrepコマンド","published":1,"updated":"2021-04-12T22:10:59.788Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknflkxtf0000rwb6fdrudjzi","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E7%89%B9%E5%AE%9A%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%92%E6%8E%A2%E3%81%99\">特定のコミットメッセージのコミットを探す</a><ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%89%B9%E5%AE%9A%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E5%90%AB%E3%82%80%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E6%8E%A2%E3%81%99\">特定の文字列を含むファイルを探す</a><ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-1\">使用例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"特定のコミットメッセージのコミットを探す\">特定のコミットメッセージのコミットを探す</span></h1><p>特定の文字列にマッチするコミットメッセージだけを表示させるには、<code>git log --grep</code>スイッチを使います。</p>\n<h2><span id=\"使用例\">使用例</span></h2><p><code>Fix</code>の文字列が含まれているコミットを見つける</p>\n<ul>\n<li><code>--grep=検索したい文字列</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span> --grep=Fix</span><br><span class=\"line\"></span><br><span class=\"line\">commit b93d9bcf41deefc93306cbc1d77b049ac044db6f</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Sat Apr 3 10:18:57 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Fix EnemyInfo.cs to Load Json</span><br><span class=\"line\"></span><br><span class=\"line\">commit 9dab8e9f4d6c49c912b138a6e0a7d53f210762c7</span><br><span class=\"line\">Author: daiki_iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 30 08:54:42 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Fix EnemyManager.cs Downcast Error</span><br><span class=\"line\"></span><br><span class=\"line\">commit 9140b13f20ee6aa20a1c7d519fce99f1dca447cf</span><br><span class=\"line\">Author: daiki_iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 30 08:54:01 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Fix Mat_Orca.mat</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1><span id=\"特定の文字列を含むファイルを探す\">特定の文字列を含むファイルを探す</span></h1>特定の文字列を含むファイルを探している場合は、<code>git grep</code>コマンドを使います。</li>\n</ul>\n<h2><span id=\"使用例\">使用例</span></h2><p><code>Orca</code>を含むファイルを探す</p>\n<ul>\n<li>検索するファイル名を指定する必要はなく、リポジトリ内のすべてのファイルから検索してくれる</li>\n<li>表示される内容 = ファイル名:指定した文字列を含んでいる１行<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git grep Orca</span><br><span class=\"line\"></span><br><span class=\"line\">GitHubでブログを作成する.md:title: GitHubでブログを作成する(Hexo)</span><br><span class=\"line\">GitHubでブログを作成する.md:- [GitHub]</span><br><span class=\"line\">GitHubでブログを作成する.md:<span class=\"comment\">## 3. HexoにGit操作用ツールを追加</span></span><br><span class=\"line\">GitHubでブログを作成する.md:<span class=\"comment\"># GitHubでブログ用のリポジトリを作成する</span></span><br><span class=\"line\">GitHubでブログを作成する.md:username = GitHubのユーザー名</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E7%89%B9%E5%AE%9A%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%92%E6%8E%A2%E3%81%99\">特定のコミットメッセージのコミットを探す</a><ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%89%B9%E5%AE%9A%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E5%90%AB%E3%82%80%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E6%8E%A2%E3%81%99\">特定の文字列を含むファイルを探す</a><ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-1\">使用例</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"特定のコミットメッセージのコミットを探す\"><a href=\"#特定のコミットメッセージのコミットを探す\" class=\"headerlink\" title=\"特定のコミットメッセージのコミットを探す\"></a>特定のコミットメッセージのコミットを探す</h1><p>特定の文字列にマッチするコミットメッセージだけを表示させるには、<code>git log --grep</code>スイッチを使います。</p>\n<h2 id=\"使用例\"><a href=\"#使用例\" class=\"headerlink\" title=\"使用例\"></a>使用例</h2><p><code>Fix</code>の文字列が含まれているコミットを見つける</p>\n<ul>\n<li><code>--grep=検索したい文字列</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span> --grep=Fix</span><br><span class=\"line\"></span><br><span class=\"line\">commit b93d9bcf41deefc93306cbc1d77b049ac044db6f</span><br><span class=\"line\">Author: Daiki-Iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Sat Apr 3 10:18:57 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Fix EnemyInfo.cs to Load Json</span><br><span class=\"line\"></span><br><span class=\"line\">commit 9dab8e9f4d6c49c912b138a6e0a7d53f210762c7</span><br><span class=\"line\">Author: daiki_iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 30 08:54:42 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Fix EnemyManager.cs Downcast Error</span><br><span class=\"line\"></span><br><span class=\"line\">commit 9140b13f20ee6aa20a1c7d519fce99f1dca447cf</span><br><span class=\"line\">Author: daiki_iijima &lt;daiki.applecreate@gmail.com&gt;</span><br><span class=\"line\">Date:   Tue Mar 30 08:54:01 2021 +0900</span><br><span class=\"line\"></span><br><span class=\"line\">    Fix Mat_Orca.mat</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"特定の文字列を含むファイルを探す\"><a href=\"#特定の文字列を含むファイルを探す\" class=\"headerlink\" title=\"特定の文字列を含むファイルを探す\"></a>特定の文字列を含むファイルを探す</h1>特定の文字列を含むファイルを探している場合は、<code>git grep</code>コマンドを使います。</li>\n</ul>\n<h2 id=\"使用例-1\"><a href=\"#使用例-1\" class=\"headerlink\" title=\"使用例\"></a>使用例</h2><p><code>Orca</code>を含むファイルを探す</p>\n<ul>\n<li>検索するファイル名を指定する必要はなく、リポジトリ内のすべてのファイルから検索してくれる</li>\n<li>表示される内容 = ファイル名:指定した文字列を含んでいる１行<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git grep Orca</span><br><span class=\"line\"></span><br><span class=\"line\">GitHubでブログを作成する.md:title: GitHubでブログを作成する(Hexo)</span><br><span class=\"line\">GitHubでブログを作成する.md:- [GitHub]</span><br><span class=\"line\">GitHubでブログを作成する.md:<span class=\"comment\">## 3. HexoにGit操作用ツールを追加</span></span><br><span class=\"line\">GitHubでブログを作成する.md:<span class=\"comment\"># GitHubでブログ用のリポジトリを作成する</span></span><br><span class=\"line\">GitHubでブログを作成する.md:username = GitHubのユーザー名</span><br></pre></td></tr></table></figure></li>\n</ul>"},{"title":"【GitHub】既存のローカルリポジトリをGitHubで管理する","date":"2021-04-21T14:55:38.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 操作手順\n\n今回は、解説のために`test`リポジトリをGitHub上に作成します。\n\n## 1. GitHubで管理用リポジトリを作成する\nGitHubからクローンしてくるときのURLを取得する\n\n![GitHub画面](/2021/04/21/【GitHub】既存のローカルリポジトリをGitHubで管理する/GitHub画面.png \"GitHub画面\")\n\n## 2. ローカルリポジトリにリモートリポジトリを追加する\n`git remote add origin URL`を使用してローカルリポジトリにベアリポジトリを紐付ける\n\n```bash\n$ git remote add origin https://github.com/Daiki-Iijima/test.git\n```\n## 3. ブランチをGitHubに合わせる\n現在いるブランチをmaster(main)ブランチに変更すします。これは、GitHubの仕様変更で、デフォルトブランチが`master`から`main`に変わったことによる対応です。\n\n`-M`: 今いるブランチ名を強制的に`main`に変更します。\n```bash\n$ git branch -M main\n```\n\n## 4. ローカルリポジトリのブランチをpushする\nブランチをリモートリポジトリに反映しながら`push`します。\n\n```bash\n$ git push -u origin main\n```\n\n","source":"_posts/【GitHub】既存のローカルリポジトリをGitHubで管理する.md","raw":"---\ntitle: 【GitHub】既存のローカルリポジトリをGitHubで管理する\ndate: 2021-04-21 23:55:38\ntags:\n- Git\n- GitHub\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 操作手順\n\n今回は、解説のために`test`リポジトリをGitHub上に作成します。\n\n## 1. GitHubで管理用リポジトリを作成する\nGitHubからクローンしてくるときのURLを取得する\n\n![GitHub画面](/2021/04/21/【GitHub】既存のローカルリポジトリをGitHubで管理する/GitHub画面.png \"GitHub画面\")\n\n## 2. ローカルリポジトリにリモートリポジトリを追加する\n`git remote add origin URL`を使用してローカルリポジトリにベアリポジトリを紐付ける\n\n```bash\n$ git remote add origin https://github.com/Daiki-Iijima/test.git\n```\n## 3. ブランチをGitHubに合わせる\n現在いるブランチをmaster(main)ブランチに変更すします。これは、GitHubの仕様変更で、デフォルトブランチが`master`から`main`に変わったことによる対応です。\n\n`-M`: 今いるブランチ名を強制的に`main`に変更します。\n```bash\n$ git branch -M main\n```\n\n## 4. ローカルリポジトリのブランチをpushする\nブランチをリモートリポジトリに反映しながら`push`します。\n\n```bash\n$ git push -u origin main\n```\n\n","slug":"【GitHub】既存のローカルリポジトリをGitHubで管理する","published":1,"updated":"2021-04-13T05:27:07.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknflkxu60001rwb658le4li8","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E6%93%8D%E4%BD%9C%E6%89%8B%E9%A0%86\">操作手順</a><ul>\n<li><a href=\"#1-github%E3%81%A7%E7%AE%A1%E7%90%86%E7%94%A8%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\">1. GitHubで管理用リポジトリを作成する</a></li>\n<li><a href=\"#2-%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\">2. ローカルリポジトリにリモートリポジトリを追加する</a></li>\n<li><a href=\"#3-%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92github%E3%81%AB%E5%90%88%E3%82%8F%E3%81%9B%E3%82%8B\">3. ブランチをGitHubに合わせる</a></li>\n<li><a href=\"#4-%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92push%E3%81%99%E3%82%8B\">4. ローカルリポジトリのブランチをpushする</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"操作手順\">操作手順</span></h1><p>今回は、解説のために<code>test</code>リポジトリをGitHub上に作成します。</p>\n<h2><span id=\"1-githubで管理用リポジトリを作成する\">1. GitHubで管理用リポジトリを作成する</span></h2><p>GitHubからクローンしてくるときのURLを取得する</p>\n<p><img src=\"/2021/04/21/%E3%80%90GitHub%E3%80%91%E6%97%A2%E5%AD%98%E3%81%AE%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92GitHub%E3%81%A7%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B/GitHub%E7%94%BB%E9%9D%A2.png\" alt=\"GitHub画面\" title=\"GitHub画面\"></p>\n<h2><span id=\"2-ローカルリポジトリにリモートリポジトリを追加する\">2. ローカルリポジトリにリモートリポジトリを追加する</span></h2><p><code>git remote add origin URL</code>を使用してローカルリポジトリにベアリポジトリを紐付ける</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote add origin https://github.com/Daiki-Iijima/test.git</span><br></pre></td></tr></table></figure>\n<h2><span id=\"3-ブランチをgithubに合わせる\">3. ブランチをGitHubに合わせる</span></h2><p>現在いるブランチをmaster(main)ブランチに変更すします。これは、GitHubの仕様変更で、デフォルトブランチが<code>master</code>から<code>main</code>に変わったことによる対応です。</p>\n<p><code>-M</code>: 今いるブランチ名を強制的に<code>main</code>に変更します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -M main</span><br></pre></td></tr></table></figure>\n<h2><span id=\"4-ローカルリポジトリのブランチをpushする\">4. ローカルリポジトリのブランチをpushする</span></h2><p>ブランチをリモートリポジトリに反映しながら<code>push</code>します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push -u origin main</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E6%93%8D%E4%BD%9C%E6%89%8B%E9%A0%86\">操作手順</a><ul>\n<li><a href=\"#1-github%E3%81%A7%E7%AE%A1%E7%90%86%E7%94%A8%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\">1. GitHubで管理用リポジトリを作成する</a></li>\n<li><a href=\"#2-%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\">2. ローカルリポジトリにリモートリポジトリを追加する</a></li>\n<li><a href=\"#3-%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92github%E3%81%AB%E5%90%88%E3%82%8F%E3%81%9B%E3%82%8B\">3. ブランチをGitHubに合わせる</a></li>\n<li><a href=\"#4-%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92push%E3%81%99%E3%82%8B\">4. ローカルリポジトリのブランチをpushする</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"操作手順\"><a href=\"#操作手順\" class=\"headerlink\" title=\"操作手順\"></a>操作手順</h1><p>今回は、解説のために<code>test</code>リポジトリをGitHub上に作成します。</p>\n<h2 id=\"1-GitHubで管理用リポジトリを作成する\"><a href=\"#1-GitHubで管理用リポジトリを作成する\" class=\"headerlink\" title=\"1. GitHubで管理用リポジトリを作成する\"></a>1. GitHubで管理用リポジトリを作成する</h2><p>GitHubからクローンしてくるときのURLを取得する</p>\n<p><img src=\"/2021/04/21/%E3%80%90GitHub%E3%80%91%E6%97%A2%E5%AD%98%E3%81%AE%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92GitHub%E3%81%A7%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B/GitHub%E7%94%BB%E9%9D%A2.png\" alt=\"GitHub画面\" title=\"GitHub画面\"></p>\n<h2 id=\"2-ローカルリポジトリにリモートリポジトリを追加する\"><a href=\"#2-ローカルリポジトリにリモートリポジトリを追加する\" class=\"headerlink\" title=\"2. ローカルリポジトリにリモートリポジトリを追加する\"></a>2. ローカルリポジトリにリモートリポジトリを追加する</h2><p><code>git remote add origin URL</code>を使用してローカルリポジトリにベアリポジトリを紐付ける</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote add origin https://github.com/Daiki-Iijima/test.git</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-ブランチをGitHubに合わせる\"><a href=\"#3-ブランチをGitHubに合わせる\" class=\"headerlink\" title=\"3. ブランチをGitHubに合わせる\"></a>3. ブランチをGitHubに合わせる</h2><p>現在いるブランチをmaster(main)ブランチに変更すします。これは、GitHubの仕様変更で、デフォルトブランチが<code>master</code>から<code>main</code>に変わったことによる対応です。</p>\n<p><code>-M</code>: 今いるブランチ名を強制的に<code>main</code>に変更します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -M main</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-ローカルリポジトリのブランチをpushする\"><a href=\"#4-ローカルリポジトリのブランチをpushする\" class=\"headerlink\" title=\"4. ローカルリポジトリのブランチをpushする\"></a>4. ローカルリポジトリのブランチをpushする</h2><p>ブランチをリモートリポジトリに反映しながら<code>push</code>します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push -u origin main</span><br></pre></td></tr></table></figure>"},{"title":"【Git】rebaseを使うとき","date":"2021-04-18T22:57:51.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# ローカルリポジトリかつローカルブランチのときに使うようにしよう\nリベースコマンドは、既存のコミットを書き換えることができる強力なコマンドで、書き換えたコミットのSHA1が書き換わってしまうので、すでにPushしてあるコミットに対してリベースを行ってしまうと、他の作業者ローカルリポジトリとの整合性が取れなくなってしまいとても面倒くさい事になってしまいます。\n\nなので、リベースコマンドを使用するときは、影響範囲が狭い、ローカルリポジトリのローカルブランチ(開発用ブランチ)のみに使用する用にしましょう。\n\n# 利用ケース1 : コミット履歴の整理\n開発が終了して、マスターブランチにマージする前に今までのローカルブランチのコミット履歴の中で、冗長なコミットをスカッシュ(squash:潰して合成)するために使用します。\n\n## 冗長なコミットとは？\n- typeの修正\n- コミット忘れの追加コミット\nなど\n\n## 使用例\n1. まとめたいコミットのSHA1を探す\n今回は、`2,3の追加`に`4,5,の追加`をスカッシュするので、`2,3の追加`の１つ前のコミットSHA1を探す\n```bash\n$ git log --oneline\n\n5b57433 (HEAD -> master) 4,5の追加\n52f0632 2,3の追加\n61e4e43 1の追加\n```\n\n2. リベースを行う\n-i : interactive\n```bash\n$ git rebase -i 61e4e43\n```\n\n3. スカッシュする\n以下のようなエディタ画面が表示される\n```bash\npick 52f0632 2,3の追加\npick 5b57433 4,5の追加\n\n# Rebase 61e4e43..5b57433 onto 61e4e43 (2 commands)\n#\n# Commands:\n# p, pick <commit> = use commit\n# r, reword <commit> = use commit, but edit the commit message\n# e, edit <commit> = use commit, but stop for amending\n# s, squash <commit> = use commit, but meld into previous commit\n# f, fixup <commit> = like \"squash\", but discard this commit's log message\n# x, exec <command> = run command (the rest of the line) using shell\n# b, break = stop here (continue rebase later with 'git rebase --continue')\n# d, drop <commit> = remove commit\n# l, label <label> = label current HEAD with a name\n# t, reset <label> = reset HEAD to a label\n# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n# .       create a merge commit using the original merge commit's\n# .       message (or the oneline, if no original merge commit was\n# .       specified). Use -c <commit> to reword the commit message.\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n```\n\n`pick 5b7433`の部分を`squash 5b7433`に書き換えて、保存終了(vimの場合、ZZ)\n\n```bash\npick 52f0632 2,3の追加\nsquash 5b57433 4,5の追加\n\n# Rebase 61e4e43..5b57433 onto 61e4e43 (2 commands)\n#\n# Commands:\n# p, pick <commit> = use commit\n# r, reword <commit> = use commit, but edit the commit message\n# e, edit <commit> = use commit, but stop for amending\n# s, squash <commit> = use commit, but meld into previous commit\n# f, fixup <commit> = like \"squash\", but discard this commit's log message\n# x, exec <command> = run command (the rest of the line) using shell\n# b, break = stop here (continue rebase later with 'git rebase --continue')\n# d, drop <commit> = remove commit\n# l, label <label> = label current HEAD with a name\n# t, reset <label> = reset HEAD to a label\n# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n# .       create a merge commit using the original merge commit's\n# .       message (or the oneline, if no original merge commit was\n# .       specified). Use -c <commit> to reword the commit message.\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n```\n\n4. コミットメッセージを編集する\nsquashするコミットを選択してエディタを終了すると、以下のような画面が表示される\n```bash\n# This is a combination of 2 commits.\n# This is the 1st commit message:\n\n2,3の追加\n\n# This is the commit message #2:\n\n4,5の追加\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# Date:      Tue Apr 13 09:19:56 2021 +0900\n#\n# interactive rebase in progress; onto 61e4e43\n# Last commands done (2 commands done):\n#    pick 52f0632 2,3の追加\n#    squash 5b57433 4,5の追加\n# No commands remaining.\n# You are currently rebasing branch 'master' on '61e4e43'.\n#\n# Changes to be committed:\n#\tnew file:   2\n#\tnew file:   3\n#\tnew file:   4\n#\tnew file:   5\n#\n\n```\n\n`# This is the`となっている部分を消去して、新しいコミットメッセージを入力して、保存終了(vimの場合、ZZ)\n\n```bash\n# This is a combination of 2 commits.\n\n2,3,4,5の追加\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# Date:      Tue Apr 13 09:19:56 2021 +0900\n#\n# interactive rebase in progress; onto 61e4e43\n# Last commands done (2 commands done):\n#    pick 52f0632 2,3の追加\n#    squash 5b57433 4,5の追加\n# No commands remaining.\n# You are currently rebasing branch 'master' on '61e4e43'.\n#\n# Changes to be committed:\n#\tnew file:   2\n#\tnew file:   3\n#\tnew file:   4\n#\tnew file:   5\n#\n```\n\n5. git logでコミットを確認して１つになっていれば完了\n```bash\n$ git log --oneline\n\n8a0979f (HEAD -> master) 2,3,4,5の追加\n61e4e43 1の追加\n```\n\n### 中止したいとき\n```bash\n$ git rebase --abort\n```\n\n# 利用ケース2 : ブランチの親の変更を取り込む\nローカルブランチの開始地点を変更することで、更新のあった親ブランチの変更を取り込んむたくなるときに使用します。\n\n```bash\n$ git rebase master\n```\n","source":"_posts/【Git】rebaseを使うとき.md","raw":"---\ntitle: 【Git】rebaseを使うとき\ndate: 2021-04-19 07:57:51\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# ローカルリポジトリかつローカルブランチのときに使うようにしよう\nリベースコマンドは、既存のコミットを書き換えることができる強力なコマンドで、書き換えたコミットのSHA1が書き換わってしまうので、すでにPushしてあるコミットに対してリベースを行ってしまうと、他の作業者ローカルリポジトリとの整合性が取れなくなってしまいとても面倒くさい事になってしまいます。\n\nなので、リベースコマンドを使用するときは、影響範囲が狭い、ローカルリポジトリのローカルブランチ(開発用ブランチ)のみに使用する用にしましょう。\n\n# 利用ケース1 : コミット履歴の整理\n開発が終了して、マスターブランチにマージする前に今までのローカルブランチのコミット履歴の中で、冗長なコミットをスカッシュ(squash:潰して合成)するために使用します。\n\n## 冗長なコミットとは？\n- typeの修正\n- コミット忘れの追加コミット\nなど\n\n## 使用例\n1. まとめたいコミットのSHA1を探す\n今回は、`2,3の追加`に`4,5,の追加`をスカッシュするので、`2,3の追加`の１つ前のコミットSHA1を探す\n```bash\n$ git log --oneline\n\n5b57433 (HEAD -> master) 4,5の追加\n52f0632 2,3の追加\n61e4e43 1の追加\n```\n\n2. リベースを行う\n-i : interactive\n```bash\n$ git rebase -i 61e4e43\n```\n\n3. スカッシュする\n以下のようなエディタ画面が表示される\n```bash\npick 52f0632 2,3の追加\npick 5b57433 4,5の追加\n\n# Rebase 61e4e43..5b57433 onto 61e4e43 (2 commands)\n#\n# Commands:\n# p, pick <commit> = use commit\n# r, reword <commit> = use commit, but edit the commit message\n# e, edit <commit> = use commit, but stop for amending\n# s, squash <commit> = use commit, but meld into previous commit\n# f, fixup <commit> = like \"squash\", but discard this commit's log message\n# x, exec <command> = run command (the rest of the line) using shell\n# b, break = stop here (continue rebase later with 'git rebase --continue')\n# d, drop <commit> = remove commit\n# l, label <label> = label current HEAD with a name\n# t, reset <label> = reset HEAD to a label\n# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n# .       create a merge commit using the original merge commit's\n# .       message (or the oneline, if no original merge commit was\n# .       specified). Use -c <commit> to reword the commit message.\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n```\n\n`pick 5b7433`の部分を`squash 5b7433`に書き換えて、保存終了(vimの場合、ZZ)\n\n```bash\npick 52f0632 2,3の追加\nsquash 5b57433 4,5の追加\n\n# Rebase 61e4e43..5b57433 onto 61e4e43 (2 commands)\n#\n# Commands:\n# p, pick <commit> = use commit\n# r, reword <commit> = use commit, but edit the commit message\n# e, edit <commit> = use commit, but stop for amending\n# s, squash <commit> = use commit, but meld into previous commit\n# f, fixup <commit> = like \"squash\", but discard this commit's log message\n# x, exec <command> = run command (the rest of the line) using shell\n# b, break = stop here (continue rebase later with 'git rebase --continue')\n# d, drop <commit> = remove commit\n# l, label <label> = label current HEAD with a name\n# t, reset <label> = reset HEAD to a label\n# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n# .       create a merge commit using the original merge commit's\n# .       message (or the oneline, if no original merge commit was\n# .       specified). Use -c <commit> to reword the commit message.\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n```\n\n4. コミットメッセージを編集する\nsquashするコミットを選択してエディタを終了すると、以下のような画面が表示される\n```bash\n# This is a combination of 2 commits.\n# This is the 1st commit message:\n\n2,3の追加\n\n# This is the commit message #2:\n\n4,5の追加\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# Date:      Tue Apr 13 09:19:56 2021 +0900\n#\n# interactive rebase in progress; onto 61e4e43\n# Last commands done (2 commands done):\n#    pick 52f0632 2,3の追加\n#    squash 5b57433 4,5の追加\n# No commands remaining.\n# You are currently rebasing branch 'master' on '61e4e43'.\n#\n# Changes to be committed:\n#\tnew file:   2\n#\tnew file:   3\n#\tnew file:   4\n#\tnew file:   5\n#\n\n```\n\n`# This is the`となっている部分を消去して、新しいコミットメッセージを入力して、保存終了(vimの場合、ZZ)\n\n```bash\n# This is a combination of 2 commits.\n\n2,3,4,5の追加\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# Date:      Tue Apr 13 09:19:56 2021 +0900\n#\n# interactive rebase in progress; onto 61e4e43\n# Last commands done (2 commands done):\n#    pick 52f0632 2,3の追加\n#    squash 5b57433 4,5の追加\n# No commands remaining.\n# You are currently rebasing branch 'master' on '61e4e43'.\n#\n# Changes to be committed:\n#\tnew file:   2\n#\tnew file:   3\n#\tnew file:   4\n#\tnew file:   5\n#\n```\n\n5. git logでコミットを確認して１つになっていれば完了\n```bash\n$ git log --oneline\n\n8a0979f (HEAD -> master) 2,3,4,5の追加\n61e4e43 1の追加\n```\n\n### 中止したいとき\n```bash\n$ git rebase --abort\n```\n\n# 利用ケース2 : ブランチの親の変更を取り込む\nローカルブランチの開始地点を変更することで、更新のあった親ブランチの変更を取り込んむたくなるときに使用します。\n\n```bash\n$ git rebase master\n```\n","slug":"【Git】rebaseを使うとき","published":1,"updated":"2021-04-13T00:46:04.802Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknflkxug0005rwb60e64dm81","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%8B%E3%81%A4%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AE%E3%81%A8%E3%81%8D%E3%81%AB%E4%BD%BF%E3%81%86%E3%82%88%E3%81%86%E3%81%AB%E3%81%97%E3%82%88%E3%81%86\">ローカルリポジトリかつローカルブランチのときに使うようにしよう</a></li>\n<li><a href=\"#%E5%88%A9%E7%94%A8%E3%82%B1%E3%83%BC%E3%82%B91-%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E5%B1%A5%E6%AD%B4%E3%81%AE%E6%95%B4%E7%90%86\">利用ケース1 : コミット履歴の整理</a><ul>\n<li><a href=\"#%E5%86%97%E9%95%B7%E3%81%AA%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A8%E3%81%AF\">冗長なコミットとは？</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a><ul>\n<li><a href=\"#%E4%B8%AD%E6%AD%A2%E3%81%97%E3%81%9F%E3%81%84%E3%81%A8%E3%81%8D\">中止したいとき</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E5%88%A9%E7%94%A8%E3%82%B1%E3%83%BC%E3%82%B92-%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AE%E8%A6%AA%E3%81%AE%E5%A4%89%E6%9B%B4%E3%82%92%E5%8F%96%E3%82%8A%E8%BE%BC%E3%82%80\">利用ケース2 : ブランチの親の変更を取り込む</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"ローカルリポジトリかつローカルブランチのときに使うようにしよう\">ローカルリポジトリかつローカルブランチのときに使うようにしよう</span></h1><p>リベースコマンドは、既存のコミットを書き換えることができる強力なコマンドで、書き換えたコミットのSHA1が書き換わってしまうので、すでにPushしてあるコミットに対してリベースを行ってしまうと、他の作業者ローカルリポジトリとの整合性が取れなくなってしまいとても面倒くさい事になってしまいます。</p>\n<p>なので、リベースコマンドを使用するときは、影響範囲が狭い、ローカルリポジトリのローカルブランチ(開発用ブランチ)のみに使用する用にしましょう。</p>\n<h1><span id=\"利用ケース1-コミット履歴の整理\">利用ケース1 : コミット履歴の整理</span></h1><p>開発が終了して、マスターブランチにマージする前に今までのローカルブランチのコミット履歴の中で、冗長なコミットをスカッシュ(squash:潰して合成)するために使用します。</p>\n<h2><span id=\"冗長なコミットとは\">冗長なコミットとは？</span></h2><ul>\n<li>typeの修正</li>\n<li>コミット忘れの追加コミット<br>など</li>\n</ul>\n<h2><span id=\"使用例\">使用例</span></h2><ol>\n<li>まとめたいコミットのSHA1を探す<br>今回は、<code>2,3の追加</code>に<code>4,5,の追加</code>をスカッシュするので、<code>2,3の追加</code>の１つ前のコミットSHA1を探す<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline</span><br><span class=\"line\"></span><br><span class=\"line\">5b57433 (HEAD -&gt; master) 4,5の追加</span><br><span class=\"line\">52f0632 2,3の追加</span><br><span class=\"line\">61e4e43 1の追加</span><br></pre></td></tr></table></figure></li>\n<li>リベースを行う</li>\n</ol>\n<p>-i : interactive</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git rebase -i 61e4e43</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>スカッシュする<br>以下のようなエディタ画面が表示される<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pick 52f0632 2,3の追加</span><br><span class=\"line\">pick 5b57433 4,5の追加</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Rebase 61e4e43..5b57433 onto 61e4e43 (2 commands)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Commands:</span></span><br><span class=\"line\"><span class=\"comment\"># p, pick &lt;commit&gt; = use commit</span></span><br><span class=\"line\"><span class=\"comment\"># r, reword &lt;commit&gt; = use commit, but edit the commit message</span></span><br><span class=\"line\"><span class=\"comment\"># e, edit &lt;commit&gt; = use commit, but stop for amending</span></span><br><span class=\"line\"><span class=\"comment\"># s, squash &lt;commit&gt; = use commit, but meld into previous commit</span></span><br><span class=\"line\"><span class=\"comment\"># f, fixup &lt;commit&gt; = like &quot;squash&quot;, but discard this commit&#x27;s log message</span></span><br><span class=\"line\"><span class=\"comment\"># x, exec &lt;command&gt; = run command (the rest of the line) using shell</span></span><br><span class=\"line\"><span class=\"comment\"># b, break = stop here (continue rebase later with &#x27;git rebase --continue&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># d, drop &lt;commit&gt; = remove commit</span></span><br><span class=\"line\"><span class=\"comment\"># l, label &lt;label&gt; = label current HEAD with a name</span></span><br><span class=\"line\"><span class=\"comment\"># t, reset &lt;label&gt; = reset HEAD to a label</span></span><br><span class=\"line\"><span class=\"comment\"># m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [# &lt;oneline&gt;]</span></span><br><span class=\"line\"><span class=\"comment\"># .       create a merge commit using the original merge commit&#x27;s</span></span><br><span class=\"line\"><span class=\"comment\"># .       message (or the oneline, if no original merge commit was</span></span><br><span class=\"line\"><span class=\"comment\"># .       specified). Use -c &lt;commit&gt; to reword the commit message.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<code>pick 5b7433</code>の部分を<code>squash 5b7433</code>に書き換えて、保存終了(vimの場合、ZZ)</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pick 52f0632 2,3の追加</span><br><span class=\"line\">squash 5b57433 4,5の追加</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Rebase 61e4e43..5b57433 onto 61e4e43 (2 commands)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Commands:</span></span><br><span class=\"line\"><span class=\"comment\"># p, pick &lt;commit&gt; = use commit</span></span><br><span class=\"line\"><span class=\"comment\"># r, reword &lt;commit&gt; = use commit, but edit the commit message</span></span><br><span class=\"line\"><span class=\"comment\"># e, edit &lt;commit&gt; = use commit, but stop for amending</span></span><br><span class=\"line\"><span class=\"comment\"># s, squash &lt;commit&gt; = use commit, but meld into previous commit</span></span><br><span class=\"line\"><span class=\"comment\"># f, fixup &lt;commit&gt; = like &quot;squash&quot;, but discard this commit&#x27;s log message</span></span><br><span class=\"line\"><span class=\"comment\"># x, exec &lt;command&gt; = run command (the rest of the line) using shell</span></span><br><span class=\"line\"><span class=\"comment\"># b, break = stop here (continue rebase later with &#x27;git rebase --continue&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># d, drop &lt;commit&gt; = remove commit</span></span><br><span class=\"line\"><span class=\"comment\"># l, label &lt;label&gt; = label current HEAD with a name</span></span><br><span class=\"line\"><span class=\"comment\"># t, reset &lt;label&gt; = reset HEAD to a label</span></span><br><span class=\"line\"><span class=\"comment\"># m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [# &lt;oneline&gt;]</span></span><br><span class=\"line\"><span class=\"comment\"># .       create a merge commit using the original merge commit&#x27;s</span></span><br><span class=\"line\"><span class=\"comment\"># .       message (or the oneline, if no original merge commit was</span></span><br><span class=\"line\"><span class=\"comment\"># .       specified). Use -c &lt;commit&gt; to reword the commit message.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>コミットメッセージを編集する<br>squashするコミットを選択してエディタを終了すると、以下のような画面が表示される<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># This is a combination of 2 commits.</span></span><br><span class=\"line\"><span class=\"comment\"># This is the 1st commit message:</span></span><br><span class=\"line\"></span><br><span class=\"line\">2,3の追加</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># This is the commit message #2:</span></span><br><span class=\"line\"></span><br><span class=\"line\">4,5の追加</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Please enter the commit message for your changes. Lines starting</span></span><br><span class=\"line\"><span class=\"comment\"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Date:      Tue Apr 13 09:19:56 2021 +0900</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># interactive rebase in progress; onto 61e4e43</span></span><br><span class=\"line\"><span class=\"comment\"># Last commands done (2 commands done):</span></span><br><span class=\"line\"><span class=\"comment\">#    pick 52f0632 2,3の追加</span></span><br><span class=\"line\"><span class=\"comment\">#    squash 5b57433 4,5の追加</span></span><br><span class=\"line\"><span class=\"comment\"># No commands remaining.</span></span><br><span class=\"line\"><span class=\"comment\"># You are currently rebasing branch &#x27;master&#x27; on &#x27;61e4e43&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Changes to be committed:</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   2</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   3</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   4</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   5</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<code># This is the</code>となっている部分を消去して、新しいコミットメッセージを入力して、保存終了(vimの場合、ZZ)</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># This is a combination of 2 commits.</span></span><br><span class=\"line\"></span><br><span class=\"line\">2,3,4,5の追加</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Please enter the commit message for your changes. Lines starting</span></span><br><span class=\"line\"><span class=\"comment\"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Date:      Tue Apr 13 09:19:56 2021 +0900</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># interactive rebase in progress; onto 61e4e43</span></span><br><span class=\"line\"><span class=\"comment\"># Last commands done (2 commands done):</span></span><br><span class=\"line\"><span class=\"comment\">#    pick 52f0632 2,3の追加</span></span><br><span class=\"line\"><span class=\"comment\">#    squash 5b57433 4,5の追加</span></span><br><span class=\"line\"><span class=\"comment\"># No commands remaining.</span></span><br><span class=\"line\"><span class=\"comment\"># You are currently rebasing branch &#x27;master&#x27; on &#x27;61e4e43&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Changes to be committed:</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   2</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   3</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   4</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   5</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>git logでコミットを確認して１つになっていれば完了<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline</span><br><span class=\"line\"></span><br><span class=\"line\">8a0979f (HEAD -&gt; master) 2,3,4,5の追加</span><br><span class=\"line\">61e4e43 1の追加</span><br></pre></td></tr></table></figure>\n<h3><span id=\"中止したいとき\">中止したいとき</span></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git rebase --abort</span><br></pre></td></tr></table></figure>\n<h1><span id=\"利用ケース2-ブランチの親の変更を取り込む\">利用ケース2 : ブランチの親の変更を取り込む</span></h1>ローカルブランチの開始地点を変更することで、更新のあった親ブランチの変更を取り込んむたくなるときに使用します。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git rebase master</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%8B%E3%81%A4%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AE%E3%81%A8%E3%81%8D%E3%81%AB%E4%BD%BF%E3%81%86%E3%82%88%E3%81%86%E3%81%AB%E3%81%97%E3%82%88%E3%81%86\">ローカルリポジトリかつローカルブランチのときに使うようにしよう</a></li>\n<li><a href=\"#%E5%88%A9%E7%94%A8%E3%82%B1%E3%83%BC%E3%82%B91-%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E5%B1%A5%E6%AD%B4%E3%81%AE%E6%95%B4%E7%90%86\">利用ケース1 : コミット履歴の整理</a><ul>\n<li><a href=\"#%E5%86%97%E9%95%B7%E3%81%AA%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A8%E3%81%AF\">冗長なコミットとは？</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a><ul>\n<li><a href=\"#%E4%B8%AD%E6%AD%A2%E3%81%97%E3%81%9F%E3%81%84%E3%81%A8%E3%81%8D\">中止したいとき</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E5%88%A9%E7%94%A8%E3%82%B1%E3%83%BC%E3%82%B92-%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AE%E8%A6%AA%E3%81%AE%E5%A4%89%E6%9B%B4%E3%82%92%E5%8F%96%E3%82%8A%E8%BE%BC%E3%82%80\">利用ケース2 : ブランチの親の変更を取り込む</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"ローカルリポジトリかつローカルブランチのときに使うようにしよう\"><a href=\"#ローカルリポジトリかつローカルブランチのときに使うようにしよう\" class=\"headerlink\" title=\"ローカルリポジトリかつローカルブランチのときに使うようにしよう\"></a>ローカルリポジトリかつローカルブランチのときに使うようにしよう</h1><p>リベースコマンドは、既存のコミットを書き換えることができる強力なコマンドで、書き換えたコミットのSHA1が書き換わってしまうので、すでにPushしてあるコミットに対してリベースを行ってしまうと、他の作業者ローカルリポジトリとの整合性が取れなくなってしまいとても面倒くさい事になってしまいます。</p>\n<p>なので、リベースコマンドを使用するときは、影響範囲が狭い、ローカルリポジトリのローカルブランチ(開発用ブランチ)のみに使用する用にしましょう。</p>\n<h1 id=\"利用ケース1-コミット履歴の整理\"><a href=\"#利用ケース1-コミット履歴の整理\" class=\"headerlink\" title=\"利用ケース1 : コミット履歴の整理\"></a>利用ケース1 : コミット履歴の整理</h1><p>開発が終了して、マスターブランチにマージする前に今までのローカルブランチのコミット履歴の中で、冗長なコミットをスカッシュ(squash:潰して合成)するために使用します。</p>\n<h2 id=\"冗長なコミットとは？\"><a href=\"#冗長なコミットとは？\" class=\"headerlink\" title=\"冗長なコミットとは？\"></a>冗長なコミットとは？</h2><ul>\n<li>typeの修正</li>\n<li>コミット忘れの追加コミット<br>など</li>\n</ul>\n<h2 id=\"使用例\"><a href=\"#使用例\" class=\"headerlink\" title=\"使用例\"></a>使用例</h2><ol>\n<li>まとめたいコミットのSHA1を探す<br>今回は、<code>2,3の追加</code>に<code>4,5,の追加</code>をスカッシュするので、<code>2,3の追加</code>の１つ前のコミットSHA1を探す<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline</span><br><span class=\"line\"></span><br><span class=\"line\">5b57433 (HEAD -&gt; master) 4,5の追加</span><br><span class=\"line\">52f0632 2,3の追加</span><br><span class=\"line\">61e4e43 1の追加</span><br></pre></td></tr></table></figure></li>\n<li>リベースを行う</li>\n</ol>\n<p>-i : interactive</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git rebase -i 61e4e43</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>スカッシュする<br>以下のようなエディタ画面が表示される<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pick 52f0632 2,3の追加</span><br><span class=\"line\">pick 5b57433 4,5の追加</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Rebase 61e4e43..5b57433 onto 61e4e43 (2 commands)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Commands:</span></span><br><span class=\"line\"><span class=\"comment\"># p, pick &lt;commit&gt; = use commit</span></span><br><span class=\"line\"><span class=\"comment\"># r, reword &lt;commit&gt; = use commit, but edit the commit message</span></span><br><span class=\"line\"><span class=\"comment\"># e, edit &lt;commit&gt; = use commit, but stop for amending</span></span><br><span class=\"line\"><span class=\"comment\"># s, squash &lt;commit&gt; = use commit, but meld into previous commit</span></span><br><span class=\"line\"><span class=\"comment\"># f, fixup &lt;commit&gt; = like &quot;squash&quot;, but discard this commit&#x27;s log message</span></span><br><span class=\"line\"><span class=\"comment\"># x, exec &lt;command&gt; = run command (the rest of the line) using shell</span></span><br><span class=\"line\"><span class=\"comment\"># b, break = stop here (continue rebase later with &#x27;git rebase --continue&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># d, drop &lt;commit&gt; = remove commit</span></span><br><span class=\"line\"><span class=\"comment\"># l, label &lt;label&gt; = label current HEAD with a name</span></span><br><span class=\"line\"><span class=\"comment\"># t, reset &lt;label&gt; = reset HEAD to a label</span></span><br><span class=\"line\"><span class=\"comment\"># m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [# &lt;oneline&gt;]</span></span><br><span class=\"line\"><span class=\"comment\"># .       create a merge commit using the original merge commit&#x27;s</span></span><br><span class=\"line\"><span class=\"comment\"># .       message (or the oneline, if no original merge commit was</span></span><br><span class=\"line\"><span class=\"comment\"># .       specified). Use -c &lt;commit&gt; to reword the commit message.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<code>pick 5b7433</code>の部分を<code>squash 5b7433</code>に書き換えて、保存終了(vimの場合、ZZ)</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pick 52f0632 2,3の追加</span><br><span class=\"line\">squash 5b57433 4,5の追加</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Rebase 61e4e43..5b57433 onto 61e4e43 (2 commands)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Commands:</span></span><br><span class=\"line\"><span class=\"comment\"># p, pick &lt;commit&gt; = use commit</span></span><br><span class=\"line\"><span class=\"comment\"># r, reword &lt;commit&gt; = use commit, but edit the commit message</span></span><br><span class=\"line\"><span class=\"comment\"># e, edit &lt;commit&gt; = use commit, but stop for amending</span></span><br><span class=\"line\"><span class=\"comment\"># s, squash &lt;commit&gt; = use commit, but meld into previous commit</span></span><br><span class=\"line\"><span class=\"comment\"># f, fixup &lt;commit&gt; = like &quot;squash&quot;, but discard this commit&#x27;s log message</span></span><br><span class=\"line\"><span class=\"comment\"># x, exec &lt;command&gt; = run command (the rest of the line) using shell</span></span><br><span class=\"line\"><span class=\"comment\"># b, break = stop here (continue rebase later with &#x27;git rebase --continue&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># d, drop &lt;commit&gt; = remove commit</span></span><br><span class=\"line\"><span class=\"comment\"># l, label &lt;label&gt; = label current HEAD with a name</span></span><br><span class=\"line\"><span class=\"comment\"># t, reset &lt;label&gt; = reset HEAD to a label</span></span><br><span class=\"line\"><span class=\"comment\"># m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [# &lt;oneline&gt;]</span></span><br><span class=\"line\"><span class=\"comment\"># .       create a merge commit using the original merge commit&#x27;s</span></span><br><span class=\"line\"><span class=\"comment\"># .       message (or the oneline, if no original merge commit was</span></span><br><span class=\"line\"><span class=\"comment\"># .       specified). Use -c &lt;commit&gt; to reword the commit message.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>コミットメッセージを編集する<br>squashするコミットを選択してエディタを終了すると、以下のような画面が表示される<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># This is a combination of 2 commits.</span></span><br><span class=\"line\"><span class=\"comment\"># This is the 1st commit message:</span></span><br><span class=\"line\"></span><br><span class=\"line\">2,3の追加</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># This is the commit message #2:</span></span><br><span class=\"line\"></span><br><span class=\"line\">4,5の追加</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Please enter the commit message for your changes. Lines starting</span></span><br><span class=\"line\"><span class=\"comment\"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Date:      Tue Apr 13 09:19:56 2021 +0900</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># interactive rebase in progress; onto 61e4e43</span></span><br><span class=\"line\"><span class=\"comment\"># Last commands done (2 commands done):</span></span><br><span class=\"line\"><span class=\"comment\">#    pick 52f0632 2,3の追加</span></span><br><span class=\"line\"><span class=\"comment\">#    squash 5b57433 4,5の追加</span></span><br><span class=\"line\"><span class=\"comment\"># No commands remaining.</span></span><br><span class=\"line\"><span class=\"comment\"># You are currently rebasing branch &#x27;master&#x27; on &#x27;61e4e43&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Changes to be committed:</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   2</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   3</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   4</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   5</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<code># This is the</code>となっている部分を消去して、新しいコミットメッセージを入力して、保存終了(vimの場合、ZZ)</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># This is a combination of 2 commits.</span></span><br><span class=\"line\"></span><br><span class=\"line\">2,3,4,5の追加</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Please enter the commit message for your changes. Lines starting</span></span><br><span class=\"line\"><span class=\"comment\"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Date:      Tue Apr 13 09:19:56 2021 +0900</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># interactive rebase in progress; onto 61e4e43</span></span><br><span class=\"line\"><span class=\"comment\"># Last commands done (2 commands done):</span></span><br><span class=\"line\"><span class=\"comment\">#    pick 52f0632 2,3の追加</span></span><br><span class=\"line\"><span class=\"comment\">#    squash 5b57433 4,5の追加</span></span><br><span class=\"line\"><span class=\"comment\"># No commands remaining.</span></span><br><span class=\"line\"><span class=\"comment\"># You are currently rebasing branch &#x27;master&#x27; on &#x27;61e4e43&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Changes to be committed:</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   2</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   3</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   4</span></span><br><span class=\"line\"><span class=\"comment\">#\tnew file:   5</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>git logでコミットを確認して１つになっていれば完了<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline</span><br><span class=\"line\"></span><br><span class=\"line\">8a0979f (HEAD -&gt; master) 2,3,4,5の追加</span><br><span class=\"line\">61e4e43 1の追加</span><br></pre></td></tr></table></figure>\n<h3 id=\"中止したいとき\"><a href=\"#中止したいとき\" class=\"headerlink\" title=\"中止したいとき\"></a>中止したいとき</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git rebase --abort</span><br></pre></td></tr></table></figure>\n<h1 id=\"利用ケース2-ブランチの親の変更を取り込む\"><a href=\"#利用ケース2-ブランチの親の変更を取り込む\" class=\"headerlink\" title=\"利用ケース2 : ブランチの親の変更を取り込む\"></a>利用ケース2 : ブランチの親の変更を取り込む</h1>ローカルブランチの開始地点を変更することで、更新のあった親ブランチの変更を取り込んむたくなるときに使用します。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git rebase master</span><br></pre></td></tr></table></figure>"},{"title":"【Git】ミスった時の対処法","date":"2021-04-20T00:48:31.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# リベースやコミットを取り消したいとき\n注意::このコマンドで戻すことができるのは、gitで管理しているファイルのみです。\n\n1. `git reflog`を使用して、コマンドの履歴を取得する\n`git reflog`は`HEAD`の参照の変更が行われた時の履歴を表示できるコマンドです。\n\n```bash\n$ git reflog\n\n8a0979f (HEAD -> master) HEAD@{0}: rebase (finish): returning to refs/heads/master\n8a0979f (HEAD -> master) HEAD@{1}: rebase (squash): 2,3,4,5の追加\n52f0632 HEAD@{2}: rebase (start): checkout 61e4e43\n5b57433 HEAD@{3}: rebase (abort): updating HEAD\n61e4e43 HEAD@{4}: rebase (start): checkout 61e4e43\n5b57433 HEAD@{5}: commit: 4,5の追加\n52f0632 HEAD@{6}: commit: 2,3の追加\n61e4e43 HEAD@{7}: commit (initial): 1の追加\n```\n\n2. `git reset --hard HEAD@{番号}`でリポジトリを巻き戻す\n`--hard`スイッチを使用すると、ステージングエリアと作業ディレクトリの療法がリセットされ、リポジトリの状態が正しく戻されます。もし、gitで管理していないファイルが悪さをする場合は、`git clean -f`コマンドも併用するといいかもしれません。\n\n- ここで、指定するのは、戻したいコマンドを使用する１つ前のHEAD番号です。今回使用しているリポジトリの`リベース前に戻したい場合`は`HEAD@{5}`を指定することになります。\n```bash\n$ git reset --hard HEAD@{5}\n```\n","source":"_posts/【Git】ミスった時の対処法.md","raw":"---\ntitle: 【Git】ミスった時の対処法\ndate: 2021-04-20 09:48:31\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# リベースやコミットを取り消したいとき\n注意::このコマンドで戻すことができるのは、gitで管理しているファイルのみです。\n\n1. `git reflog`を使用して、コマンドの履歴を取得する\n`git reflog`は`HEAD`の参照の変更が行われた時の履歴を表示できるコマンドです。\n\n```bash\n$ git reflog\n\n8a0979f (HEAD -> master) HEAD@{0}: rebase (finish): returning to refs/heads/master\n8a0979f (HEAD -> master) HEAD@{1}: rebase (squash): 2,3,4,5の追加\n52f0632 HEAD@{2}: rebase (start): checkout 61e4e43\n5b57433 HEAD@{3}: rebase (abort): updating HEAD\n61e4e43 HEAD@{4}: rebase (start): checkout 61e4e43\n5b57433 HEAD@{5}: commit: 4,5の追加\n52f0632 HEAD@{6}: commit: 2,3の追加\n61e4e43 HEAD@{7}: commit (initial): 1の追加\n```\n\n2. `git reset --hard HEAD@{番号}`でリポジトリを巻き戻す\n`--hard`スイッチを使用すると、ステージングエリアと作業ディレクトリの療法がリセットされ、リポジトリの状態が正しく戻されます。もし、gitで管理していないファイルが悪さをする場合は、`git clean -f`コマンドも併用するといいかもしれません。\n\n- ここで、指定するのは、戻したいコマンドを使用する１つ前のHEAD番号です。今回使用しているリポジトリの`リベース前に戻したい場合`は`HEAD@{5}`を指定することになります。\n```bash\n$ git reset --hard HEAD@{5}\n```\n","slug":"【Git】ミスった時の対処法","published":1,"updated":"2021-04-13T01:04:53.750Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknflkxug0006rwb69vp1f1af","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%AA%E3%83%99%E3%83%BC%E3%82%B9%E3%82%84%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%92%E5%8F%96%E3%82%8A%E6%B6%88%E3%81%97%E3%81%9F%E3%81%84%E3%81%A8%E3%81%8D\">リベースやコミットを取り消したいとき</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"リベースやコミットを取り消したいとき\">リベースやコミットを取り消したいとき</span></h1><p>注意::このコマンドで戻すことができるのは、gitで管理しているファイルのみです。</p>\n<ol>\n<li><code>git reflog</code>を使用して、コマンドの履歴を取得する<br><code>git reflog</code>は<code>HEAD</code>の参照の変更が行われた時の履歴を表示できるコマンドです。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git reflog</span><br><span class=\"line\"></span><br><span class=\"line\">8a0979f (HEAD -&gt; master) HEAD@&#123;0&#125;: rebase (finish): returning to refs/heads/master</span><br><span class=\"line\">8a0979f (HEAD -&gt; master) HEAD@&#123;1&#125;: rebase (squash): 2,3,4,5の追加</span><br><span class=\"line\">52f0632 HEAD@&#123;2&#125;: rebase (start): checkout 61e4e43</span><br><span class=\"line\">5b57433 HEAD@&#123;3&#125;: rebase (abort): updating HEAD</span><br><span class=\"line\">61e4e43 HEAD@&#123;4&#125;: rebase (start): checkout 61e4e43</span><br><span class=\"line\">5b57433 HEAD@&#123;5&#125;: commit: 4,5の追加</span><br><span class=\"line\">52f0632 HEAD@&#123;6&#125;: commit: 2,3の追加</span><br><span class=\"line\">61e4e43 HEAD@&#123;7&#125;: commit (initial): 1の追加</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><code>git reset --hard HEAD@&#123;番号&#125;</code>でリポジトリを巻き戻す<br><code>--hard</code>スイッチを使用すると、ステージングエリアと作業ディレクトリの療法がリセットされ、リポジトリの状態が正しく戻されます。もし、gitで管理していないファイルが悪さをする場合は、<code>git clean -f</code>コマンドも併用するといいかもしれません。</li>\n</ol>\n<ul>\n<li>ここで、指定するのは、戻したいコマンドを使用する１つ前のHEAD番号です。今回使用しているリポジトリの<code>リベース前に戻したい場合</code>は<code>HEAD@&#123;5&#125;</code>を指定することになります。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git reset --hard HEAD@&#123;5&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%AA%E3%83%99%E3%83%BC%E3%82%B9%E3%82%84%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%92%E5%8F%96%E3%82%8A%E6%B6%88%E3%81%97%E3%81%9F%E3%81%84%E3%81%A8%E3%81%8D\">リベースやコミットを取り消したいとき</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"リベースやコミットを取り消したいとき\"><a href=\"#リベースやコミットを取り消したいとき\" class=\"headerlink\" title=\"リベースやコミットを取り消したいとき\"></a>リベースやコミットを取り消したいとき</h1><p>注意::このコマンドで戻すことができるのは、gitで管理しているファイルのみです。</p>\n<ol>\n<li><code>git reflog</code>を使用して、コマンドの履歴を取得する<br><code>git reflog</code>は<code>HEAD</code>の参照の変更が行われた時の履歴を表示できるコマンドです。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git reflog</span><br><span class=\"line\"></span><br><span class=\"line\">8a0979f (HEAD -&gt; master) HEAD@&#123;0&#125;: rebase (finish): returning to refs/heads/master</span><br><span class=\"line\">8a0979f (HEAD -&gt; master) HEAD@&#123;1&#125;: rebase (squash): 2,3,4,5の追加</span><br><span class=\"line\">52f0632 HEAD@&#123;2&#125;: rebase (start): checkout 61e4e43</span><br><span class=\"line\">5b57433 HEAD@&#123;3&#125;: rebase (abort): updating HEAD</span><br><span class=\"line\">61e4e43 HEAD@&#123;4&#125;: rebase (start): checkout 61e4e43</span><br><span class=\"line\">5b57433 HEAD@&#123;5&#125;: commit: 4,5の追加</span><br><span class=\"line\">52f0632 HEAD@&#123;6&#125;: commit: 2,3の追加</span><br><span class=\"line\">61e4e43 HEAD@&#123;7&#125;: commit (initial): 1の追加</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><code>git reset --hard HEAD@&#123;番号&#125;</code>でリポジトリを巻き戻す<br><code>--hard</code>スイッチを使用すると、ステージングエリアと作業ディレクトリの療法がリセットされ、リポジトリの状態が正しく戻されます。もし、gitで管理していないファイルが悪さをする場合は、<code>git clean -f</code>コマンドも併用するといいかもしれません。</li>\n</ol>\n<ul>\n<li>ここで、指定するのは、戻したいコマンドを使用する１つ前のHEAD番号です。今回使用しているリポジトリの<code>リベース前に戻したい場合</code>は<code>HEAD@&#123;5&#125;</code>を指定することになります。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git reset --hard HEAD@&#123;5&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>"},{"title":"【Git】付箋を貼り付ける","date":"2021-04-17T22:11:54.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# コミットに任意のノートを追加する\n使い方としては、すでに作成してあるコミットでバグの発生源が追加されたとわかった場合、コミットメッセージは変えずに、付箋(ノート)としてコメントを追加できる機能です。\n\n## 使い方\nSHA1でコミットを指定します。\n\n- `git notes add SHA1`と入力して、エディタを起動する\n- `git notes add -m \"メモ\" SHA1`で、コミットメッセージの用に入力する\n\n# ノートのリストを取得する\n左側がノートのハッシュ、右側がノートに紐付いているコミットのハッシュ\n\n```bash\n$ git notes list\n\n0e55988da9b4ff62d5be0872917e423bbc29065c 410a88f4a86a9f0cd41a8ae84e717980a8ebc036\n```\n\n# ノートの本体ハッシュからノートを参照\n```bash\n$ git notes show 0e55988da9b4ff62d5be0872917e423bbc29065c \n\nこれはノートです。\n```\n\n","source":"_posts/【Git】付箋を貼り付ける.md","raw":"---\ntitle: 【Git】付箋を貼り付ける\ndate: 2021-04-18 07:11:54\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# コミットに任意のノートを追加する\n使い方としては、すでに作成してあるコミットでバグの発生源が追加されたとわかった場合、コミットメッセージは変えずに、付箋(ノート)としてコメントを追加できる機能です。\n\n## 使い方\nSHA1でコミットを指定します。\n\n- `git notes add SHA1`と入力して、エディタを起動する\n- `git notes add -m \"メモ\" SHA1`で、コミットメッセージの用に入力する\n\n# ノートのリストを取得する\n左側がノートのハッシュ、右側がノートに紐付いているコミットのハッシュ\n\n```bash\n$ git notes list\n\n0e55988da9b4ff62d5be0872917e423bbc29065c 410a88f4a86a9f0cd41a8ae84e717980a8ebc036\n```\n\n# ノートの本体ハッシュからノートを参照\n```bash\n$ git notes show 0e55988da9b4ff62d5be0872917e423bbc29065c \n\nこれはノートです。\n```\n\n","slug":"【Git】付箋を貼り付ける","published":1,"updated":"2021-04-12T22:50:25.936Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknflkxuh0008rwb621lw216y","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%AB%E4%BB%BB%E6%84%8F%E3%81%AE%E3%83%8E%E3%83%BC%E3%83%88%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\">コミットに任意のノートを追加する</a><ul>\n<li><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\">使い方</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%8E%E3%83%BC%E3%83%88%E3%81%AE%E3%83%AA%E3%82%B9%E3%83%88%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B\">ノートのリストを取得する</a></li>\n<li><a href=\"#%E3%83%8E%E3%83%BC%E3%83%88%E3%81%AE%E6%9C%AC%E4%BD%93%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%81%8B%E3%82%89%E3%83%8E%E3%83%BC%E3%83%88%E3%82%92%E5%8F%82%E7%85%A7\">ノートの本体ハッシュからノートを参照</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"コミットに任意のノートを追加する\">コミットに任意のノートを追加する</span></h1><p>使い方としては、すでに作成してあるコミットでバグの発生源が追加されたとわかった場合、コミットメッセージは変えずに、付箋(ノート)としてコメントを追加できる機能です。</p>\n<h2><span id=\"使い方\">使い方</span></h2><p>SHA1でコミットを指定します。</p>\n<ul>\n<li><code>git notes add SHA1</code>と入力して、エディタを起動する</li>\n<li><code>git notes add -m &quot;メモ&quot; SHA1</code>で、コミットメッセージの用に入力する</li>\n</ul>\n<h1><span id=\"ノートのリストを取得する\">ノートのリストを取得する</span></h1><p>左側がノートのハッシュ、右側がノートに紐付いているコミットのハッシュ</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git notes list</span><br><span class=\"line\"></span><br><span class=\"line\">0e55988da9b4ff62d5be0872917e423bbc29065c 410a88f4a86a9f0cd41a8ae84e717980a8ebc036</span><br></pre></td></tr></table></figure>\n<h1><span id=\"ノートの本体ハッシュからノートを参照\">ノートの本体ハッシュからノートを参照</span></h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git notes show 0e55988da9b4ff62d5be0872917e423bbc29065c </span><br><span class=\"line\"></span><br><span class=\"line\">これはノートです。</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%AB%E4%BB%BB%E6%84%8F%E3%81%AE%E3%83%8E%E3%83%BC%E3%83%88%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\">コミットに任意のノートを追加する</a><ul>\n<li><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\">使い方</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%8E%E3%83%BC%E3%83%88%E3%81%AE%E3%83%AA%E3%82%B9%E3%83%88%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B\">ノートのリストを取得する</a></li>\n<li><a href=\"#%E3%83%8E%E3%83%BC%E3%83%88%E3%81%AE%E6%9C%AC%E4%BD%93%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%81%8B%E3%82%89%E3%83%8E%E3%83%BC%E3%83%88%E3%82%92%E5%8F%82%E7%85%A7\">ノートの本体ハッシュからノートを参照</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"コミットに任意のノートを追加する\"><a href=\"#コミットに任意のノートを追加する\" class=\"headerlink\" title=\"コミットに任意のノートを追加する\"></a>コミットに任意のノートを追加する</h1><p>使い方としては、すでに作成してあるコミットでバグの発生源が追加されたとわかった場合、コミットメッセージは変えずに、付箋(ノート)としてコメントを追加できる機能です。</p>\n<h2 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h2><p>SHA1でコミットを指定します。</p>\n<ul>\n<li><code>git notes add SHA1</code>と入力して、エディタを起動する</li>\n<li><code>git notes add -m &quot;メモ&quot; SHA1</code>で、コミットメッセージの用に入力する</li>\n</ul>\n<h1 id=\"ノートのリストを取得する\"><a href=\"#ノートのリストを取得する\" class=\"headerlink\" title=\"ノートのリストを取得する\"></a>ノートのリストを取得する</h1><p>左側がノートのハッシュ、右側がノートに紐付いているコミットのハッシュ</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git notes list</span><br><span class=\"line\"></span><br><span class=\"line\">0e55988da9b4ff62d5be0872917e423bbc29065c 410a88f4a86a9f0cd41a8ae84e717980a8ebc036</span><br></pre></td></tr></table></figure>\n<h1 id=\"ノートの本体ハッシュからノートを参照\"><a href=\"#ノートの本体ハッシュからノートを参照\" class=\"headerlink\" title=\"ノートの本体ハッシュからノートを参照\"></a>ノートの本体ハッシュからノートを参照</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git notes show 0e55988da9b4ff62d5be0872917e423bbc29065c </span><br><span class=\"line\"></span><br><span class=\"line\">これはノートです。</span><br></pre></td></tr></table></figure>"},{"title":"【Git】設定ファイルの優先順位","date":"2021-04-22T14:33:03.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 設定ファイルの種類\n- local : リポジトリ内\n- global : ユーザー内\n- system : PC全体\n\n# 優先順位\n設定ファイルの効果が出る\n\n# 設定されている値を表示する\n- local : `git config --local --list`\n- global : `git config --global --list`\n- system : `git config --system --list`\n","source":"_posts/【Git】設定ファイルの優先順位.md","raw":"---\ntitle: 【Git】設定ファイルの優先順位\ndate: 2021-04-22 23:33:03\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 設定ファイルの種類\n- local : リポジトリ内\n- global : ユーザー内\n- system : PC全体\n\n# 優先順位\n設定ファイルの効果が出る\n\n# 設定されている値を表示する\n- local : `git config --local --list`\n- global : `git config --global --list`\n- system : `git config --system --list`\n","slug":"【Git】設定ファイルの優先順位","published":1,"updated":"2021-04-13T05:41:44.891Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknflkxul000arwb621xg9ldu","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E7%A8%AE%E9%A1%9E\">設定ファイルの種類</a></li>\n<li><a href=\"#%E5%84%AA%E5%85%88%E9%A0%86%E4%BD%8D\">優先順位</a></li>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E5%80%A4%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B\">設定されている値を表示する</a></li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"設定ファイルの種類\">設定ファイルの種類</span></h1><ul>\n<li>local : リポジトリ内</li>\n<li>global : ユーザー内</li>\n<li>system : PC全体</li>\n</ul>\n<h1><span id=\"優先順位\">優先順位</span></h1><p>設定ファイルの効果が出る</p>\n<h1><span id=\"設定されている値を表示する\">設定されている値を表示する</span></h1><ul>\n<li>local : <code>git config --local --list</code></li>\n<li>global : <code>git config --global --list</code></li>\n<li>system : <code>git config --system --list</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E7%A8%AE%E9%A1%9E\">設定ファイルの種類</a></li>\n<li><a href=\"#%E5%84%AA%E5%85%88%E9%A0%86%E4%BD%8D\">優先順位</a></li>\n<li><a href=\"#%E8%A8%AD%E5%AE%9A%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E5%80%A4%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B\">設定されている値を表示する</a></li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"設定ファイルの種類\"><a href=\"#設定ファイルの種類\" class=\"headerlink\" title=\"設定ファイルの種類\"></a>設定ファイルの種類</h1><ul>\n<li>local : リポジトリ内</li>\n<li>global : ユーザー内</li>\n<li>system : PC全体</li>\n</ul>\n<h1 id=\"優先順位\"><a href=\"#優先順位\" class=\"headerlink\" title=\"優先順位\"></a>優先順位</h1><p>設定ファイルの効果が出る</p>\n<h1 id=\"設定されている値を表示する\"><a href=\"#設定されている値を表示する\" class=\"headerlink\" title=\"設定されている値を表示する\"></a>設定されている値を表示する</h1><ul>\n<li>local : <code>git config --local --list</code></li>\n<li>global : <code>git config --global --list</code></li>\n<li>system : <code>git config --system --list</code></li>\n</ul>"},{"title":"【Git】空のコミットをする","date":"2021-04-23T07:30:18.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# リポジトリの最初のコミットをからの状態にしておくと後々使いやすいかもしれない(諸説あり)\nまっさらな状態のリポジトリからbranchを作りたくなった場合が発生して、そのリポジトリの最初のコミットが空だったらどれだけ楽かと思ったことがあったので、調べたところ`commit`コマンドに`--allow-empty`というスイッチがありました。\n\n## 使い方\n使い方は、通常のコミットに`--allow-empty`スイッチを付けるだけです。\n\n```bash\n$ git commit --allow-empty -m \"first commit\"\n```\n","source":"_posts/【Git】空のコミットをする.md","raw":"---\ntitle: 【Git】空のコミットをする\ndate: 2021-04-23 16:30:18\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# リポジトリの最初のコミットをからの状態にしておくと後々使いやすいかもしれない(諸説あり)\nまっさらな状態のリポジトリからbranchを作りたくなった場合が発生して、そのリポジトリの最初のコミットが空だったらどれだけ楽かと思ったことがあったので、調べたところ`commit`コマンドに`--allow-empty`というスイッチがありました。\n\n## 使い方\n使い方は、通常のコミットに`--allow-empty`スイッチを付けるだけです。\n\n```bash\n$ git commit --allow-empty -m \"first commit\"\n```\n","slug":"【Git】空のコミットをする","published":1,"updated":"2021-04-13T07:35:46.324Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknfpniuv00008pb6a34d4uc3","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E6%9C%80%E5%88%9D%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%92%E3%81%8B%E3%82%89%E3%81%AE%E7%8A%B6%E6%85%8B%E3%81%AB%E3%81%97%E3%81%A6%E3%81%8A%E3%81%8F%E3%81%A8%E5%BE%8C%E3%80%85%E4%BD%BF%E3%81%84%E3%82%84%E3%81%99%E3%81%84%E3%81%8B%E3%82%82%E3%81%97%E3%82%8C%E3%81%AA%E3%81%84%E8%AB%B8%E8%AA%AC%E3%81%82%E3%82%8A\">リポジトリの最初のコミットをからの状態にしておくと後々使いやすいかもしれない(諸説あり)</a><ul>\n<li><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\">使い方</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"リポジトリの最初のコミットをからの状態にしておくと後々使いやすいかもしれない諸説あり\">リポジトリの最初のコミットをからの状態にしておくと後々使いやすいかもしれない(諸説あり)</span></h1><p>まっさらな状態のリポジトリからbranchを作りたくなった場合が発生して、そのリポジトリの最初のコミットが空だったらどれだけ楽かと思ったことがあったので、調べたところ<code>commit</code>コマンドに<code>--allow-empty</code>というスイッチがありました。</p>\n<h2><span id=\"使い方\">使い方</span></h2><p>使い方は、通常のコミットに<code>--allow-empty</code>スイッチを付けるだけです。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit --allow-empty -m <span class=\"string\">&quot;first commit&quot;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E6%9C%80%E5%88%9D%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%92%E3%81%8B%E3%82%89%E3%81%AE%E7%8A%B6%E6%85%8B%E3%81%AB%E3%81%97%E3%81%A6%E3%81%8A%E3%81%8F%E3%81%A8%E5%BE%8C%E3%80%85%E4%BD%BF%E3%81%84%E3%82%84%E3%81%99%E3%81%84%E3%81%8B%E3%82%82%E3%81%97%E3%82%8C%E3%81%AA%E3%81%84%E8%AB%B8%E8%AA%AC%E3%81%82%E3%82%8A\">リポジトリの最初のコミットをからの状態にしておくと後々使いやすいかもしれない(諸説あり)</a><ul>\n<li><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\">使い方</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"リポジトリの最初のコミットをからの状態にしておくと後々使いやすいかもしれない-諸説あり\"><a href=\"#リポジトリの最初のコミットをからの状態にしておくと後々使いやすいかもしれない-諸説あり\" class=\"headerlink\" title=\"リポジトリの最初のコミットをからの状態にしておくと後々使いやすいかもしれない(諸説あり)\"></a>リポジトリの最初のコミットをからの状態にしておくと後々使いやすいかもしれない(諸説あり)</h1><p>まっさらな状態のリポジトリからbranchを作りたくなった場合が発生して、そのリポジトリの最初のコミットが空だったらどれだけ楽かと思ったことがあったので、調べたところ<code>commit</code>コマンドに<code>--allow-empty</code>というスイッチがありました。</p>\n<h2 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h2><p>使い方は、通常のコミットに<code>--allow-empty</code>スイッチを付けるだけです。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit --allow-empty -m <span class=\"string\">&quot;first commit&quot;</span></span><br></pre></td></tr></table></figure>"},{"title":"【Git】基本的なマージの手順","date":"2021-04-24T14:14:29.000Z","_content":"# 目次\n<!-- toc -->\n<!-- more -->\n\n# 手順\n今回は`master`に`t`ブランチを取り込む\n\n## 1. マージを取り込みたいブランチに移動する\n`master`ブランチに移動\n```bash\n$ git checkout master\n```\n\n移動できたか確認、`master`の左側に`*`がついていればOK\n```bash\n$ git branch\n\n* master\nt\n```\n## 2. マージコマンドを実行する\n`master`に`t`を取り込む(mergeする)\n```bash\n$ git merge t\n```\n## 3.1 正常に完了した場合\n### 表示される内容のサンプル\n```bash\nUpdating d71dc36..bc5d29e\nFast-forward\n 1 | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n```\n\n正常にマージできているか確認する。このような表示が出ればOK\n```bash\n$ git status\n\nOn branch master\nnothing to commit, working tree clean\n```\n## 3.2 コンフリクトが発生した場合\n### 表示される内容のサンプル\n```bash\nAuto-merging 1\nCONFLICT (content): Merge conflict in 1\nAutomatic merge failed; fix conflicts and then commit the result.\n```\n\n### 現在の状態を確認\n`Unmerged paths`の部分のファイルがコンフリクトを起こしているファイルです。\n今回のサンプルだと、`1` というファイルがコンフリクトを起こしています。\n```bash\n$ git status\n\nOn branch master\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\n  (use \"git merge --abort\" to abort the merge)\n\nUnmerged paths:\n  (use \"git add <file>...\" to mark resolution)\n        both modified:   1\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```\n\n### コンフリクトを解決するには\nコンフリクトを起こしているファイルを開きます。そうすると、以下のような表記の部分があるはずです。\n\n```bash\nこれはテスト文章です0\n<<<<<<< HEAD\nこれはテスト文章です2\n=======\nこれはテスト文章です3\n>>>>>>> t\nこれはテスト文章です2\n```\n\nこの`<<<<<<<<<<< HEAD`から`=========`までが`変更を取り込むブランチの変更`、`==========`から`>>>>>>>>>>> t`までが`変更を取り込まれるブランチの変更`です。\n\n変更を`取り込まない`方の変更点を消して、`>>>`,`<<<`,`===`のgitによって追加された部分をすべて消去します。\n\n`変更を取り込むブランチ`(masterブランチ)の変更を適応する場合のファイルの編集例\n```bash\nこれはテスト文章です0\nこれはテスト文章です2\nこれはテスト文章です2\n```\n\n編集後、編集したファイルを`git add`してから、コミットします。\n\nadd\n```bash\n$ git add 1\n```\n\ncommit、マージのコミットの場合、`git commit`のみで自動的にコミットメッセージが生成されます。`git commit`を実行するとエディタが開くので(Vimの場合)`ZZ`をタイプして、エディタを抜けます。\n```bash\n$ git commit \n```\n\n開かれたエディタ画面のサンプル\n```bash\nMerge branch 't'\n\n# Conflicts:\n#\t1\n#\n# It looks like you may be committing a merge.\n# If this is not correct, please run\n#\tgit update-ref -d MERGE_HEAD\n# and try again.\n\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# On branch master\n# All conflicts fixed but you are still merging.\n#\n```\n\n最後に正常にマージできているか`git status`で確認して、以下のような表示になればOK\n```bash\n$ git status\n\nOn branch master\nnothing to commit, working tree clean\n```\n","source":"_posts/【Git】基本的なマージの手順.md","raw":"---\ntitle: 【Git】基本的なマージの手順\ndate: 2021-04-24 23:14:29\ntags:\n- Git\n---\n# 目次\n<!-- toc -->\n<!-- more -->\n\n# 手順\n今回は`master`に`t`ブランチを取り込む\n\n## 1. マージを取り込みたいブランチに移動する\n`master`ブランチに移動\n```bash\n$ git checkout master\n```\n\n移動できたか確認、`master`の左側に`*`がついていればOK\n```bash\n$ git branch\n\n* master\nt\n```\n## 2. マージコマンドを実行する\n`master`に`t`を取り込む(mergeする)\n```bash\n$ git merge t\n```\n## 3.1 正常に完了した場合\n### 表示される内容のサンプル\n```bash\nUpdating d71dc36..bc5d29e\nFast-forward\n 1 | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n```\n\n正常にマージできているか確認する。このような表示が出ればOK\n```bash\n$ git status\n\nOn branch master\nnothing to commit, working tree clean\n```\n## 3.2 コンフリクトが発生した場合\n### 表示される内容のサンプル\n```bash\nAuto-merging 1\nCONFLICT (content): Merge conflict in 1\nAutomatic merge failed; fix conflicts and then commit the result.\n```\n\n### 現在の状態を確認\n`Unmerged paths`の部分のファイルがコンフリクトを起こしているファイルです。\n今回のサンプルだと、`1` というファイルがコンフリクトを起こしています。\n```bash\n$ git status\n\nOn branch master\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\n  (use \"git merge --abort\" to abort the merge)\n\nUnmerged paths:\n  (use \"git add <file>...\" to mark resolution)\n        both modified:   1\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```\n\n### コンフリクトを解決するには\nコンフリクトを起こしているファイルを開きます。そうすると、以下のような表記の部分があるはずです。\n\n```bash\nこれはテスト文章です0\n<<<<<<< HEAD\nこれはテスト文章です2\n=======\nこれはテスト文章です3\n>>>>>>> t\nこれはテスト文章です2\n```\n\nこの`<<<<<<<<<<< HEAD`から`=========`までが`変更を取り込むブランチの変更`、`==========`から`>>>>>>>>>>> t`までが`変更を取り込まれるブランチの変更`です。\n\n変更を`取り込まない`方の変更点を消して、`>>>`,`<<<`,`===`のgitによって追加された部分をすべて消去します。\n\n`変更を取り込むブランチ`(masterブランチ)の変更を適応する場合のファイルの編集例\n```bash\nこれはテスト文章です0\nこれはテスト文章です2\nこれはテスト文章です2\n```\n\n編集後、編集したファイルを`git add`してから、コミットします。\n\nadd\n```bash\n$ git add 1\n```\n\ncommit、マージのコミットの場合、`git commit`のみで自動的にコミットメッセージが生成されます。`git commit`を実行するとエディタが開くので(Vimの場合)`ZZ`をタイプして、エディタを抜けます。\n```bash\n$ git commit \n```\n\n開かれたエディタ画面のサンプル\n```bash\nMerge branch 't'\n\n# Conflicts:\n#\t1\n#\n# It looks like you may be committing a merge.\n# If this is not correct, please run\n#\tgit update-ref -d MERGE_HEAD\n# and try again.\n\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# On branch master\n# All conflicts fixed but you are still merging.\n#\n```\n\n最後に正常にマージできているか`git status`で確認して、以下のような表示になればOK\n```bash\n$ git status\n\nOn branch master\nnothing to commit, working tree clean\n```\n","slug":"【Git】基本的なマージの手順","published":1,"updated":"2021-04-17T15:33:46.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknlwhnof0000z3b69dkca70o","content":"<h1><span id=\"目次\">目次</span></h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E6%89%8B%E9%A0%86\">手順</a><ul>\n<li><a href=\"#1-%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%92%E5%8F%96%E3%82%8A%E8%BE%BC%E3%81%BF%E3%81%9F%E3%81%84%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AB%E7%A7%BB%E5%8B%95%E3%81%99%E3%82%8B\">1. マージを取り込みたいブランチに移動する</a></li>\n<li><a href=\"#2-%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B\">2. マージコマンドを実行する</a></li>\n<li><a href=\"#31-%E6%AD%A3%E5%B8%B8%E3%81%AB%E5%AE%8C%E4%BA%86%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\">3.1 正常に完了した場合</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9%E3%81%AE%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\">表示される内容のサンプル</a></li>\n</ul>\n</li>\n<li><a href=\"#32-%E3%82%B3%E3%83%B3%E3%83%95%E3%83%AA%E3%82%AF%E3%83%88%E3%81%8C%E7%99%BA%E7%94%9F%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\">3.2 コンフリクトが発生した場合</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9%E3%81%AE%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB-1\">表示される内容のサンプル</a></li>\n<li><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E7%8A%B6%E6%85%8B%E3%82%92%E7%A2%BA%E8%AA%8D\">現在の状態を確認</a></li>\n<li><a href=\"#%E3%82%B3%E3%83%B3%E3%83%95%E3%83%AA%E3%82%AF%E3%83%88%E3%82%92%E8%A7%A3%E6%B1%BA%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF\">コンフリクトを解決するには</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n<a id=\"more\"></a>\n\n<h1><span id=\"手順\">手順</span></h1><p>今回は<code>master</code>に<code>t</code>ブランチを取り込む</p>\n<h2><span id=\"1-マージを取り込みたいブランチに移動する\">1. マージを取り込みたいブランチに移動する</span></h2><p><code>master</code>ブランチに移動</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout master</span><br></pre></td></tr></table></figure>\n<p>移動できたか確認、<code>master</code>の左側に<code>*</code>がついていればOK</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch</span><br><span class=\"line\"></span><br><span class=\"line\">* master</span><br><span class=\"line\">t</span><br></pre></td></tr></table></figure>\n<h2><span id=\"2-マージコマンドを実行する\">2. マージコマンドを実行する</span></h2><p><code>master</code>に<code>t</code>を取り込む(mergeする)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge t</span><br></pre></td></tr></table></figure>\n<h2><span id=\"31-正常に完了した場合\">3.1 正常に完了した場合</span></h2><h3><span id=\"表示される内容のサンプル\">表示される内容のサンプル</span></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Updating d71dc36..bc5d29e</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> 1 | 2 +-</span><br><span class=\"line\"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br></pre></td></tr></table></figure>\n<p>正常にマージできているか確認する。このような表示が出ればOK</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">On branch master</span><br><span class=\"line\">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure>\n<h2><span id=\"32-コンフリクトが発生した場合\">3.2 コンフリクトが発生した場合</span></h2><h3><span id=\"表示される内容のサンプル\">表示される内容のサンプル</span></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Auto-merging 1</span><br><span class=\"line\">CONFLICT (content): Merge conflict <span class=\"keyword\">in</span> 1</span><br><span class=\"line\">Automatic merge failed; fix conflicts and <span class=\"keyword\">then</span> commit the result.</span><br></pre></td></tr></table></figure>\n<h3><span id=\"現在の状態を確認\">現在の状態を確認</span></h3><p><code>Unmerged paths</code>の部分のファイルがコンフリクトを起こしているファイルです。<br>今回のサンプルだと、<code>1</code> というファイルがコンフリクトを起こしています。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">On branch master</span><br><span class=\"line\">You have unmerged paths.</span><br><span class=\"line\">  (fix conflicts and run <span class=\"string\">&quot;git commit&quot;</span>)</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git merge --abort&quot;</span> to abort the merge)</span><br><span class=\"line\"></span><br><span class=\"line\">Unmerged paths:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git add &lt;file&gt;...&quot;</span> to mark resolution)</span><br><span class=\"line\">        both modified:   1</span><br><span class=\"line\"></span><br><span class=\"line\">no changes added to commit (use <span class=\"string\">&quot;git add&quot;</span> and/or <span class=\"string\">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h3><span id=\"コンフリクトを解決するには\">コンフリクトを解決するには</span></h3><p>コンフリクトを起こしているファイルを開きます。そうすると、以下のような表記の部分があるはずです。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これはテスト文章です0</span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; <span class=\"string\">HEAD</span></span><br><span class=\"line\"><span class=\"string\">これはテスト文章です2</span></span><br><span class=\"line\"><span class=\"string\">=======</span></span><br><span class=\"line\"><span class=\"string\">これはテスト文章です3</span></span><br><span class=\"line\"><span class=\"string\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; t</span></span><br><span class=\"line\"><span class=\"string\">これはテスト文章です2</span></span><br></pre></td></tr></table></figure>\n<p>この<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code>から<code>=========</code>までが<code>変更を取り込むブランチの変更</code>、<code>==========</code>から<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; t</code>までが<code>変更を取り込まれるブランチの変更</code>です。</p>\n<p>変更を<code>取り込まない</code>方の変更点を消して、<code>&gt;&gt;&gt;</code>,<code>&lt;&lt;&lt;</code>,<code>===</code>のgitによって追加された部分をすべて消去します。</p>\n<p><code>変更を取り込むブランチ</code>(masterブランチ)の変更を適応する場合のファイルの編集例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これはテスト文章です0</span><br><span class=\"line\">これはテスト文章です2</span><br><span class=\"line\">これはテスト文章です2</span><br></pre></td></tr></table></figure>\n<p>編集後、編集したファイルを<code>git add</code>してから、コミットします。</p>\n<p>add</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add 1</span><br></pre></td></tr></table></figure>\n<p>commit、マージのコミットの場合、<code>git commit</code>のみで自動的にコミットメッセージが生成されます。<code>git commit</code>を実行するとエディタが開くので(Vimの場合)<code>ZZ</code>をタイプして、エディタを抜けます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit </span><br></pre></td></tr></table></figure>\n<p>開かれたエディタ画面のサンプル</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Merge branch <span class=\"string\">&#x27;t&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Conflicts:</span></span><br><span class=\"line\"><span class=\"comment\">#\t1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># It looks like you may be committing a merge.</span></span><br><span class=\"line\"><span class=\"comment\"># If this is not correct, please run</span></span><br><span class=\"line\"><span class=\"comment\">#\tgit update-ref -d MERGE_HEAD</span></span><br><span class=\"line\"><span class=\"comment\"># and try again.</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Please enter the commit message for your changes. Lines starting</span></span><br><span class=\"line\"><span class=\"comment\"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># On branch master</span></span><br><span class=\"line\"><span class=\"comment\"># All conflicts fixed but you are still merging.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<p>最後に正常にマージできているか<code>git status</code>で確認して、以下のような表示になればOK</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">On branch master</span><br><span class=\"line\">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h1><!-- toc -->\n\n<ul>\n<li><a href=\"#%E6%89%8B%E9%A0%86\">手順</a><ul>\n<li><a href=\"#1-%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%92%E5%8F%96%E3%82%8A%E8%BE%BC%E3%81%BF%E3%81%9F%E3%81%84%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AB%E7%A7%BB%E5%8B%95%E3%81%99%E3%82%8B\">1. マージを取り込みたいブランチに移動する</a></li>\n<li><a href=\"#2-%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B\">2. マージコマンドを実行する</a></li>\n<li><a href=\"#31-%E6%AD%A3%E5%B8%B8%E3%81%AB%E5%AE%8C%E4%BA%86%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\">3.1 正常に完了した場合</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9%E3%81%AE%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\">表示される内容のサンプル</a></li>\n</ul>\n</li>\n<li><a href=\"#32-%E3%82%B3%E3%83%B3%E3%83%95%E3%83%AA%E3%82%AF%E3%83%88%E3%81%8C%E7%99%BA%E7%94%9F%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\">3.2 コンフリクトが発生した場合</a><ul>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B%E5%86%85%E5%AE%B9%E3%81%AE%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB-1\">表示される内容のサンプル</a></li>\n<li><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E7%8A%B6%E6%85%8B%E3%82%92%E7%A2%BA%E8%AA%8D\">現在の状態を確認</a></li>\n<li><a href=\"#%E3%82%B3%E3%83%B3%E3%83%95%E3%83%AA%E3%82%AF%E3%83%88%E3%82%92%E8%A7%A3%E6%B1%BA%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF\">コンフリクトを解決するには</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->","more":"<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><p>今回は<code>master</code>に<code>t</code>ブランチを取り込む</p>\n<h2 id=\"1-マージを取り込みたいブランチに移動する\"><a href=\"#1-マージを取り込みたいブランチに移動する\" class=\"headerlink\" title=\"1. マージを取り込みたいブランチに移動する\"></a>1. マージを取り込みたいブランチに移動する</h2><p><code>master</code>ブランチに移動</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout master</span><br></pre></td></tr></table></figure>\n<p>移動できたか確認、<code>master</code>の左側に<code>*</code>がついていればOK</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch</span><br><span class=\"line\"></span><br><span class=\"line\">* master</span><br><span class=\"line\">t</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-マージコマンドを実行する\"><a href=\"#2-マージコマンドを実行する\" class=\"headerlink\" title=\"2. マージコマンドを実行する\"></a>2. マージコマンドを実行する</h2><p><code>master</code>に<code>t</code>を取り込む(mergeする)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge t</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-1-正常に完了した場合\"><a href=\"#3-1-正常に完了した場合\" class=\"headerlink\" title=\"3.1 正常に完了した場合\"></a>3.1 正常に完了した場合</h2><h3 id=\"表示される内容のサンプル\"><a href=\"#表示される内容のサンプル\" class=\"headerlink\" title=\"表示される内容のサンプル\"></a>表示される内容のサンプル</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Updating d71dc36..bc5d29e</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> 1 | 2 +-</span><br><span class=\"line\"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br></pre></td></tr></table></figure>\n<p>正常にマージできているか確認する。このような表示が出ればOK</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">On branch master</span><br><span class=\"line\">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-2-コンフリクトが発生した場合\"><a href=\"#3-2-コンフリクトが発生した場合\" class=\"headerlink\" title=\"3.2 コンフリクトが発生した場合\"></a>3.2 コンフリクトが発生した場合</h2><h3 id=\"表示される内容のサンプル-1\"><a href=\"#表示される内容のサンプル-1\" class=\"headerlink\" title=\"表示される内容のサンプル\"></a>表示される内容のサンプル</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Auto-merging 1</span><br><span class=\"line\">CONFLICT (content): Merge conflict <span class=\"keyword\">in</span> 1</span><br><span class=\"line\">Automatic merge failed; fix conflicts and <span class=\"keyword\">then</span> commit the result.</span><br></pre></td></tr></table></figure>\n<h3 id=\"現在の状態を確認\"><a href=\"#現在の状態を確認\" class=\"headerlink\" title=\"現在の状態を確認\"></a>現在の状態を確認</h3><p><code>Unmerged paths</code>の部分のファイルがコンフリクトを起こしているファイルです。<br>今回のサンプルだと、<code>1</code> というファイルがコンフリクトを起こしています。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">On branch master</span><br><span class=\"line\">You have unmerged paths.</span><br><span class=\"line\">  (fix conflicts and run <span class=\"string\">&quot;git commit&quot;</span>)</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git merge --abort&quot;</span> to abort the merge)</span><br><span class=\"line\"></span><br><span class=\"line\">Unmerged paths:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git add &lt;file&gt;...&quot;</span> to mark resolution)</span><br><span class=\"line\">        both modified:   1</span><br><span class=\"line\"></span><br><span class=\"line\">no changes added to commit (use <span class=\"string\">&quot;git add&quot;</span> and/or <span class=\"string\">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"コンフリクトを解決するには\"><a href=\"#コンフリクトを解決するには\" class=\"headerlink\" title=\"コンフリクトを解決するには\"></a>コンフリクトを解決するには</h3><p>コンフリクトを起こしているファイルを開きます。そうすると、以下のような表記の部分があるはずです。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これはテスト文章です0</span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; <span class=\"string\">HEAD</span></span><br><span class=\"line\"><span class=\"string\">これはテスト文章です2</span></span><br><span class=\"line\"><span class=\"string\">=======</span></span><br><span class=\"line\"><span class=\"string\">これはテスト文章です3</span></span><br><span class=\"line\"><span class=\"string\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; t</span></span><br><span class=\"line\"><span class=\"string\">これはテスト文章です2</span></span><br></pre></td></tr></table></figure>\n<p>この<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code>から<code>=========</code>までが<code>変更を取り込むブランチの変更</code>、<code>==========</code>から<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; t</code>までが<code>変更を取り込まれるブランチの変更</code>です。</p>\n<p>変更を<code>取り込まない</code>方の変更点を消して、<code>&gt;&gt;&gt;</code>,<code>&lt;&lt;&lt;</code>,<code>===</code>のgitによって追加された部分をすべて消去します。</p>\n<p><code>変更を取り込むブランチ</code>(masterブランチ)の変更を適応する場合のファイルの編集例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">これはテスト文章です0</span><br><span class=\"line\">これはテスト文章です2</span><br><span class=\"line\">これはテスト文章です2</span><br></pre></td></tr></table></figure>\n<p>編集後、編集したファイルを<code>git add</code>してから、コミットします。</p>\n<p>add</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add 1</span><br></pre></td></tr></table></figure>\n<p>commit、マージのコミットの場合、<code>git commit</code>のみで自動的にコミットメッセージが生成されます。<code>git commit</code>を実行するとエディタが開くので(Vimの場合)<code>ZZ</code>をタイプして、エディタを抜けます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit </span><br></pre></td></tr></table></figure>\n<p>開かれたエディタ画面のサンプル</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Merge branch <span class=\"string\">&#x27;t&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Conflicts:</span></span><br><span class=\"line\"><span class=\"comment\">#\t1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># It looks like you may be committing a merge.</span></span><br><span class=\"line\"><span class=\"comment\"># If this is not correct, please run</span></span><br><span class=\"line\"><span class=\"comment\">#\tgit update-ref -d MERGE_HEAD</span></span><br><span class=\"line\"><span class=\"comment\"># and try again.</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Please enter the commit message for your changes. Lines starting</span></span><br><span class=\"line\"><span class=\"comment\"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># On branch master</span></span><br><span class=\"line\"><span class=\"comment\"># All conflicts fixed but you are still merging.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<p>最後に正常にマージできているか<code>git status</code>で確認して、以下のような表示になればOK</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">On branch master</span><br><span class=\"line\">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure>"}],"PostAsset":[{"_id":"source/_posts/XCodeでSwiftの練習/1.png","slug":"1.png","post":"cknezh374000cmzb6eqsjcu6m","modified":0,"renderable":0},{"_id":"source/_posts/XCodeでSwiftの練習/2.png","slug":"2.png","post":"cknezh374000cmzb6eqsjcu6m","modified":0,"renderable":0},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/Xcode起動時の確認画面.png","slug":"Xcode起動時の確認画面.png","post":"cknezh376000emzb63cw9cvzr","modified":0,"renderable":0},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/キーチェーン証明書作成.png","slug":"キーチェーン証明書作成.png","post":"cknezh376000emzb63cw9cvzr","modified":0,"renderable":0},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/ターミナル作業終了時にでるパスワード入力画面.png","slug":"ターミナル作業終了時にでるパスワード入力画面.png","post":"cknezh376000emzb63cw9cvzr","modified":0,"renderable":0},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/証明書作成時の入力内容.png","slug":"証明書作成時の入力内容.png","post":"cknezh376000emzb63cw9cvzr","modified":0,"renderable":0},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/証明書作成時の警告.png","slug":"証明書作成時の警告.png","post":"cknezh376000emzb63cw9cvzr","modified":0,"renderable":0},{"_id":"source/_posts/XcodeでVimキーバインドを使う「XVim2」/証明書完成.png","slug":"証明書完成.png","post":"cknezh376000emzb63cw9cvzr","modified":0,"renderable":0},{"_id":"source/_posts/【CSS】positionプロパティについて/position.png","slug":"position.png","post":"cknezh3890015mzb61rjq7ay8","modified":0,"renderable":0},{"_id":"source/_posts/【Blog】GoogleSerchConsoleにブログを認識させる/1.png","slug":"1.png","post":"cknezh395001pmzb6at8wdp4g","modified":0,"renderable":0},{"_id":"source/_posts/【Blog】GoogleSerchConsoleにブログを認識させる/2.png","slug":"2.png","post":"cknezh395001pmzb6at8wdp4g","modified":0,"renderable":0},{"_id":"source/_posts/【Blog】GoogleSerchConsoleにブログを認識させる/3.png","slug":"3.png","post":"cknezh395001pmzb6at8wdp4g","modified":0,"renderable":0},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/2.png","slug":"2.png","post":"cknezh3bu0036mzb6g96laz3z","modified":0,"renderable":0},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/3.png","slug":"3.png","post":"cknezh3bu0036mzb6g96laz3z","modified":0,"renderable":0},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/4.png","slug":"4.png","post":"cknezh3bu0036mzb6g96laz3z","modified":0,"renderable":0},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/5.png","slug":"5.png","post":"cknezh3bu0036mzb6g96laz3z","modified":0,"renderable":0},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/6.png","slug":"6.png","post":"cknezh3bu0036mzb6g96laz3z","modified":0,"renderable":0},{"_id":"source/_posts/【Ubuntu】キーボードの初期設定/7.png","slug":"7.png","post":"cknezh3bu0036mzb6g96laz3z","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/1.png","slug":"1.png","post":"cknezh3bw0038mzb6hczl6wso","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/2.png","slug":"2.png","post":"cknezh3bw0038mzb6hczl6wso","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/3.png","slug":"3.png","post":"cknezh3bw0038mzb6hczl6wso","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】2018-4以前バージョンから、2019-xへの更新時に「NetworkBehaviour-is-not-found」が出た時の対処法/4.png","slug":"4.png","post":"cknezh3bw0038mzb6hczl6wso","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】URPを導入する/1.png","slug":"1.png","post":"cknezh3bx003bmzb60zl303ig","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】URPを導入する/2.png","slug":"2.png","post":"cknezh3bx003bmzb60zl303ig","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】URPを導入する/3.png","slug":"3.png","post":"cknezh3bx003bmzb60zl303ig","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】URPを導入する/4.png","slug":"4.png","post":"cknezh3bx003bmzb60zl303ig","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】URPを導入する/5.png","slug":"5.png","post":"cknezh3bx003bmzb60zl303ig","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】URPを導入する/6.png","slug":"6.png","post":"cknezh3bx003bmzb60zl303ig","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】URPを導入する/7.png","slug":"7.png","post":"cknezh3bx003bmzb60zl303ig","modified":0,"renderable":0},{"_id":"source/_posts/【Unity】URPを導入する/8.png","slug":"8.png","post":"cknezh3bx003bmzb60zl303ig","modified":0,"renderable":0},{"_id":"source/_posts/【VSCode】開いたテキストが文字化けするときの対処法方/Search.png","slug":"Search.png","post":"cknezh3cj003fmzb67qz68hli","modified":0,"renderable":0},{"_id":"source/_posts/【VSCode】開いたテキストが文字化けするときの対処法方/Settings.png","slug":"Settings.png","post":"cknezh3cj003fmzb67qz68hli","modified":0,"renderable":0},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/Identifier.png","slug":"Identifier.png","post":"cknezh3cn003pmzb6dgkg8kd7","modified":0,"renderable":0},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/TableVIew.png","slug":"TableVIew.png","post":"cknezh3cn003pmzb6dgkg8kd7","modified":0,"renderable":0},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/TableView参照.gif","slug":"TableView参照.gif","post":"cknezh3cn003pmzb6dgkg8kd7","modified":0,"renderable":0},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/ラベル参照.gif","slug":"ラベル参照.gif","post":"cknezh3cn003pmzb6dgkg8kd7","modified":0,"renderable":0},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/ラベル追加.png","slug":"ラベル追加.png","post":"cknezh3cn003pmzb6dgkg8kd7","modified":0,"renderable":0},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/作成時オプション.png","slug":"作成時オプション.png","post":"cknezh3cn003pmzb6dgkg8kd7","modified":0,"renderable":0},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/作成済みチェック.png","slug":"作成済みチェック.png","post":"cknezh3cn003pmzb6dgkg8kd7","modified":0,"renderable":0},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/完成.png","slug":"完成.png","post":"cknezh3cn003pmzb6dgkg8kd7","modified":0,"renderable":0},{"_id":"source/_posts/【XCode】TableViewのCellをカスタマイズする/新規作成.png","slug":"新規作成.png","post":"cknezh3cn003pmzb6dgkg8kd7","modified":0,"renderable":0},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/EntryPointのアシスタントエリアでの表示.png","slug":"EntryPointのアシスタントエリアでの表示.png","post":"cknezh3cp003rmzb65lub9esd","modified":0,"renderable":0},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/EntryPointの矢印.png","slug":"EntryPointの矢印.png","post":"cknezh3cp003rmzb65lub9esd","modified":0,"renderable":0},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/EntryPoint変更(Inspector).gif","slug":"EntryPoint変更(Inspector).gif","post":"cknezh3cp003rmzb65lub9esd","modified":0,"renderable":0},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/EntryPoint変更(マウス).gif","slug":"EntryPoint変更(マウス).gif","post":"cknezh3cp003rmzb65lub9esd","modified":0,"renderable":0},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/Inspector.png","slug":"Inspector.png","post":"cknezh3cp003rmzb65lub9esd","modified":0,"renderable":0},{"_id":"source/_posts/【Xcode】EntryPointを変更する方法/最終確認.gif","slug":"最終確認.gif","post":"cknezh3cp003rmzb65lub9esd","modified":0,"renderable":0},{"_id":"source/_posts/【GitHub】既存のローカルリポジトリをGitHubで管理する/GitHub画面.png","slug":"GitHub画面.png","post":"cknflkxu60001rwb658le4li8","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cknezh36p0004mzb6cc922uuc","category_id":"cknezh36r0006mzb662wt2l6e","_id":"cknezh377000fmzb6c0be7hkt"}],"PostTag":[{"post_id":"cknezh373000amzb6ehl6aycg","tag_id":"cknezh36o0003mzb6f5k1e43x","_id":"cknezh376000dmzb6ehwa49en"},{"post_id":"cknezh34r0001mzb6c0dcb9th","tag_id":"cknezh36o0003mzb6f5k1e43x","_id":"cknezh37y000imzb61w3cbzck"},{"post_id":"cknezh34r0001mzb6c0dcb9th","tag_id":"cknezh36r0008mzb6746w7qua","_id":"cknezh383000kmzb654djdhnd"},{"post_id":"cknezh34r0001mzb6c0dcb9th","tag_id":"cknezh374000bmzb6ho6rcgoi","_id":"cknezh384000nmzb6fl8t3uq4"},{"post_id":"cknezh36h0002mzb64pgcfgrm","tag_id":"cknezh36o0003mzb6f5k1e43x","_id":"cknezh384000pmzb6fpry56ah"},{"post_id":"cknezh385000rmzb6fk5dfrj9","tag_id":"cknezh36o0003mzb6f5k1e43x","_id":"cknezh386000tmzb67tum2f8g"},{"post_id":"cknezh36p0004mzb6cc922uuc","tag_id":"cknezh383000lmzb6c0c8e6zf","_id":"cknezh386000wmzb6hr8c7qdv"},{"post_id":"cknezh36p0004mzb6cc922uuc","tag_id":"cknezh384000qmzb657kt1rjm","_id":"cknezh387000ymzb67h9vcy33"},{"post_id":"cknezh36q0005mzb6epdgf6t7","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh3880012mzb61iq70x2r"},{"post_id":"cknezh36r0007mzb6771k50qh","tag_id":"cknezh3870010mzb6geviay4q","_id":"cknezh3890016mzb6gwei5lx1"},{"post_id":"cknezh3700009mzb61zx74h99","tag_id":"cknezh3890014mzb68265dpvh","_id":"cknezh38a001amzb6arl0hje5"},{"post_id":"cknezh374000cmzb6eqsjcu6m","tag_id":"cknezh38a0018mzb6bm8pb5d3","_id":"cknezh38c001emzb63wevfmq1"},{"post_id":"cknezh376000emzb63cw9cvzr","tag_id":"cknezh36o0003mzb6f5k1e43x","_id":"cknezh38u001jmzb6fal65onq"},{"post_id":"cknezh376000emzb63cw9cvzr","tag_id":"cknezh38b001dmzb67wsbe2ka","_id":"cknezh38v001lmzb68rsib00w"},{"post_id":"cknezh37o000hmzb62slh2bxe","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh395001omzb62q0903aw"},{"post_id":"cknezh37z000jmzb607ar4lpl","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh39l001smzb682p02mb9"},{"post_id":"cknezh395001pmzb6at8wdp4g","tag_id":"cknezh383000lmzb6c0c8e6zf","_id":"cknezh39l001umzb6424b491e"},{"post_id":"cknezh383000mmzb6hcrbbmir","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh39m001xmzb607jdc5wu"},{"post_id":"cknezh384000omzb6aevf4jp0","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh3af0024mzb63ohj28eu"},{"post_id":"cknezh384000omzb6aevf4jp0","tag_id":"cknezh39n001zmzb6dqcy8rn9","_id":"cknezh3ag0026mzb64pnsg7kf"},{"post_id":"cknezh385000smzb68j015i6w","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh3ah0029mzb682kkakzr"},{"post_id":"cknezh386000umzb601la7c7a","tag_id":"cknezh3ag0027mzb60ozb9mbj","_id":"cknezh3as002gmzb61jqc5yu1"},{"post_id":"cknezh386000umzb601la7c7a","tag_id":"cknezh3ah002bmzb67wk7heqz","_id":"cknezh3at002imzb61efnepq9"},{"post_id":"cknezh386000xmzb6hn0i0801","tag_id":"cknezh3ar002fmzb67l8ibdg2","_id":"cknezh3b5002pmzb65fkz0or1"},{"post_id":"cknezh386000xmzb6hn0i0801","tag_id":"cknezh3at002kmzb643tm4nfc","_id":"cknezh3b6002rmzb65jtxgh16"},{"post_id":"cknezh387000zmzb69y14gdfl","tag_id":"cknezh3ag0027mzb60ozb9mbj","_id":"cknezh3b7002umzb6e3nz8ibo"},{"post_id":"cknezh3880011mzb6hzlxc0g4","tag_id":"cknezh39n001zmzb6dqcy8rn9","_id":"cknezh3bi002ymzb6hvoc4fjs"},{"post_id":"cknezh3880013mzb62xnb7ly8","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3bk0032mzb6escncl5o"},{"post_id":"cknezh3bi002zmzb67m0z8q1n","tag_id":"cknezh3890014mzb68265dpvh","_id":"cknezh3bu0034mzb608mc6uq9"},{"post_id":"cknezh3890015mzb61rjq7ay8","tag_id":"cknezh39n001zmzb6dqcy8rn9","_id":"cknezh3bw0037mzb60f1odj1c"},{"post_id":"cknezh3bp0033mzb69u7n8vmr","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3bx0039mzb6bwpeeeqk"},{"post_id":"cknezh3890017mzb67o9igc3k","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3c4003cmzb67qlt4wxr"},{"post_id":"cknezh38a0019mzb6ecie85nw","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3cl003gmzb60p2dbing"},{"post_id":"cknezh38a001bmzb6h5hs2xp7","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3cm003kmzb605y5ev61"},{"post_id":"cknezh38b001cmzb6a61pfr6a","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3cn003omzb66of77wmx"},{"post_id":"cknezh38c001fmzb6ezry9z3j","tag_id":"cknezh39n001zmzb6dqcy8rn9","_id":"cknezh3cq003smzb6bir589ms"},{"post_id":"cknezh3cn003pmzb6dgkg8kd7","tag_id":"cknezh38b001dmzb67wsbe2ka","_id":"cknezh3cq003umzb69r53eha7"},{"post_id":"cknezh3cn003pmzb6dgkg8kd7","tag_id":"cknezh3890014mzb68265dpvh","_id":"cknezh3cr003xmzb62ee9ct48"},{"post_id":"cknezh3cp003rmzb65lub9esd","tag_id":"cknezh38a0018mzb6bm8pb5d3","_id":"cknezh3cr003ymzb6bk265bbu"},{"post_id":"cknezh3cp003rmzb65lub9esd","tag_id":"cknezh3890014mzb68265dpvh","_id":"cknezh3cr0040mzb6ef0pfc0o"},{"post_id":"cknezh38c001gmzb63f1teq3f","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3cr0041mzb6dzutg0xj"},{"post_id":"cknezh3cq003tmzb6hnpb224p","tag_id":"cknezh39n001zmzb6dqcy8rn9","_id":"cknezh3cs0043mzb67xmacplg"},{"post_id":"cknezh38r001imzb670h1097b","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3cs0044mzb6bq05eb0v"},{"post_id":"cknezh38u001kmzb6730n16yi","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3cs0046mzb6hz09f8vu"},{"post_id":"cknezh391001nmzb613m0874m","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3cs0047mzb6f9i231yc"},{"post_id":"cknezh39k001rmzb62daw1am1","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3ct0049mzb6gf7m5x9b"},{"post_id":"cknezh39l001tmzb6gv641loe","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3ct004bmzb6ggapa5ww"},{"post_id":"cknezh39m001wmzb6ba2ngzid","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3ct004dmzb642loft3r"},{"post_id":"cknezh39m001ymzb6dvma6y52","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3cu004fmzb6cp2j2kp7"},{"post_id":"cknezh39r0020mzb649nb5qid","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3cu004hmzb6fu1p5n3v"},{"post_id":"cknezh3a00021mzb6f6umf6hr","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3cu004jmzb6eidgch0u"},{"post_id":"cknezh3ac0023mzb6bmaa0z0l","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d1004lmzb65b6w5o2s"},{"post_id":"cknezh3af0025mzb6e9lh7grg","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d3004nmzb62r5ifguk"},{"post_id":"cknezh3ag0028mzb66wul0vd3","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d3004pmzb62p8b4emh"},{"post_id":"cknezh3ah002amzb68ncydk1q","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d4004rmzb623iy4tmj"},{"post_id":"cknezh3an002cmzb65syhhu19","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d4004tmzb67co727me"},{"post_id":"cknezh3ar002dmzb66js029lj","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d4004vmzb69zega1fq"},{"post_id":"cknezh3ar002emzb64twc5wyx","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d5004xmzb642a87ga4"},{"post_id":"cknezh3as002hmzb6hosgcuq9","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d5004zmzb61aqm1vnu"},{"post_id":"cknezh3at002jmzb61mk51rio","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d50051mzb68o52gy2v"},{"post_id":"cknezh3au002lmzb63gcacczi","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d50053mzb6dxfr8fhq"},{"post_id":"cknezh3au002mmzb63nx57p3f","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d60055mzb616vw7kib"},{"post_id":"cknezh3b1002omzb66jrv81po","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknezh3d70057mzb61n4eb2wl"},{"post_id":"cknezh3b5002qmzb6fxrf4zru","tag_id":"cknezh3d60056mzb69jmmfujd","_id":"cknezh3d80059mzb6es68atln"},{"post_id":"cknezh3b5002qmzb6fxrf4zru","tag_id":"cknezh3ag0027mzb60ozb9mbj","_id":"cknezh3d8005amzb62q0330v4"},{"post_id":"cknezh3b5002qmzb6fxrf4zru","tag_id":"cknezh3ah002bmzb67wk7heqz","_id":"cknezh3d8005cmzb6hd9e51ct"},{"post_id":"cknezh3b6002tmzb61z8kaig0","tag_id":"cknezh3d80058mzb6hz7t4uhi","_id":"cknezh3d8005dmzb62ukr88dm"},{"post_id":"cknezh3b7002vmzb6fn3m729r","tag_id":"cknezh3d8005bmzb6aa7iduce","_id":"cknezh3d9005gmzb6b7vi71vx"},{"post_id":"cknezh3b7002vmzb6fn3m729r","tag_id":"cknezh3d8005emzb6blwq3czm","_id":"cknezh3d9005hmzb67yrh57pu"},{"post_id":"cknezh3bj0031mzb65q0vd30a","tag_id":"cknezh3d8005fmzb66kckfvmy","_id":"cknezh3d9005jmzb65gerekrp"},{"post_id":"cknezh3bu0036mzb6g96laz3z","tag_id":"cknezh3d8005bmzb6aa7iduce","_id":"cknezh3d9005mmzb62h998qip"},{"post_id":"cknezh3bu0036mzb6g96laz3z","tag_id":"cknezh3d9005kmzb61lhm0nvx","_id":"cknezh3d9005nmzb6bjd5abdd"},{"post_id":"cknezh3bw0038mzb6hczl6wso","tag_id":"cknezh3d9005lmzb69mhr69th","_id":"cknezh3da005pmzb6cieu2wbv"},{"post_id":"cknezh3bx003bmzb60zl303ig","tag_id":"cknezh3d9005lmzb69mhr69th","_id":"cknezh3da005rmzb63frxgjg5"},{"post_id":"cknezh3cb003dmzb68q4k095l","tag_id":"cknezh3d9005lmzb69mhr69th","_id":"cknezh3da005umzb6fq7fch1h"},{"post_id":"cknezh3cb003dmzb68q4k095l","tag_id":"cknezh3da005smzb67t0o0w3b","_id":"cknezh3da005vmzb6do9f83f5"},{"post_id":"cknezh3cj003fmzb67qz68hli","tag_id":"cknezh3da005tmzb60nekdhts","_id":"cknezh3db005xmzb69gcvayim"},{"post_id":"cknezh3cl003hmzb6f9yma189","tag_id":"cknezh36o0003mzb6f5k1e43x","_id":"cknezh3db005zmzb61zzu1lsr"},{"post_id":"cknezh3cl003hmzb6f9yma189","tag_id":"cknezh3da005wmzb65liacrkz","_id":"cknezh3db0060mzb66gv8eoqj"},{"post_id":"cknezh3cm003jmzb6292chpd7","tag_id":"cknezh3d8005fmzb66kckfvmy","_id":"cknezh3db0062mzb68fqe5iwu"},{"post_id":"cknezh3cn003nmzb68hia61wl","tag_id":"cknezh3db0061mzb67pzz2ag6","_id":"cknezh3db0065mzb67182fy09"},{"post_id":"cknezh3cn003nmzb68hia61wl","tag_id":"cknezh3db0063mzb6dv7q9e60","_id":"cknezh3db0066mzb61crc00ib"},{"post_id":"cknezh3cq003wmzb6hu9u3qjy","tag_id":"cknezh3db0064mzb61txa5zd7","_id":"cknezh3dc0067mzb630wyc4mv"},{"post_id":"cknezh3dp0068mzb6835jeh4y","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh3du006amzb6eq3zg1oa"},{"post_id":"cknezh3dt0069mzb69tjmabte","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh3du006cmzb6d4zu2nfb"},{"post_id":"cknezh3du006bmzb64veb1fjp","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh3dv006emzb6ade798nm"},{"post_id":"cknezh3dv006dmzb6ba0ee5e3","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh3dv006gmzb60tcfhqr0"},{"post_id":"cknezh3dv006fmzb62ist5ue1","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh3dw006imzb6bmpe6kbr"},{"post_id":"cknezh3dv006hmzb69jdu3lx0","tag_id":"cknezh386000vmzb687p6adk8","_id":"cknezh3ed006kmzb6f9u74gmw"},{"post_id":"cknezh3dw006jmzb6bcrj1eqb","tag_id":"cknezh3890014mzb68265dpvh","_id":"cknezh3ej006mmzb668mggvha"},{"post_id":"cknezh3ee006lmzb60cg5dp8d","tag_id":"cknezh36o0003mzb6f5k1e43x","_id":"cknezh3ej006omzb6fsckhdri"},{"post_id":"cknezh3ee006lmzb60cg5dp8d","tag_id":"cknezh3ej006nmzb6h91786pj","_id":"cknezh3ej006pmzb62zdl5djy"},{"post_id":"cknf38imh00006tb680rrfw9k","tag_id":"cknezh3d8005fmzb66kckfvmy","_id":"cknf38in700026tb6ftl88fg2"},{"post_id":"cknf38in300016tb6b5ffbdwk","tag_id":"cknezh3d8005fmzb66kckfvmy","_id":"cknf38in700036tb6dz8j8035"},{"post_id":"cknflkxtf0000rwb6fdrudjzi","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknflkxua0002rwb697ax7c6v"},{"post_id":"cknflkxu60001rwb658le4li8","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknflkxua0003rwb66ef7hrcq"},{"post_id":"cknflkxu60001rwb658le4li8","tag_id":"cknezh384000qmzb657kt1rjm","_id":"cknflkxua0004rwb64aom7hj4"},{"post_id":"cknflkxug0005rwb60e64dm81","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknflkxuh0007rwb67clt1vqc"},{"post_id":"cknflkxug0006rwb69vp1f1af","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknflkxuk0009rwb6bvdfg540"},{"post_id":"cknflkxuh0008rwb621lw216y","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknflkxul000brwb6049zgngy"},{"post_id":"cknflkxul000arwb621xg9ldu","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknflkxum000crwb64z5nh6r5"},{"post_id":"cknfpniuv00008pb6a34d4uc3","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknfpnivk00018pb652uxh09v"},{"post_id":"cknlwhnof0000z3b69dkca70o","tag_id":"cknezh3bc002wmzb66d3yboi4","_id":"cknlwhnpo0001z3b6gj8lcnqj"}],"Tag":[{"name":"Vim","_id":"cknezh36o0003mzb6f5k1e43x"},{"name":"AppleScript","_id":"cknezh36r0008mzb6746w7qua"},{"name":"自動化","_id":"cknezh374000bmzb6ho6rcgoi"},{"name":"Hexo","_id":"cknezh383000lmzb6c0c8e6zf"},{"name":"GitHub","_id":"cknezh384000qmzb657kt1rjm"},{"name":"HTML","_id":"cknezh386000vmzb687p6adk8"},{"name":"Markdown","_id":"cknezh3870010mzb6geviay4q"},{"name":"Swift","_id":"cknezh3890014mzb68265dpvh"},{"name":"Xcode","_id":"cknezh38a0018mzb6bm8pb5d3"},{"name":"XCode","_id":"cknezh38b001dmzb67wsbe2ka"},{"name":"CSS","_id":"cknezh39n001zmzb6dqcy8rn9"},{"name":"Android Studio","_id":"cknezh3ag0027mzb60ozb9mbj"},{"name":"Kotlin","_id":"cknezh3ah002bmzb67wk7heqz"},{"name":"zsh","_id":"cknezh3ar002fmzb67l8ibdg2"},{"name":"alias","_id":"cknezh3at002kmzb643tm4nfc"},{"name":"Git","_id":"cknezh3bc002wmzb66d3yboi4"},{"name":"Android","_id":"cknezh3d60056mzb69jmmfujd"},{"name":"Mac","_id":"cknezh3d80058mzb6hz7t4uhi"},{"name":"Linux","_id":"cknezh3d8005bmzb6aa7iduce"},{"name":"Linuxコマンド","_id":"cknezh3d8005emzb6blwq3czm"},{"name":"Shell","_id":"cknezh3d8005fmzb66kckfvmy"},{"name":"Ubuntu","_id":"cknezh3d9005kmzb61lhm0nvx"},{"name":"Unity","_id":"cknezh3d9005lmzb69mhr69th"},{"name":"Visual Studio","_id":"cknezh3da005smzb67t0o0w3b"},{"name":"VSCode","_id":"cknezh3da005tmzb60nekdhts"},{"name":"Vimプラグイン","_id":"cknezh3da005wmzb65liacrkz"},{"name":"Windows","_id":"cknezh3db0061mzb67pzz2ag6"},{"name":"Windows API","_id":"cknezh3db0063mzb6dv7q9e60"},{"name":"Zsh","_id":"cknezh3db0064mzb61txa5zd7"},{"name":"VimPlugin","_id":"cknezh3ej006nmzb6h91786pj"}]}}